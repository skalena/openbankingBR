{
  "swagger": "2.0",
  "info": {
    "description": "Apache Fineract is a secure, multi-tenanted microfinance platform.            \n\nThe goal of the Apache Fineract API is to empower developers to build apps on top of the Apache Fineract Platform. The reference app [  https://localhost:8443/openbanking/  ] (username: mifos, password: password) works on the same demo tenant as the interactive links in this documentation.\n\nThe API                 is organized around REST [ https://en.wikipedia.org/wiki/Representational_state_transfer ]               <br/> Find out more about Apache Fineract on [ https://demo.openmf.org/api-docs/apiLive.htm#top ]              <br/> You can Try The API From Your Browser itself at [ https://demo.openmf.org/api-docs/apiLive.htm#interact ]              <br/> The Generic Options are available at [ https://demo.openmf.org/api-docs/apiLive.htm#genopts ]              <br/> Find out more about Updating Dates and Numbers at [ https://demo.openmf.org/api-docs/apiLive.htm#dates_and_numbers ]              <br/> For the Authentication and the Basic of HTTP and HTTPS refer [ https://demo.openmf.org/api-docs/apiLive.htm#authentication_overview ]              <br/> Check about ERROR codes at [ https://demo.openmf.org/api-docs/apiLive.htm#errors ]               <br/> <br/> Please refer to the old documentation for any documentation queries [ https://demo.openmf.org/api-docs/apiLive.htm ]              <br/>             ______________________________________________________________________________________________________________________________          ",
    "version": "1.0.0",
    "title": "Apache Fineract API Documentation",
    "termsOfService": "https://demo.openmf.org/api-docs/apiLive.htm",
    "contact": {
      "name": "https://gitter.im/openMF/mifos"
    }
  },
  "host": "skalena-api.brazilsouth.cloudapp.azure.com:8443",
  "basePath": "/fineract-provider/api/v1",
  "tags": [
    {
      "name": "Periodic Accrual Accounting"
    },
    {
      "name": "Accounting Closure"
    },
    {
      "name": "Mapping Financial Activities to Accounts"
    },
    {
      "name": "General Ledger Account"
    },
    {
      "name": "Journal Entries"
    },
    {
      "name": "Provisioning Entries"
    },
    {
      "name": "Accounting Rules"
    },
    {
      "name": "Batch API"
    },
    {
      "name": "Audits"
    },
    {
      "name": "Maker Checker (or 4-eye) functionality"
    },
    {
      "name": "Account number format"
    },
    {
      "name": "Cache"
    },
    {
      "name": "SMS Campaigns"
    },
    {
      "name": "Code Values"
    },
    {
      "name": "Codes"
    },
    {
      "name": "External Services"
    },
    {
      "name": "Global Configuration"
    },
    {
      "name": "CreditBureau Configuration"
    },
    {
      "name": "Data Tables"
    },
    {
      "name": "Entity-Datatable Checks"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Run Reports"
    },
    {
      "name": "Documents"
    },
    {
      "name": "DomainNameapiv1{entity}{entityId}images"
    },
    {
      "name": "DomainNameapiv1entitytoentitymapping"
    },
    {
      "name": "Hooks"
    },
    {
      "name": "Scheduler"
    },
    {
      "name": "MIFOSX-BATCH JOBS"
    },
    {
      "name": "Report Mailing Jobs"
    },
    {
      "name": "List Report Mailing Job History"
    },
    {
      "name": "Authentication HTTP Basic"
    },
    {
      "name": "Fetch authenticated user details"
    },
    {
      "name": "SMS"
    },
    {
      "name": "Likelihood"
    },
    {
      "name": "Poverty Line"
    },
    {
      "name": "Survey"
    },
    {
      "name": "Mix Report"
    },
    {
      "name": "Mix Taxonomy"
    },
    {
      "name": "Mix Mapping"
    },
    {
      "name": "Holidays"
    },
    {
      "name": "Currency"
    },
    {
      "name": "officetransactions"
    },
    {
      "name": "Offices"
    },
    {
      "name": "Provisioning Category"
    },
    {
      "name": "Provisioning Criteria"
    },
    {
      "name": "Staff"
    },
    {
      "name": "cashiers"
    },
    {
      "name": "Teller Cash Management"
    },
    {
      "name": "cashiersjournal"
    },
    {
      "name": "Working days"
    },
    {
      "name": "Clients Address"
    },
    {
      "name": "Client Charges"
    },
    {
      "name": "Client Identifier Api"
    },
    {
      "name": "Client Transaction"
    },
    {
      "name": "Client Api"
    },
    {
      "name": "SPM API - LookUp Table"
    },
    {
      "name": "SPM - Scorecards"
    },
    {
      "name": "SPM - Serveys"
    },
    {
      "name": "User Generated Documents"
    },
    {
      "name": "Password preferences"
    },
    {
      "name": "Permissions"
    },
    {
      "name": "Roles"
    },
    {
      "name": "Users"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/runaccruals": {
      "post": {
        "tags": [
          "Periodic Accrual Accounting"
        ],
        "summary": "Executes Periodic Accrual Accounting",
        "description": "Mandatory Fields\n\ntillDate\n",
        "operationId": "executePeriodicAccrualAccounting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request Body\n\nField Descriptions: \ntillDate: \nwhich specifies periodic accruals should happen till the given Date",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runaccrualsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/glclosures": {
      "get": {
        "tags": [
          "Accounting Closure"
        ],
        "summary": "List Accounting closures",
        "description": "Example Requests:\n\nglclosures",
        "operationId": "retrieveAllClosures",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetGLClosureResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounting Closure"
        ],
        "summary": "Create an Accounting Closure",
        "description": "Mandatory Fields\nofficeId,closingDate",
        "operationId": "createGLClosure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostGLCLosuresRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostGlClosuresResponse"
            }
          }
        }
      }
    },
    "/glclosures/{glClosureId}": {
      "get": {
        "tags": [
          "Accounting Closure"
        ],
        "summary": "Retrieve an Accounting Closure",
        "description": "Example Requests:\n\nglclosures/1\n\n\n/glclosures/1?fields=officeName,closingDate",
        "operationId": "retreiveClosure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "glClosureId",
            "in": "path",
            "description": "glClosureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetGLClosureResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounting Closure"
        ],
        "summary": "Update an Accounting closure",
        "description": "Once an accounting closure is created, only the comments associated with it may be edited",
        "operationId": "updateGLClosure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "glClosureId",
            "in": "path",
            "description": "glClosureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutGlClosuresRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutGlClosuresResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounting Closure"
        ],
        "summary": "Delete an accounting closure",
        "description": "Note: Only the latest accounting closure associated with a branch may be deleted.",
        "operationId": "deleteGLClosure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "glClosureId",
            "in": "path",
            "description": "glclosureId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteGlClosuresResponse"
            }
          }
        }
      }
    },
    "/financialactivityaccounts": {
      "get": {
        "tags": [
          "Mapping Financial Activities to Accounts"
        ],
        "summary": "List Financial Activities to Accounts Mappings",
        "description": "Example Requests:\n\nfinancialactivityaccounts",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetFinancialActivityAccountsResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Mapping Financial Activities to Accounts"
        ],
        "summary": "Create a new Financial Activity to Accounts Mapping",
        "description": "Mandatory Fields\nfinancialActivityId, glAccountId",
        "operationId": "createGLAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Request body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostFinancialActivityAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostFinancialActivityAccountsResponse"
            }
          }
        }
      }
    },
    "/financialactivityaccounts/{mappingId}": {
      "get": {
        "tags": [
          "Mapping Financial Activities to Accounts"
        ],
        "summary": "Retrieve a Financial Activity to Account Mapping\n",
        "description": "Example Requests:\n\nfinancialactivityaccounts/1",
        "operationId": "retreive",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mappingId",
            "in": "path",
            "description": "mappingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetFinancialActivityAccountsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Mapping Financial Activities to Accounts"
        ],
        "summary": "Update a Financial Activity to Account Mapping",
        "description": "the API updates the Ledger account linked to a Financial Activity \n",
        "operationId": "updateGLAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mappingId",
            "in": "path",
            "description": "mappingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Request body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostFinancialActivityAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutFinancialActivityAccountsResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Mapping Financial Activities to Accounts"
        ],
        "summary": "Delete a Financial Activity to Account Mapping",
        "description": "",
        "operationId": "deleteGLAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mappingId",
            "in": "path",
            "description": "mappingId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeleteFinancialActivityAccountsResponse"
            }
          }
        }
      }
    },
    "/financialactivityaccounts/template": {
      "get": {
        "tags": [
          "Mapping Financial Activities to Accounts"
        ],
        "operationId": "retrieveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/glaccounts/template": {
      "get": {
        "tags": [
          "General Ledger Account"
        ],
        "summary": "Retrieve GL Accounts Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\nExample Request:\n\nglaccounts/template\nglaccounts/template?type=1\n\ntype is optional and integer value from 1 to 5.\n\n1.Assets \n2.Liabilities \n3.Equity \n4.Income \n5.Expenses",
        "operationId": "retrieveNewAccountDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetGLAccountsTemplateResponse"
            }
          }
        }
      }
    },
    "/glaccounts": {
      "get": {
        "tags": [
          "General Ledger Account"
        ],
        "summary": "List General Ledger Accounts",
        "description": "ARGUMENTS\ntype Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional\nExample Requests:\n\nglaccounts\n\n\nglaccounts?type=1&manualEntriesAllowed=true&usage=1&disabled=false\n\nglaccounts?fetchRunningBalance=true",
        "operationId": "retrieveAllAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "type",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "searchParam",
            "in": "query",
            "description": "searchParam",
            "required": false,
            "type": "string"
          },
          {
            "name": "usage",
            "in": "query",
            "description": "usage",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "manualEntriesAllowed",
            "in": "query",
            "description": "manualEntriesAllowed",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "disabled",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fetchRunningBalance",
            "in": "query",
            "description": "fetchRunningBalance",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetGLAccountsResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "General Ledger Account"
        ],
        "summary": "Create a General Ledger Account",
        "description": "Note: You may optionally create Hierarchical Chart of Accounts by using the \"parentId\" property of an Account\nMandatory Fields: \nname, glCode, type, usage and manualEntriesAllowed",
        "operationId": "createGLAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostGLAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostGLAccountsResponse"
            }
          }
        }
      }
    },
    "/glaccounts/{glAccountId}": {
      "get": {
        "tags": [
          "General Ledger Account"
        ],
        "summary": "Retrieve a General Ledger Account",
        "description": "Example Requests:\n\nglaccounts/1\n\n\nglaccounts/1?template=true\n\n\nglaccounts/1?fields=name,glCode\n\n\nglaccounts/1?fetchRunningBalance=true",
        "operationId": "retreiveAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "glAccountId",
            "in": "path",
            "description": "glAccountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fetchRunningBalance",
            "in": "query",
            "description": "fetchRunningBalance",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetGLAccountsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "General Ledger Account"
        ],
        "summary": "Update an Accounting closure",
        "description": "Once an accounting closure is created, only the comments associated with it may be edited\n\n",
        "operationId": "updateGLAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "glAccountId",
            "in": "path",
            "description": "glAccountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutGLAccountsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutGLAccountsResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "General Ledger Account"
        ],
        "summary": "Delete an accounting closure",
        "description": "Note: Only the latest accounting closure associated with a branch may be deleted.",
        "operationId": "deleteGLAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "glAccountId",
            "in": "path",
            "description": "glAccountId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteGLAccountsRequest"
            }
          }
        }
      }
    },
    "/journalentries/{journalEntryId}": {
      "get": {
        "tags": [
          "Journal Entries"
        ],
        "summary": "Retrieve a single Entry",
        "description": "Example Requests:\n\njournalentries/1\n\n\n\njournalentries/1?fields=officeName,glAccountId,entryType,amount\n\njournalentries/1?runningBalance=true\n\njournalentries/1?transactionDetails=true",
        "operationId": "retreiveJournalEntryById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "journalEntryId",
            "in": "path",
            "description": "journalEntryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "runningBalance",
            "in": "query",
            "description": "runningBalance",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transactionDetails",
            "in": "query",
            "description": "transactionDetails",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/JournalEntryData"
            }
          }
        }
      }
    },
    "/journalentries": {
      "get": {
        "tags": [
          "Journal Entries"
        ],
        "summary": "List Journal Entries",
        "description": "The list capability of journal entries can support pagination and sorting.\n\nExample Requests:\n\njournalentries\n\njournalentries?transactionId=PB37X8Y21EQUY4S\n\njournalentries?officeId=1&manualEntriesOnly=true&fromDate=1 July 2013&toDate=15 July 2013&dateFormat=dd MMMM yyyy&locale=en\n\njournalentries?fields=officeName,glAccountName,transactionDate\n\njournalentries?offset=10&limit=50\n\njournalentries?orderBy=transactionId&sortOrder=DESC\n\njournalentries?runningBalance=true\n\njournalentries?transactionDetails=true\n\njournalentries?loanId=12\n\njournalentries?savingsId=24",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "glAccountId",
            "in": "query",
            "description": "glAccountId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "manualEntriesOnly",
            "in": "query",
            "description": "manualEntriesOnly",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "transactionId",
            "in": "query",
            "description": "transactionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "entityType",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "locale",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateFormat",
            "in": "query",
            "description": "dateFormat",
            "required": false,
            "type": "string"
          },
          {
            "name": "loanId",
            "in": "query",
            "description": "loanId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "savingsId",
            "in": "query",
            "description": "savingsId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "runningBalance",
            "in": "query",
            "description": "runningBalance",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transactionDetails",
            "in": "query",
            "description": "transactionDetails",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JournalEntryData"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Journal Entries"
        ],
        "summary": "Create \"Balanced\" Journal Entries",
        "description": "Note: A Balanced (simple) Journal entry would have atleast one \"Debit\" and one \"Credit\" entry whose amounts are equal \nCompound Journal entries may have \"n\" debits and \"m\" credits where both \"m\" and \"n\" are greater than 0 and the net sum or all debits and credits are equal \n\n\nMandatory Fields\nofficeId, transactionDate\n\n\ncredits- glAccountId, amount, comments\n\n \ndebits-  glAccountId, amount, comments\n\n \nOptional Fields\npaymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber",
        "operationId": "createGLJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/JournalEntryCommand"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostJournalEntriesResponse"
            }
          }
        }
      }
    },
    "/journalentries/{transactionId}": {
      "post": {
        "tags": [
          "Journal Entries"
        ],
        "summary": "Update Running balances for Journal Entries",
        "description": "This API calculates the running balances for office. If office ID not provided this API calculates running balances for all offices. \nMandatory Fields\nofficeId",
        "operationId": "createReversalJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "description": "transactionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostJournalEntriesTransactionIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostJournalEntriesTransactionIdResponse"
            }
          }
        }
      }
    },
    "/journalentries/provisioning": {
      "get": {
        "tags": [
          "Journal Entries"
        ],
        "operationId": "retrieveJournalEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "entryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/journalentries/openingbalance": {
      "get": {
        "tags": [
          "Journal Entries"
        ],
        "operationId": "retrieveOpeningBalance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/provisioningentries": {
      "get": {
        "tags": [
          "Provisioning Entries"
        ],
        "summary": "List all Provisioning Entries",
        "description": "",
        "operationId": "retrieveAllProvisioningEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProvisioningEntryData"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Provisioning Entries"
        ],
        "summary": "Create new Provisioning Entries",
        "description": "Creates a new Provisioning Entries\n\nMandatory Fields\ndate\ndateFormat\nlocale\nOptional Fields\ncreatejournalentries",
        "operationId": "createProvisioningEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostProvisioningEntriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostProvisioningEntriesResponse"
            }
          }
        }
      }
    },
    "/provisioningentries/{entryId}": {
      "get": {
        "tags": [
          "Provisioning Entries"
        ],
        "summary": "Retrieves a Provisioning Entry",
        "description": "Returns the details of a generated Provisioning Entry.",
        "operationId": "retrieveProvisioningEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "entryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProvisioningEntryData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Provisioning Entries"
        ],
        "summary": "Recreates Provisioning Entry",
        "description": "Recreates Provisioning Entry | createjournalentry.",
        "operationId": "modifyProvisioningEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "description": "entryId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "description": "command=createjournalentry\ncommand=recreateprovisioningentry",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutProvisioningEntriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutProvisioningEntriesResponse"
            }
          }
        }
      }
    },
    "/provisioningentries/entries": {
      "get": {
        "tags": [
          "Provisioning Entries"
        ],
        "operationId": "retrieveProviioningEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "productId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "categoryId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoanProductProvisioningEntryData"
            }
          }
        }
      }
    },
    "/accountingrules": {
      "get": {
        "tags": [
          "Accounting Rules"
        ],
        "summary": "Retrieve Accounting Rules",
        "description": "Returns the list of defined accounting rules.\n\nExample Requests:\n\naccountingrules",
        "operationId": "retrieveAllAccountingRules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetAccountRulesResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounting Rules"
        ],
        "summary": "Create/Define a Accounting rule",
        "description": "Define a new Accounting rule.\n\nMandatory Fields\nname, officeId,\naccountToDebit OR debitTags,\naccountToCredit OR creditTags.\n\nOptional Fields\ndescription",
        "operationId": "createAccountingRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostAccountingRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostAccountingRulesResponse"
            }
          }
        }
      }
    },
    "/accountingrules/{accountingRuleId}": {
      "get": {
        "tags": [
          "Accounting Rules"
        ],
        "summary": "Retrieve a Accounting rule",
        "description": "Returns the details of a defined Accounting rule.\n\nExample Requests:\n\naccountingrules/1",
        "operationId": "retreiveAccountingRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountingRuleId",
            "in": "path",
            "description": "accountingRuleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccountingRuleData"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Accounting Rules"
        ],
        "summary": "Update a Accounting Rule",
        "description": "Updates the details of a Accounting rule.",
        "operationId": "updateAccountingRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountingRuleId",
            "in": "path",
            "description": "accountingRuleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PutAccountingRulesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutAccountingRulesResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Accounting Rules"
        ],
        "summary": "Delete a Accounting Rule",
        "description": "Deletes a Accounting rule.",
        "operationId": "deleteAccountingRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountingRuleId",
            "in": "path",
            "description": "accountingRuleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteAccountingRulesResponse"
            }
          }
        }
      }
    },
    "/accountingrules/template": {
      "get": {
        "tags": [
          "Accounting Rules"
        ],
        "summary": "Retrieve Accounting Rule Details Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\nExample Request:\n\naccountingrules/template",
        "operationId": "retrieveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAccountRulesTemplateResponse"
            }
          }
        }
      }
    },
    "/batches": {
      "post": {
        "tags": [
          "Batch API"
        ],
        "summary": "Batch requests in a single transaction",
        "description": "The Apache Fineract Batch API is also capable of executing all the requests in a single transaction, by setting a Query Parameter, \"enclosingTransaction=true\". So, if one or more of the requests in a batch returns an erroneous response all of the Data base transactions made by other successful requests will be rolled back.\n\nIf there has been a rollback in a transaction then a single response will be provided, with a '400' status code and a body consisting of the error details of the first failed request.",
        "operationId": "handleBatchRequests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enclosingTransaction",
            "in": "query",
            "description": "enclosingTransaction",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "request body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostBatchesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BatchResponse"
            }
          }
        }
      }
    },
    "/audits/{auditId}": {
      "get": {
        "tags": [
          "Audits"
        ],
        "summary": "Retrieve an Audit Entry",
        "description": "Example Requests:\n\naudits/20\naudits/20?fields=madeOnDate,maker,processingResult",
        "operationId": "retrieveAuditEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "description": "auditId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetMakerCheckerResponse"
            }
          }
        }
      }
    },
    "/audits/searchtemplate": {
      "get": {
        "tags": [
          "Audits"
        ],
        "summary": "Audit Search Template",
        "description": "This is a convenience resource. It can be useful when building an Audit Search UI. \"appUsers\" are data scoped to the office/branch the requestor is associated with.\n\nExample Requests:\n\naudits/searchtemplate\naudits/searchtemplate?fields=actionNames",
        "operationId": "retrieveAuditSearchTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetMakerCheckersSearchTemplateResponse"
            }
          }
        }
      }
    },
    "/audits": {
      "get": {
        "tags": [
          "Audits"
        ],
        "summary": "List Audits",
        "description": "Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending order, and are within the requestors' data scope. Also it supports pagination and sorting\n\nExample Requests:\n\naudits\n\naudits?fields=madeOnDate,maker,processingResult\n\naudits?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00\n\naudits?officeId=1\n\naudits?officeId=1&includeJson=true",
        "operationId": "retrieveAuditEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "query",
            "description": "actionName",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "query",
            "description": "entityName",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "resourceId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "makerId",
            "in": "query",
            "description": "makerId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "makerDateTimeFrom",
            "in": "query",
            "description": "makerDateTimeFrom",
            "required": false,
            "type": "string"
          },
          {
            "name": "makerDateTimeTo",
            "in": "query",
            "description": "makerDateTimeTo",
            "required": false,
            "type": "string"
          },
          {
            "name": "checkerId",
            "in": "query",
            "description": "checkerId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "checkerDateTimeFrom",
            "in": "query",
            "description": "checkerDateTimeFrom",
            "required": false,
            "type": "string"
          },
          {
            "name": "checkerDateTimeTo",
            "in": "query",
            "description": "checkerDateTimeTo",
            "required": false,
            "type": "string"
          },
          {
            "name": "processingResult",
            "in": "query",
            "description": "processingResult",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "groupId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loanid",
            "in": "query",
            "description": "loanid",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "savingsAccountId",
            "in": "query",
            "description": "savingsAccountId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paged",
            "in": "query",
            "description": "paged",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetMakerCheckerResponse"
              }
            }
          }
        }
      }
    },
    "/makercheckers/searchtemplate": {
      "get": {
        "tags": [
          "Maker Checker (or 4-eye) functionality"
        ],
        "summary": "Maker Checker Search Template",
        "description": "This is a convenience resource. It can be useful when building a Checker Inbox UI. \"appUsers\" are data scoped to the office/branch the requestor is associated with. \"actionNames\" and \"entityNames\" returned are those that the requestor has Checker approval permissions for.\n\nExample Requests:\n\nmakercheckers/searchtemplate\nmakercheckers/searchtemplate?fields=entityNames",
        "operationId": "retrieveAuditSearchTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetMakerCheckersSearchTemplateResponse"
            }
          }
        }
      }
    },
    "/makercheckers": {
      "get": {
        "tags": [
          "Maker Checker (or 4-eye) functionality"
        ],
        "summary": "List Maker Checker Entries",
        "description": "Get a list of entries that can be checked by the requestor that match the criteria supplied.\n\nExample Requests:\n\nmakercheckers\n\nmakercheckers?fields=madeOnDate,maker,processingResult\n\nmakercheckers?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00\n\nmakercheckers?officeId=1\n\nmakercheckers?officeId=1&includeJson=true",
        "operationId": "retrieveCommands",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "actionName",
            "in": "query",
            "description": "actionName",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityName",
            "in": "query",
            "description": "entityName",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceId",
            "in": "query",
            "description": "resourceId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "makerId",
            "in": "query",
            "description": "makerId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "makerDateTimeFrom",
            "in": "query",
            "description": "makerDateTimeFrom",
            "required": false,
            "type": "string"
          },
          {
            "name": "makerDateTimeTo",
            "in": "query",
            "description": "makerDateTimeTo",
            "required": false,
            "type": "string"
          },
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "groupId",
            "in": "query",
            "description": "groupId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "clientId",
            "in": "query",
            "description": "clientId",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "loanid",
            "in": "query",
            "description": "loanid",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "savingsAccountId",
            "in": "query",
            "description": "savingsAccountId",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetMakerCheckerResponse"
              }
            }
          }
        }
      }
    },
    "/makercheckers/{auditId}": {
      "post": {
        "tags": [
          "Maker Checker (or 4-eye) functionality"
        ],
        "summary": "Approve Maker Checker Entry | Reject Maker Checker Entry",
        "description": "",
        "operationId": "approveMakerCheckerEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "description": "auditId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostMakerCheckersResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Maker Checker (or 4-eye) functionality"
        ],
        "summary": "Delete Maker Checker Entry",
        "description": "",
        "operationId": "deleteMakerCheckerEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "description": "auditId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostMakerCheckersResponse"
            }
          }
        }
      }
    },
    "/accountnumberformats": {
      "get": {
        "tags": [
          "Account number format"
        ],
        "summary": "List Account number formats",
        "description": "Example Requests:\n\naccountnumberformats\n\n\naccountnumberformats?fields=accountType,prefixType",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetAccountNumberFormatsIdResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Account number format"
        ],
        "summary": "Create an Account number format",
        "description": "Note: You may associate a single Account number format for a given account type\nMandatory Fields for Account number formats\naccountType",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostAccountNumberFormatsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostAccountNumberFormatsResponse"
            }
          }
        }
      }
    },
    "/accountnumberformats/{accountNumberFormatId}": {
      "get": {
        "tags": [
          "Account number format"
        ],
        "summary": "Retrieve an Account number format",
        "description": "Example Requests:\n\naccountnumberformats/1\n\n\naccountnumberformats/1?template=true\n\n\naccountnumberformats/1?fields=accountType,prefixType",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumberFormatId",
            "in": "path",
            "description": "accountNumberFormatId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAccountNumberFormatsIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account number format"
        ],
        "summary": "Update an Account number format",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumberFormatId",
            "in": "path",
            "description": "accountNumberFormatId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutAccountNumberFormatsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutAccountNumberFormatsResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Account number format"
        ],
        "summary": "Delete an Account number format",
        "description": "Note: Account numbers created while this format was active would remain unchanged.",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountNumberFormatId",
            "in": "path",
            "description": "accountNumberFormatId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteAccountNumberFormatsResponse"
            }
          }
        }
      }
    },
    "/accountnumberformats/template": {
      "get": {
        "tags": [
          "Account number format"
        ],
        "summary": "Retrieve Account number format Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\n\nExample Request:\n\naccountnumberformats/template",
        "operationId": "retrieveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetAccountNumberFormatsResponseTemplate"
            }
          }
        }
      }
    },
    "/caches": {
      "get": {
        "tags": [
          "Cache"
        ],
        "summary": "Retrieve Cache Types",
        "description": "Returns the list of caches.\n\nExample Requests:\n\ncaches",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetCachesResponse"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cache"
        ],
        "summary": "Switch Cache",
        "description": "Switches the cache to chosen one.",
        "operationId": "switchCache",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCachesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutCachesResponse"
            }
          }
        }
      }
    },
    "/smscampaigns": {
      "get": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "List SMS Campaigns",
        "description": "Example Requests:\n\nsmscampaigns",
        "operationId": "retrieveAllCampaigns",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sqlSearch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Create a SMS Campaign",
        "description": "Mandatory Fields\ncampaignName, campaignType, triggerType, providerId, runReportId, message\n\nMandatory Fields for Cash based on selected report id\nparamValue in json format",
        "operationId": "createCampaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommandWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/smscampaigns/{resourceId}": {
      "get": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Retrieve a SMS Campaign",
        "description": "Example Requests:\n\nsmscampaigns/1\n",
        "operationId": "retrieveCampaign",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/smscampaigns/{campaignId}": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "SMS Campaign",
        "description": "Activates | Deactivates | Reactivates",
        "operationId": "handleCommands",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Update a Campaign",
        "description": "",
        "operationId": "updateCampaign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommandWrapper"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Delete a SMS Campaign",
        "description": "Note: Only closed SMS Campaigns can be deleted",
        "operationId": "delete",
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/smscampaigns/template": {
      "get": {
        "tags": [
          "SMS Campaigns"
        ],
        "summary": "Retrieve a SMS Campaign",
        "description": "Example Requests:\n\nsmscampaigns/1\n\n\nsmscampaigns/1?template=true\n\n\nsmscampaigns/template",
        "operationId": "template",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/smscampaigns/preview": {
      "post": {
        "tags": [
          "SMS Campaigns"
        ],
        "operationId": "preview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/codes/{codeId}/codevalues": {
      "get": {
        "tags": [
          "Code Values"
        ],
        "summary": "List Code Values",
        "description": "Returns the list of Code Values for a given Code\n\nExample Requests:\n\ncodes/1/codevalues",
        "operationId": "retrieveAllCodeValues",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "A List of Given response",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetCodeValuesDataResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Code Values"
        ],
        "summary": "Create a Code Value",
        "description": "",
        "operationId": "createCodeValue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCodeValuesDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostCodeValueDataResponse"
            }
          }
        }
      }
    },
    "/codes/{codeId}/codevalues/{codeValueId}": {
      "get": {
        "tags": [
          "Code Values"
        ],
        "summary": "Retrieve a Code Value",
        "description": "Returns the details of a Code Value\n\nExample Requests:\n\ncodes/1/codevalues/1",
        "operationId": "retrieveCodeValue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeValueId",
            "in": "path",
            "description": "codeValueId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCodeValuesDataResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Code Values"
        ],
        "summary": "Update a Code Value",
        "description": "Updates the details of a code value.",
        "operationId": "updateCodeValue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "codeValueId",
            "in": "path",
            "description": "codeValueId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCodeValuesDataRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutCodeValueDataResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Code Values"
        ],
        "summary": "Delete a Code Value",
        "description": "Deletes a code value",
        "operationId": "deleteCodeValue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "codeValueId",
            "in": "path",
            "description": "codeValueId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteCodeValueDataResponse"
            }
          }
        }
      }
    },
    "/codes": {
      "get": {
        "tags": [
          "Codes"
        ],
        "summary": "Retrieve Codes",
        "description": "Returns the list of codes.\n\nExample Requests:\n\ncodes",
        "operationId": "retrieveCodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetCodesResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Codes"
        ],
        "summary": "Create a Code",
        "description": "Creates a code. Codes created through api are always 'user defined' and so system defined is marked as false.",
        "operationId": "createCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostCodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostCodesResponse"
            }
          }
        }
      }
    },
    "/codes/{codeId}": {
      "get": {
        "tags": [
          "Codes"
        ],
        "summary": "Retrieve a Code",
        "description": "Returns the details of a Code.\n\nExample Requests:\n\ncodes/1",
        "operationId": "retrieveCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCodesResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Codes"
        ],
        "summary": "Update a Code",
        "description": "Updates the details of a code if it is not system defined.",
        "operationId": "updateCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCodesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutCodesResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Codes"
        ],
        "summary": "Delete a Code",
        "description": "Deletes a code if it is not system defined.",
        "operationId": "deleteCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeId",
            "in": "path",
            "description": "codeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteCodesResponse"
            }
          }
        }
      }
    },
    "/externalservice/{servicename}": {
      "get": {
        "tags": [
          "External Services"
        ],
        "summary": "Retrieve External Services Configuration",
        "description": "Returns a external Service configurations based on the Service Name.\n\nService Names supported are S3 and SMTP.\n\nExample Requests:\n\nexternalservice/SMTP",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "servicename",
            "in": "path",
            "description": "servicename",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExternalServicesPropertiesData"
            }
          }
        }
      },
      "put": {
        "tags": [
          "External Services"
        ],
        "summary": "Update External Service",
        "description": "Updates the external Service Configuration for a Service Name.\n\nExample: \n\nexternalservice/S3",
        "operationId": "updateExternalServiceProperties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "servicename",
            "in": "path",
            "description": "servicename",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutExternalServiceRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/configurations": {
      "get": {
        "tags": [
          "Global Configuration"
        ],
        "summary": "Retrieve Global Configuration | Retrieve Global Configuration for surveys",
        "description": "Returns the list global enable/disable configurations.\n\nExample Requests:\n\nconfigurations\n\n\nReturns the list global enable/disable survey configurations.\n\nExample Requests:\n\nconfigurations/survey",
        "operationId": "retrieveConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "survey",
            "in": "query",
            "description": "survey",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of example \n response \nsurveys response   \ngiven below",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetGlobalConfigurationsResponse"
              }
            }
          }
        }
      }
    },
    "/configurations/{configId}": {
      "get": {
        "tags": [
          "Global Configuration"
        ],
        "summary": "Retrieve Global Configuration",
        "description": "Returns a global enable/disable configurations.\n\nExample Requests:\n\nconfigurations/1",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "configId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetGlobalConfigurationsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Global Configuration"
        ],
        "summary": "Update Global Configuration",
        "description": "Updates an enable/disable global configuration item.",
        "operationId": "updateConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "configId",
            "in": "path",
            "description": "configId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutGlobalConfigurationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutGlobalConfigurationsResponse"
            }
          }
        }
      }
    },
    "/CreditBureauConfiguration/organisationCreditBureau": {
      "get": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "getOrganisationCreditBureau",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "updateCreditBureau",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditBureauConfiguration/loanProduct": {
      "get": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "fetchLoanProducts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditBureauConfiguration/mappings": {
      "get": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "getCreditBureauLoanProductMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "updateCreditBureauLoanProductMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}": {
      "post": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "addOrganisationCreditBureau",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organisationCreditBureauId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditBureauConfiguration/mappings/{CreditBureauId}": {
      "post": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "createCreditBureauLoanProductMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "CreditBureauId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditBureauConfiguration/config/{organisationCreditBureauId}": {
      "get": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "getConfiguration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organisationCreditBureauId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/CreditBureauConfiguration": {
      "get": {
        "tags": [
          "CreditBureau Configuration"
        ],
        "operationId": "getCreditBureau",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/datatables/{datatableName}": {
      "put": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Update Data Table",
        "description": "Modifies fields of a data table. If the apptableName parameter is passed, data table is deregistered and registered with the new application table.",
        "operationId": "updateDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatableName",
            "in": "path",
            "description": "datatableName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutDataTablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutDataTablesResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Delete Data Table",
        "description": "Deletes a data table and deregisters it from the Apache Fineract Core application table.",
        "operationId": "deleteDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatableName",
            "in": "path",
            "description": "datatableName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteDataTablesResponse"
            }
          }
        }
      }
    },
    "/datatables": {
      "get": {
        "tags": [
          "Data Tables"
        ],
        "summary": "List Data Tables",
        "description": "Lists registered data tables and the Apache Fineract Core application table they are registered to.\n\nARGUMENTS\n\napptable  - optional\nThe Apache Fineract core application table.\n\nExample Requests:\n\ndatatables?apptable=m_client\n\n\ndatatables",
        "operationId": "getDatatables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "apptable",
            "in": "query",
            "description": "apptable",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetDataTablesResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Create Data Table",
        "description": "Create a new data table and registers it with the Apache Fineract Core application table.\n\nField Descriptions\n\nMandatory - datatableName : \n\nThe name of the Data Table.\n\nMandatory - apptableName\n\nApplication table name. Must be one of the following:\n\nm_client\n\nm_group\n\nm_loan\n\nm_office\n\nm_saving_account\n\nm_product_loan\n\nm_savings_product\n\nMandatory - columns  \nAn array of columns in the new Data Table.\n\nOptional - multiRow\n\nAllows to create multiple entries in the Data Table. Optional, defaults to false. If this property is not provided Data Table will allow only one entry.\n\nField Descriptions - columns\n\nMandatory - name\n\nName of the created column. Can contain only alphanumeric characters, underscores and spaces, but cannot start with a number. Cannot start or end with an underscore or space.\n\nMandatory - type\n\nColumn type. Must be one of the following:\n\nBoolean\n\nDate\n\nDateTime\n\nDecimal\n\nDropdown\n\n\nNumber\n\nString\n\nText\n\nMandatory [type = Dropdown] - code\n\nUsed in Code Value fields. Column name becomes: code_cd_name. Mandatory if using type Dropdown, otherwise an error is returned.\n\nOptional - mandatory\n\nDetermines whether this column must have a value in every entry. Optional, defaults to false.\n\nMandatory [type = String] - length\n\nLength of the text field. Mandatory if type String is used, otherwise an error is returned.",
        "operationId": "createDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostDataTablesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostDataTablesResponse"
            }
          }
        }
      }
    },
    "/datatables/register/{datatable}/{apptable}": {
      "post": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Register Data Table",
        "description": "Registers a data table with the Apache Fineract Core application table. This allows the data table to be maintained through the API. In case the datatable is a PPI (survey table), a parameter category should be pass along with the request. The API currently support one category (200)",
        "operationId": "registerDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptable",
            "in": "path",
            "description": "apptable",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PostDataTablesRegisterDatatableAppTable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutDataTablesResponse"
            }
          }
        }
      }
    },
    "/datatables/deregister/{datatable}": {
      "post": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Deregister Data Table",
        "description": "Deregisters a data table. It will no longer be available through the API.",
        "operationId": "deregisterDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutDataTablesResponse"
            }
          }
        }
      }
    },
    "/datatables/{datatable}": {
      "get": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Retrieve Data Table Details",
        "description": "Lists a registered data table details and the Apache Fineract Core application table they are registered to.",
        "operationId": "getDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetDataTablesResponse"
            }
          }
        }
      }
    },
    "/datatables/{datatable}/{apptableId}": {
      "get": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Retrieve Entry(s) from Data Table",
        "description": "Gets the entry (if it exists) for data tables that are one to one with the application table. \nGets the entries (if they exist) for data tables that are one to many with the application table.\n\nNote: The 'fields' parameter is not available for datatables.\n\nARGUMENTS\norderoptional Specifies the order in which data is returned.genericResultSetoptional, defaults to false If 'true' an optimised JSON format is returned suitable for tabular display of data. This format is used by the default data tables UI functionality.\nExample Requests:\n\ndatatables/extra_client_details/1\n\n\ndatatables/extra_family_details/1?order=`Date of Birth` desc\n\n\ndatatables/extra_client_details/1?genericResultSet=true",
        "operationId": "getDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "order",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetDataTablesAppTableIdResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Create Entry in Data Table",
        "description": "Adds a row to the data table.\n\nNote that the default datatable UI functionality converts any field name containing spaces to underscores when using the API. This means the field name \"Business Description\" is considered the same as \"Business_Description\". So you shouldn't have both \"versions\" in any data table.",
        "operationId": "createDatatableEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostDataTablesAppTableIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostDataTablesAppTableIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Update Entry in Data Table (One to One)",
        "description": "Updates the row (if it exists) of the data table.",
        "operationId": "updateDatatableEntryOnetoOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutDataTablesAppTableIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutDataTablesAppTableIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Delete Entry(s) in Data Table",
        "description": "Deletes the entry (if it exists) for data tables that are one-to-one with the application table. \nDeletes the entries (if they exist) for data tables that are one-to-many with the application table.",
        "operationId": "deleteDatatableEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteDataTablesDatatableAppTableIdResponse"
            }
          }
        }
      }
    },
    "/datatables/{datatable}/{apptableId}/{datatableId}": {
      "get": {
        "tags": [
          "Data Tables"
        ],
        "operationId": "getDatatableManyEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "datatableId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Update Entry in Data Table (One to Many)",
        "description": "Updates the row (if it exists) of the data table.",
        "operationId": "updateDatatableEntryOneToMany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "datatableId",
            "in": "path",
            "description": "datatableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutDataTablesAppTableIdDatatableIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutDataTablesAppTableIdDatatableIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Data Tables"
        ],
        "summary": "Delete Entry in Datatable (One to Many)",
        "description": "Deletes the entry (if it exists) for data tables that are one to many with the application table.\n\n",
        "operationId": "deleteDatatableEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datatable",
            "in": "path",
            "description": "datatable",
            "required": true,
            "type": "body",
            "x-example": "{}"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "datatableId",
            "in": "path",
            "description": "datatableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteDataTablesDatatableAppTableIdDatatableIdResponse"
            }
          }
        }
      }
    },
    "/entityDatatableChecks/{entityDatatableCheckId}": {
      "delete": {
        "tags": [
          "Entity-Datatable Checks"
        ],
        "summary": "Delete Entity-Datatable Checks",
        "description": "Deletes an existing Entity-Datatable Check",
        "operationId": "deleteDatatable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityDatatableCheckId",
            "in": "path",
            "description": "entityDatatableCheckId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteEntityDatatableChecksTemplateResponse"
            }
          }
        }
      }
    },
    "/entityDatatableChecks": {
      "get": {
        "tags": [
          "Entity-Datatable Checks"
        ],
        "summary": "List Entity-Datatable Checks",
        "description": "The list capability of Entity-Datatable Checks can support pagination.\n\nOPTIONAL ARGUMENTS\noffset Integer optional, defaults to 0 Indicates the result from which pagination startslimit Integer optional, defaults to 200 Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1\nExample Request:\n\nentityDatatableChecks?offset=0&limit=15",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "entity",
            "in": "query",
            "description": "entity",
            "required": false,
            "type": "string"
          },
          {
            "name": "productId",
            "in": "query",
            "description": "productId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetEntityDatatableChecksResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Entity-Datatable Checks"
        ],
        "summary": "Create Entity-Datatable Checks",
        "description": "Mandatory Fields : \nentity, status, datatableName\n\nNon-Mandatory Fields : \nproductId",
        "operationId": "createEntityDatatableCheck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostEntityDatatableChecksTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostEntityDatatableChecksTemplateResponse"
            }
          }
        }
      }
    },
    "/entityDatatableChecks/template": {
      "get": {
        "tags": [
          "Entity-Datatable Checks"
        ],
        "summary": "Retrieve Entity-Datatable Checks Template",
        "description": "This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:\n\nAllowed Value Lists\nExample Request:\n\nentityDatatableChecks/template",
        "operationId": "getTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetEntityDatatableChecksTemplateResponse"
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve a Report\n",
        "description": "Example Requests:\n\nreports/1\n\n\nreports/1?template=true",
        "operationId": "retrieveReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetReportsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reports"
        ],
        "summary": "Update a Report",
        "description": "Only the useReport value can be updated for core reports.",
        "operationId": "updateReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutReportRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutReportResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Reports"
        ],
        "summary": "Delete a Report",
        "description": "Only non-core reports can be deleted.",
        "operationId": "deleteReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteReportsResponse"
            }
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "List Reports",
        "description": "Lists all reports and their parameters.\n\nExample Request:\n\nreports",
        "operationId": "retrieveReportList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Create a Report",
        "description": "",
        "operationId": "createReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostRepostRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostReportsResponse"
            }
          }
        }
      }
    },
    "/reports/template": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Retrieve Report Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\n\nExample Request : \n\nreports/template",
        "operationId": "retrieveOfficeTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetReportsTemplateResponse"
            }
          }
        }
      }
    },
    "/runreports/{reportName}": {
      "get": {
        "tags": [
          "Run Reports"
        ],
        "summary": "Running a Report",
        "description": "This resource allows you to run and receive output from pre-defined Apache Fineract reports.\n\nReports can also be used to provide data for searching and workflow functionality.\n\nThe default output is a JSON formatted \"Generic Resultset\". The Generic Resultset contains Column Heading as well as Data information. However, you can export to CSV format by simply adding \"&exportCSV=true\" to the end of your URL.\n\nIf Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.\n\nThe Apache Fineract reference application uses a JQuery plugin called stretchy reporting which, itself, uses this reports resource to provide a pretty flexible reporting User Interface (UI).\n\n\n\nExample Requests:\n\nrunreports/Client%20Listing?R_officeId=1\n\n\nrunreports/Client%20Listing?R_officeId=1&exportCSV=true\n\n\nrunreports/OfficeIdSelectOne?R_officeId=1&parameterType=true\n\n\nrunreports/OfficeIdSelectOne?R_officeId=1&parameterType=true&exportCSV=true\n\n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=HTML&R_officeId=1\n\n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=XLS&R_officeId=1\n\n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=CSV&R_officeId=1\n\n\nrunreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=PDF&R_officeId=1",
        "operationId": "runReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json",
          "text/csv",
          "application/vnd.ms-excel",
          "application/pdf",
          "text/html"
        ],
        "parameters": [
          {
            "name": "reportName",
            "in": "path",
            "description": "reportName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetReportNameResponse"
            }
          }
        }
      }
    },
    "/{entityType}/{entityId}/documents": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "List documents",
        "description": "Example Requests:\n\nclients/1/documents\n\nclient_identifiers/1/documents\n\nloans/1/documents?fields=name,description",
        "operationId": "retreiveAllDocuments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetEntityTypeEntityIdDocumentsResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Documents"
        ],
        "summary": "Create a Document",
        "description": "Note: A document is created using a Multi-part form upload \n\nBody Parts\n\nname : \nName or summary of the document\n\ndescription : \nDescription of the document\n\nfile : \nThe file to be uploaded\n\nMandatory Fields : \nfile and description",
        "operationId": "createDocument",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Content-Length",
            "in": "header",
            "description": "Content-Length",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": false,
            "type": "file"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Not Shown (multi-part form data)",
            "schema": {
              "$ref": "#/definitions/PostEntityTypeEntityIdDocumentsResponse"
            }
          }
        }
      }
    },
    "/{entityType}/{entityId}/documents/{documentId}": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Retrieve a Document",
        "description": "Example Requests:\n\nclients/1/documents/1\n\n\nloans/1/documents/1\n\n\nclient_identifiers/1/documents/1?fields=name,description",
        "operationId": "getDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "documentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetEntityTypeEntityIdDocumentsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Documents"
        ],
        "summary": "Update a Document",
        "description": "Note: A document is updated using a Multi-part form upload \nBody Parts\nname\nName or summary of the document\ndescription\nDescription of the document\nfile\nThe file to be uploaded",
        "operationId": "updateDocument",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "documentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Content-Length",
            "in": "header",
            "description": "Content-Length",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": false,
            "type": "file"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "name",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "description",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Not Shown (multi-part form data)",
            "schema": {
              "$ref": "#/definitions/PutEntityTypeEntityIdDocumentsResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Documents"
        ],
        "summary": "Remove a Document",
        "description": "",
        "operationId": "deleteDocument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "documentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteEntityTypeEntityIdDocumentsResponse"
            }
          }
        }
      }
    },
    "/{entityType}/{entityId}/documents/{documentId}/attachment": {
      "get": {
        "tags": [
          "Documents"
        ],
        "summary": "Retrieve Binary File associated with Document",
        "description": "Request used to download the file associated with the document\n\nExample Requests:\n\nclients/1/documents/1/attachment\n\n\nloans/1/documents/1/attachment",
        "operationId": "downloadFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "documentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Not Shown: The corresponding Binary file"
          }
        }
      }
    },
    "/{entity}/{entityId}/images": {
      "get": {
        "tags": [
          "DomainNameapiv1{entity}{entityId}images"
        ],
        "operationId": "downloadClientImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "maxWidth",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "maxHeight",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "output",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "tags": [
          "DomainNameapiv1{entity}{entityId}images"
        ],
        "operationId": "addNewClientImage",
        "consumes": [
          "text/plain",
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "DomainNameapiv1{entity}{entityId}images"
        ],
        "operationId": "updateClientImage",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "Content-Length",
            "in": "header",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "file",
            "in": "formData",
            "required": false,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "DomainNameapiv1{entity}{entityId}images"
        ],
        "operationId": "deleteClientImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/entitytoentitymapping/{mapId}/{fromId}/{toId}": {
      "get": {
        "tags": [
          "DomainNameapiv1entitytoentitymapping"
        ],
        "operationId": "getEntityToEntityMappings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "toId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/entitytoentitymapping/{mapId}": {
      "get": {
        "tags": [
          "DomainNameapiv1entitytoentitymapping"
        ],
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "DomainNameapiv1entitytoentitymapping"
        ],
        "operationId": "updateMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "DomainNameapiv1entitytoentitymapping"
        ],
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "mapId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/entitytoentitymapping": {
      "get": {
        "tags": [
          "DomainNameapiv1entitytoentitymapping"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/entitytoentitymapping/{relId}": {
      "post": {
        "tags": [
          "DomainNameapiv1entitytoentitymapping"
        ],
        "operationId": "createMap",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "relId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/hooks": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "summary": "Retrieve Hooks",
        "description": "Returns the list of hooks.\n\nExample Requests:\n\nhooks",
        "operationId": "retrieveHooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetHookResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Hooks"
        ],
        "summary": "Create a Hook",
        "description": "The following parameters can be passed for the creation of a hook :-\n\nname - string - Required. The name of the template that is being called. (See /hooks/template for the list of valid hook names.)\n\nisActive - boolean - Determines whether the hook is actually triggered.\n\nevents - array - Determines what events the hook is triggered for.\n\nconfig - hash - Required. Key/value pairs to provide settings for this hook. These settings vary between the templates.\n\ntemplateId - Optional. The UGD template ID associated with the same entity (client or loan).",
        "operationId": "createHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostHookResponse"
            }
          }
        }
      }
    },
    "/hooks/{hookId}": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "summary": "Retrieve a Hook",
        "description": "Returns the details of a Hook.\n\nExample Requests:\n\nhooks/1",
        "operationId": "retrieveHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "hookId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetHookResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Hooks"
        ],
        "summary": "Update a Hook",
        "description": "Updates the details of a hook.",
        "operationId": "updateHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "hookId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutHookRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutHookResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Hooks"
        ],
        "summary": "Delete a Hook",
        "description": "Deletes a hook.",
        "operationId": "deleteHook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hookId",
            "in": "path",
            "description": "hookId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteHookResponse"
            }
          }
        }
      }
    },
    "/hooks/template": {
      "get": {
        "tags": [
          "Hooks"
        ],
        "summary": "Retrieve Hooks Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\nExample Request:\n\nhooks/template",
        "operationId": "template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetHookTemplateResponse"
            }
          }
        }
      }
    },
    "/scheduler": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Retrieve Scheduler Status",
        "description": "Returns the scheduler status.\n\nExample Requests:\n\nscheduler",
        "operationId": "retrieveStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetSchedulerResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Activate Scheduler Jobs | Suspend Scheduler Jobs",
        "description": "Activates the scheduler job service. | Suspends the scheduler job service.",
        "operationId": "changeSchedulerStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "POST :  scheduler?command=start\n\n\nPOST : scheduler?command=stop"
          }
        }
      }
    },
    "/jobs/{jobId}/runhistory": {
      "get": {
        "tags": [
          "MIFOSX-BATCH JOBS"
        ],
        "summary": "Retrieve Job Run History",
        "description": "Example Requests:\n\njobs/5/runhistory?offset=0&limit=200",
        "operationId": "retrieveHistory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetJobsJobIDJobRunHistoryResponse"
            }
          }
        }
      }
    },
    "/jobs/{jobId}": {
      "get": {
        "tags": [
          "MIFOSX-BATCH JOBS"
        ],
        "summary": "Retrieve a Job",
        "description": "Returns the details of a Job.\n\nExample Requests:\n\njobs/5",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetJobsResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MIFOSX-BATCH JOBS"
        ],
        "summary": "Run a Job",
        "description": "Manually Execute Specific Job.",
        "operationId": "executeJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "POST: jobs/1?command=executeJob"
          }
        }
      },
      "put": {
        "tags": [
          "MIFOSX-BATCH JOBS"
        ],
        "summary": "Update a Job",
        "description": "Updates the details of a job.",
        "operationId": "updateJobDetail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutJobsJobsIDRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "MIFOSX-BATCH JOBS"
        ],
        "summary": "Retrieve Scheduler Jobs",
        "description": "Returns the list of jobs.\n\nExample Requests:\n\njobs",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetJobsResponse"
              }
            }
          }
        }
      }
    },
    "/reportmailingjobs": {
      "get": {
        "tags": [
          "Report Mailing Jobs"
        ],
        "summary": "List Report Mailing Jobs",
        "description": "Example Requests:\n\nreportmailingjobs",
        "operationId": "retrieveAllReportMailingJobs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetReportMailingJobsResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Report Mailing Jobs"
        ],
        "summary": "Create a Report Mailing Job",
        "description": "Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients, emailSubject, emailMessage, emailAttachmentFileFormatId, recurrence, isActive\n\nOptional Fields: description, stretchyReportParamMap",
        "operationId": "createReportMailingJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostReportMailingJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostReportMailingJobsResponse"
            }
          }
        }
      }
    },
    "/reportmailingjobs/{entityId}": {
      "get": {
        "tags": [
          "Report Mailing Jobs"
        ],
        "summary": "Retrieve a Report Mailing Job",
        "description": "Example Requests:\n\nreportmailingjobs/1\n\n\nreportmailingjobs/1?template=true",
        "operationId": "retrieveReportMailingJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetReportMailingJobsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Report Mailing Jobs"
        ],
        "summary": "Update a Report Mailing Job\n",
        "description": "",
        "operationId": "updateReportMailingJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutReportMailingJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutReportMailingJobsResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Report Mailing Jobs"
        ],
        "summary": "Delete a Report Mailing Job",
        "description": "",
        "operationId": "deleteReportMailingJob",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteReportMailingJobsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteReportMailingJobsResponse"
            }
          }
        }
      }
    },
    "/reportmailingjobs/template": {
      "get": {
        "tags": [
          "Report Mailing Jobs"
        ],
        "summary": "Retrieve Report Mailing Job Details Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for report mailing job applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\nExample Request:\n\nreportmailingjobs/template",
        "operationId": "retrieveReportMailingJobTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetReportMailingJobsTemplate"
            }
          }
        }
      }
    },
    "/reportmailingjobrunhistory": {
      "get": {
        "tags": [
          "List Report Mailing Job History"
        ],
        "summary": "List Report Mailing Job History",
        "description": "The list capability of report mailing job history can support pagination and sorting.\n\nExample Requests:\n\nreportmailingjobrunhistory/1",
        "operationId": "retrieveAllByReportMailingJobId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "reportMailingJobId",
            "in": "query",
            "description": "reportMailingJobId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReportMailingJobRunHistoryData"
            }
          }
        }
      }
    },
    "/authentication": {
      "post": {
        "tags": [
          "Authentication HTTP Basic"
        ],
        "summary": "Verify authentication",
        "description": "Authenticates the credentials provided and returns the set roles and permissions allowed.",
        "operationId": "authenticate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "username",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostAuthenticationResponse"
            }
          },
          "400": {
            "description": "Unauthenticated. Please login"
          }
        }
      }
    },
    "/userdetails": {
      "get": {
        "tags": [
          "Fetch authenticated user details"
        ],
        "summary": "Fetch authenticated user details\n",
        "description": "checks the Authentication and returns the set roles and permissions allowed.",
        "operationId": "fetchAuthenticatedUserData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "access_token",
            "in": "query",
            "description": "access_token",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetUserDetailsResponse"
            }
          }
        }
      }
    },
    "/sms/{campaignId}/messageByStatus": {
      "get": {
        "tags": [
          "SMS"
        ],
        "operationId": "retrieveAllSmsByStatus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "campaignId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateFormat",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sqlSearch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/sms": {
      "get": {
        "tags": [
          "SMS"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "tags": [
          "SMS"
        ],
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/sms/{resourceId}": {
      "get": {
        "tags": [
          "SMS"
        ],
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "SMS"
        ],
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "SMS"
        ],
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/likelihood/{ppiName}/{likelihoodId}": {
      "get": {
        "tags": [
          "Likelihood"
        ],
        "operationId": "retrieve",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "likelihoodId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "Likelihood"
        ],
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "likelihoodId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/likelihood/{ppiName}": {
      "get": {
        "tags": [
          "Likelihood"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ppiName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/povertyLine/{ppiName}": {
      "get": {
        "tags": [
          "Poverty Line"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ppiName",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/povertyLine/{ppiName}/{likelihoodId}": {
      "get": {
        "tags": [
          "Poverty Line"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ppiName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "likelihoodId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/survey/{surveyName}/{apptableId}": {
      "post": {
        "tags": [
          "Survey"
        ],
        "summary": "Create an entry in the survey table",
        "description": "Insert and entry in a survey table (full fill the survey).\n\nRefer Link for sample Body:  [ https://demo.openmf.org/api-docs/apiLive.htm#survey_create ] ",
        "operationId": "createDatatableEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "description": "surveyName",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptableId",
            "in": "path",
            "description": "apptableId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostSurveySurveyNameApptableIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostSurveySurveyNameApptableIdResponse"
            }
          }
        }
      }
    },
    "/survey/{surveyName}/{clientId}/{fulfilledId}": {
      "delete": {
        "tags": [
          "Survey"
        ],
        "operationId": "deleteDatatableEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fulfilledId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/survey": {
      "get": {
        "tags": [
          "Survey"
        ],
        "summary": "Retrieve surveys",
        "description": "Retrieve surveys. This allows to retrieve the list of survey tables registered .",
        "operationId": "retrieveSurveys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetSurveyResponse"
              }
            }
          }
        }
      }
    },
    "/survey/{surveyName}": {
      "get": {
        "tags": [
          "Survey"
        ],
        "summary": "Retrieve survey",
        "description": "Lists a registered survey table details and the Apache Fineract Core application table they are registered to.",
        "operationId": "retrieveSurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "description": "surveyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetSurveyResponse"
            }
          }
        }
      }
    },
    "/survey/{surveyName}/{clientId}": {
      "get": {
        "tags": [
          "Survey"
        ],
        "operationId": "getClientSurveyOverview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/survey/{surveyName}/{clientId}/{entryId}": {
      "get": {
        "tags": [
          "Survey"
        ],
        "operationId": "getSurveyEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/survey/register/{surveyName}/{apptable}": {
      "put": {
        "tags": [
          "Survey"
        ],
        "operationId": "register",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "apptable",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/mixreport": {
      "get": {
        "tags": [
          "Mix Report"
        ],
        "operationId": "retrieveXBRLReport",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/mixtaxonomy": {
      "get": {
        "tags": [
          "Mix Taxonomy"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/mixmapping": {
      "get": {
        "tags": [
          "Mix Mapping"
        ],
        "operationId": "retrieveTaxonomyMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "Mix Mapping"
        ],
        "operationId": "updateTaxonomyMapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/holidays/{holidayId}": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "Retrieve a Holiday",
        "description": "Example Requests:\n\nholidays/1",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "holidayId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetHolidaysResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Activate a Holiday",
        "description": "Always Holidays are created in pending state. This API allows to activate a holiday.\n\nOnly the active holidays are considered for rescheduling the loan repayment.",
        "operationId": "handleCommands",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "holidayId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostHolidaysHolidayIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostHolidaysHolidayIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Holidays"
        ],
        "summary": "Update a Holiday",
        "description": "If a holiday is in pending state (created and not activated) then all fields are allowed to modify. Once holidays become active only name and descriptions are allowed to modify.",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "holidayId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutHolidaysHolidayIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutHolidaysHolidayIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Holidays"
        ],
        "summary": "Delete a Holiday",
        "description": "This API allows to delete a holiday. This is a soft delete the deleted holiday status is marked as deleted.",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "holidayId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteHolidaysHolidayIdResponse"
            }
          }
        }
      }
    },
    "/holidays": {
      "get": {
        "tags": [
          "Holidays"
        ],
        "summary": "List Holidays",
        "description": "Example Requests:\n\nholidays?officeId=1",
        "operationId": "retrieveAllHolidays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "fromDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "toDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "locale",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateFormat",
            "in": "query",
            "description": "dateFormat",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetHolidaysResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Holidays"
        ],
        "summary": "Create a Holiday",
        "description": "Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo, offices",
        "operationId": "createNewHoliday",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostHolidaysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostHolidaysResponse"
            }
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Retrieve Currency Configuration",
        "description": "Returns the list of currencies permitted for use AND the list of currencies not selected (but available for selection).\n\nExample Requests:\n\ncurrencies\n\n\ncurrencies?fields=selectedCurrencyOptions",
        "operationId": "retrieveCurrencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetCurrenciesResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Currency"
        ],
        "summary": "Update Currency Configuration",
        "description": "Updates the list of currencies permitted for use.",
        "operationId": "updateCurrencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutCurrenciesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutCurrenciesResponse"
            }
          }
        }
      }
    },
    "/officetransactions": {
      "get": {
        "tags": [
          "officetransactions"
        ],
        "operationId": "retrieveOfficeTransactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "tags": [
          "officetransactions"
        ],
        "operationId": "transferMoneyFrom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/officetransactions/template": {
      "get": {
        "tags": [
          "officetransactions"
        ],
        "operationId": "newOfficeTransactionDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/officetransactions/{transactionId}": {
      "delete": {
        "tags": [
          "officetransactions"
        ],
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/offices/template": {
      "get": {
        "tags": [
          "Offices"
        ],
        "summary": "Retrieve Office Details Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\nExample Request:\n\noffices/template",
        "operationId": "retrieveOfficeTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOfficesTemplateResponse"
            }
          }
        }
      }
    },
    "/offices": {
      "get": {
        "tags": [
          "Offices"
        ],
        "summary": "List Offices",
        "description": "Example Requests:\n\noffices\n\n\noffices?fields=id,name,openingDate",
        "operationId": "retrieveOffices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "includeAllOffices",
            "in": "query",
            "description": "includeAllOffices",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetOfficesResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Offices"
        ],
        "summary": "Create an Office",
        "description": "Mandatory Fields\nname, openingDate, parentId",
        "operationId": "createOffice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostOfficesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostOfficesResponse"
            }
          }
        }
      }
    },
    "/offices/{officeId}": {
      "get": {
        "tags": [
          "Offices"
        ],
        "summary": "Retrieve an Office",
        "description": "Example Requests:\n\noffices/1\n\n\noffices/1?template=true\n\n\noffices/1?fields=id,name,parentName",
        "operationId": "retreiveOffice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "path",
            "description": "officeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetOfficesResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Offices"
        ],
        "summary": "Update Office",
        "description": "",
        "operationId": "updateOffice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "path",
            "description": "officeId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutOfficesOfficeIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutOfficesOfficeIdResponse"
            }
          }
        }
      }
    },
    "/provisioningcategory": {
      "get": {
        "tags": [
          "Provisioning Category"
        ],
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "post": {
        "tags": [
          "Provisioning Category"
        ],
        "operationId": "createProvisioningCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/provisioningcategory/{categoryId}": {
      "put": {
        "tags": [
          "Provisioning Category"
        ],
        "operationId": "updateProvisioningCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Provisioning Category"
        ],
        "operationId": "deleteProvisioningCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/provisioningcriteria/{criteriaId}": {
      "get": {
        "tags": [
          "Provisioning Criteria"
        ],
        "summary": "Retrieves a Provisioning Criteria",
        "description": "Retrieves a Provisioning Criteria",
        "operationId": "retrieveProvisioningCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "description": "criteriaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetProvisioningCriteriaCriteriaIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Provisioning Criteria"
        ],
        "summary": "Updates a new Provisioning Criteria",
        "description": "Updates a new Provisioning Criteria\n\nOptional Fields\ncriteriaName, loanProducts, provisioningcriteria",
        "operationId": "updateProvisioningCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "description": "criteriaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutProvisioningCriteriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutProvisioningCriteriaResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Provisioning Criteria"
        ],
        "summary": "Deletes Provisioning Criteria",
        "description": "Deletes Provisioning Criteria",
        "operationId": "deleteProvisioningCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "criteriaId",
            "in": "path",
            "description": "criteriaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteProvisioningCriteriaResponse"
            }
          }
        }
      }
    },
    "/provisioningcriteria": {
      "get": {
        "tags": [
          "Provisioning Criteria"
        ],
        "summary": "Retrieves all created Provisioning Criterias",
        "description": "Retrieves all created Provisioning Criterias",
        "operationId": "retrieveAllProvisioningCriterias",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetProvisioningCriteriaResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Provisioning Criteria"
        ],
        "summary": "Create a new Provisioning Criteria",
        "description": "Creates a new Provisioning Criteria\n\nMandatory Fields: \ncriteriaName\nprovisioningcriteria\n\nOptional Fields: \nloanProducts",
        "operationId": "createProvisioningCriteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostProvisioningCriteriaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostProvisioningCriteriaResponse"
            }
          }
        }
      }
    },
    "/provisioningcriteria/template": {
      "get": {
        "tags": [
          "Provisioning Criteria"
        ],
        "operationId": "retrieveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/staff": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Retrieve Staff",
        "description": "Returns the list of staff members.\n\nExample Requests:\n\nstaff\n\n\n\n\nRetrieve a Staff by status\n\nReturns the details of a Staff based on status.\n\nBy default it Returns all the ACTIVE Staff.\n\nIf status=INACTIVE, then it returns all INACTIVE Staff.\n\nand for status=ALL, it Returns both ACTIVE and INACTIVE Staff.\n\nExample Requests:\n\nstaff?status=active",
        "operationId": "retrieveStaff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sqlSearch",
            "in": "query",
            "description": "sqlSearch",
            "required": false,
            "type": "string"
          },
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "staffInOfficeHierarchy",
            "in": "query",
            "description": "staffInOfficeHierarchy",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "loanOfficersOnly",
            "in": "query",
            "description": "loanOfficersOnly",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string",
            "default": "active"
          }
        ],
        "responses": {
          "200": {
            "description": "GET https://DomainName/api/v1/staff?status={ACTIVE|INACTIVE|ALL}",
            "schema": {
              "$ref": "#/definitions/GetStaffResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Staff"
        ],
        "summary": "Create a staff member",
        "description": "Creates a staff member.\n\nMandatory Fields: \nofficeId, firstname, lastname\n\nOptional Fields: \nisLoanOfficer, isActive",
        "operationId": "createStaff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostStaffRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostStaffResponse"
            }
          }
        }
      }
    },
    "/staff/{staffId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Retrieve a Staff Member",
        "description": "Returns the details of a Staff Member.\n\nExample Requests:\n\nstaff/1",
        "operationId": "retreiveStaff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "description": "staffId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetStaffResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Staff"
        ],
        "summary": "Update a Staff Member",
        "description": "Updates the details of a staff member.",
        "operationId": "updateStaff",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "description": "staffId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutStaffRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutStaffResponse"
            }
          }
        }
      }
    },
    "/cashiers": {
      "get": {
        "tags": [
          "cashiers"
        ],
        "operationId": "getCashierData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tellerId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "staffId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/tellers": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "List all tellers",
        "description": "Retrieves list tellers",
        "operationId": "getTellerData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "officeId",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTellersResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Create teller",
        "description": "Mandatory Fields\nTeller name, OfficeId, Description, Start Date, Status\nOptional Fields\nEnd Date",
        "operationId": "createTeller",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostTellersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostTellersResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Retrieve tellers",
        "description": "",
        "operationId": "findTeller",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTellersResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Update teller",
        "description": "",
        "operationId": "updateTeller",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutTellersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutTellersResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teller Cash Management"
        ],
        "operationId": "deleteTeller",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "List Cashiers",
        "description": "",
        "operationId": "getCashierData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "fromdate",
            "in": "query",
            "description": "fromdate",
            "required": false,
            "type": "string"
          },
          {
            "name": "todate",
            "in": "query",
            "description": "todate",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTellersTellerIdCashiersResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Create Cashiers",
        "description": "Mandatory Fields: \nCashier/staff, Fromm Date, To Date, Full Day or From time and To time\n\n\n\nOptional Fields: \nDescription/Notes",
        "operationId": "createCashier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostTellersTellerIdCashiersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostTellersTellerIdCashiersResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/{cashierId}": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Retrieve a cashier",
        "description": "",
        "operationId": "findCashierData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTellersTellerIdCashiersCashierIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Update Cashier",
        "description": "",
        "operationId": "updateCashier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutTellersTellerIdCashiersCashierIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutTellersTellerIdCashiersCashierIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Delete Cashier",
        "description": "",
        "operationId": "deleteCashier",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteTellersTellerIdCashiersCashierIdResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/template": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Find Cashiers",
        "description": "",
        "operationId": "getCashierTemplate",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTellersTellerIdCashiersTemplateResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/{cashierId}/allocate": {
      "post": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Allocate Cash To Cashier",
        "description": "Mandatory Fields: \nDate, Amount, Currency, Notes/Comments",
        "operationId": "allocateCashToCashier",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostTellersTellerIdCashiersCashierIdAllocateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostTellersTellerIdCashiersCashierIdAllocateResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/{cashierId}/settle": {
      "post": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Settle Cash From Cashier",
        "description": "Mandatory Fields\nDate, Amount, Currency, Notes/Comments",
        "operationId": "settleCashFromCashier",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostTellersTellerIdCashiersCashierIdSettleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostTellersTellerIdCashiersCashierIdSettleResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/{cashierId}/transactions": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Retrieve Cashier Transaction",
        "description": "",
        "operationId": "getTransactionsForCashier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "description": "currencyCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetTellersTellerIdCashiersCashiersIdTransactionsResponse"
              }
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Transactions Wtih Summary For Cashier",
        "description": "",
        "operationId": "getTransactionsWtihSummaryForCashier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "description": "currencyCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "orderBy",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "sortOrder",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/cashiers/{cashierId}/transactions/template": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "summary": "Retrieve Cashier Transaction Template",
        "description": "",
        "operationId": "getCashierTxnTemplate",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "path",
            "description": "cashierId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse"
            }
          }
        }
      }
    },
    "/tellers/{tellerId}/transactions": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "operationId": "getTransactionData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dateRange",
            "in": "query",
            "description": "dateRange",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/tellers/{tellerId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "operationId": "findTransactionData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "transactionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/tellers/{tellerId}/journals": {
      "get": {
        "tags": [
          "Teller Cash Management"
        ],
        "operationId": "getJournalData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tellerId",
            "in": "path",
            "description": "tellerId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "query",
            "description": "cashierId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dateRange",
            "in": "query",
            "description": "dateRange",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/cashiersjournal": {
      "get": {
        "tags": [
          "cashiersjournal"
        ],
        "operationId": "getJournalData",
        "consumes": [
          "text/html",
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "tellerId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "dateRange",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/workingdays/template": {
      "get": {
        "tags": [
          "Working days"
        ],
        "summary": "Working Days Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for working days.\n\nExample Request:\n\nworkingdays/template",
        "operationId": "template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetWorkingDaysTemplateResponse"
            }
          }
        }
      }
    },
    "/workingdays": {
      "get": {
        "tags": [
          "Working days"
        ],
        "summary": "List Working days",
        "description": "Example Requests:\n\nworkingdays",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetWorkingDaysResponse"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Working days"
        ],
        "summary": "Update a Working Day",
        "description": "Mandatory Fields\nrecurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutWorkingDaysRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutWorkingDaysResponse"
            }
          }
        }
      }
    },
    "/client/{clientid}/addresses": {
      "get": {
        "tags": [
          "Clients Address"
        ],
        "summary": "List all addresses for a Client",
        "description": "Example Requests:\n\nclient/1/addresses\n\n\nclients/1/addresses?status=false,true&&type=1,2,3",
        "operationId": "getAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients Address"
        ],
        "summary": "Create an address for a Client",
        "description": "Mandatory Fields : \ntype and clientId",
        "operationId": "AddClientAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clients Address"
        ],
        "summary": "update an address for a Client",
        "description": "All the address fields can be updated by using update client address API\n\nMandatory Fields\ntype and addressId",
        "operationId": "UpdateClientAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientid",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/client/addresses/template": {
      "get": {
        "tags": [
          "Clients Address"
        ],
        "operationId": "getAddressesTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/clients/{clientId}/charges/{chargeId}": {
      "get": {
        "tags": [
          "Client Charges"
        ],
        "summary": "Retrieve a Client Charge",
        "description": "Example Requests:\nclients/1/charges/1\n\n\nclients/1/charges/1?fields=name,id",
        "operationId": "retrieveClientCharge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "chargeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientChargeData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Charges"
        ],
        "summary": "Pay a Client Charge",
        "description": "Mandatory Fields\ntransactionDate and amount \"Pay either a part of or the entire due amount for a charge.(command=paycharge)\n\nWaive a Client Charge\n\n\nThis API provides the facility of waiving off the remaining amount on a client charge (command=waive)\n",
        "operationId": "payOrWaiveClientCharge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "chargeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client Charges"
        ],
        "summary": "Delete a Client Charge",
        "description": "Deletes a Client Charge on which no transactions have taken place (either payments or waivers). ",
        "operationId": "deleteClientCharge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "chargeId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/{clientId}/charges": {
      "get": {
        "tags": [
          "Client Charges"
        ],
        "summary": "List Client Charges",
        "description": "The list capability of client charges supports pagination.Example Requests:\nclients/1/charges\n\nclients/1/charges?offset=0&limit=5",
        "operationId": "retrieveAllClientCharges",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "chargeStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "all"
          },
          {
            "name": "pendingPayment",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientCharge"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Charges"
        ],
        "summary": "Add Client Charge",
        "description": " This API associates a Client charge with an implicit Client account\nMandatory Fields : \nchargeId and dueDate  \nOptional Fields : \namount",
        "operationId": "applyClientCharge",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/{clientId}/charges/template": {
      "get": {
        "tags": [
          "Client Charges"
        ],
        "operationId": "retrieveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/clients/{clientId}/identifiers": {
      "get": {
        "tags": [
          "Client Identifier Api"
        ],
        "summary": "List all Identifiers for a Client",
        "description": "Example Requests:\nclients/1/identifiers\n\n\nclients/1/identifiers?fields=documentKey,documentType,description",
        "operationId": "retrieveAllClientIdentifiers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientIdentifierData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Identifier Api"
        ],
        "summary": "Create an Identifier for a Client",
        "description": "Mandatory Fields\ndocumentKey, documentTypeId ",
        "operationId": "createClientIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/{clientId}/identifiers/template": {
      "get": {
        "tags": [
          "Client Identifier Api"
        ],
        "summary": "Retrieve Client Identifier Details Template",
        "description": "This is a convenience resource useful for building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\n Field Defaults\n Allowed Value Lists\n\n\nExample Request:\nclients/1/identifiers/template",
        "operationId": "newClientIdentifierDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientIdentifierData"
            }
          }
        }
      }
    },
    "/clients/{clientId}/identifiers/{identifierId}": {
      "get": {
        "tags": [
          "Client Identifier Api"
        ],
        "summary": "Retrieve a Client Identifier",
        "description": "Example Requests:\nclients/1/identifier/2\n\n\nclients/1/identifier/2?template=true\n\nclients/1/identifiers/2?fields=documentKey,documentType,description",
        "operationId": "retrieveClientIdentifiers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "identifierId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientIdentifierData"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client Identifier Api"
        ],
        "summary": "Update a Client Identifier",
        "description": "",
        "operationId": "updateClientIdentifer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "identifierId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client Identifier Api"
        ],
        "summary": "Delete a Client Identifier",
        "description": "",
        "operationId": "deleteClientIdentifier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "identifierId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/{clientId}/transactions": {
      "get": {
        "tags": [
          "Client Transaction"
        ],
        "summary": "List Client Transactions",
        "description": "The list capability of client transaction can support pagination.\n\nMandatory Arguments : offset\n    Integer Mandatory, defaults to 0 \n    Indicates the result from which pagination starts\nlimit\n    Integer Mandatory, defaults to 200 \n    Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1\n\n\n\nExample Requests:\nclients/189/transactions\nclients/189/transactions?offset=10&limit=50",
        "operationId": "retrieveAllClientTransactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientTransactionData"
            }
          }
        }
      }
    },
    "/clients/{clientId}/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Client Transaction"
        ],
        "summary": "Retrieve a Client Transaction",
        "description": "Example Requests:\nclients/1/transactions/1\n\n\nclients/1/transactions/1?fields=id,officeName",
        "operationId": "retrieveClientTransaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientTransactionData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Transaction"
        ],
        "summary": "Undo a Client Transaction",
        "description": "",
        "operationId": "undoClientTransaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/{clientId}/accounts": {
      "get": {
        "tags": [
          "Client Api"
        ],
        "summary": "Retrieve client accounts overview",
        "description": "An example of how a loan portfolio summary can be provided. This is requested in a specific use case of the community application.\nIt is quite reasonable to add resources like this to simplify User Interface development.\n\nExample Requests:\n \nclients/1/accounts\n\nclients/1/accounts?fields=loanAccounts,savingsAccounts",
        "operationId": "retrieveAssociatedAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccountSummaryCollectionData"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Client Api"
        ],
        "summary": "List Clients",
        "description": "Example Requests:\n\nclients\n\nclients?fields=displayName,officeName,timeline\n\nclients?offset=10&limit=50\n\nclients?orderBy=displayName&sortOrder=DESC",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sqlSearch",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "officeId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "externalId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "underHierarchy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orphansOnly",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Api"
        ],
        "summary": "Create a Client",
        "description": "Note:\n1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).\n\n2.If address is enable(enable-address=true), then additional field called address has to be passed.",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Client Created",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/{clientId}": {
      "get": {
        "tags": [
          "Client Api"
        ],
        "summary": "Retrieve a Client",
        "description": "Example Requests:\n\nclients/1\n\n\nclients/1?template=true\n\n\nclients/1?fields=id,displayName,officeName",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "staffInSelectedOfficeOnly",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientData"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client Api"
        ],
        "summary": "Activate a Client | Close a Client | Reject a Client | Withdraw a Client | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client | Assign a Staff | Unassign a Staff | Update Default Savings Account | Propose a Client Transfer | Withdraw a Client Transfer | Reject a Client Transfer | Accept a Client Transfer | Propose and Accept a Client Transfer | ",
        "description": "\n[Reject a Client] Mandatory Fields : rejectionDate, rejectionReasonId\n\n[Withdraw a Client] Mandatory Fields : withdrawalDate, withdrawalReasonId\n\n[Reactivate a Client] Mandatory Fields : reactivationDate\n\n[UndoReject a Client] Mandatory Fields : reopenedDate\n\n[UndoWithdraw a Client]Mandatory Fields :  reopenedDate\n",
        "operationId": "activate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client Api"
        ],
        "summary": "Update a Client",
        "description": "You can update any of the basic attributes of a client (but not its associations) using this API.\n\nChanging the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.\n\nThe relationship between a client and a group must be removed through the Groups API.",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "ClientId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client Api"
        ],
        "summary": "Delete a Client",
        "description": "If a client is in Pending state, you are allowed to Delete it. The delete is a 'hard delete' and cannot be recovered from. Once clients become active or have loans or savings associated with them, you cannot delete the client but you may Close the client if they have left the program.",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/clients/template": {
      "get": {
        "tags": [
          "Client Api"
        ],
        "summary": "Retrieve Client Details Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value ListsExample Request:\n\nclients/template",
        "operationId": "retrieveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "officeId",
            "in": "query",
            "description": "optional",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "commandParam",
            "in": "query",
            "description": "optional If commandParam=close retrieves all closureReasons which are associated with \"ClientClosureReason\" value.",
            "required": false,
            "type": "string",
            "default": "false"
          },
          {
            "name": "staffInSelectedOfficeOnly",
            "in": "query",
            "description": "optional Defaults to false if not provided. If staffInSelectedOfficeOnly=true only staff who are associated with the selected branch are returned.",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClientData"
            }
          }
        }
      }
    },
    "/surveys/{surveyId}/lookuptables": {
      "get": {
        "tags": [
          "SPM API - LookUp Table"
        ],
        "summary": "List all Lookup Table entries",
        "description": "List all Lookup Table entries for a survey.",
        "operationId": "fetchLookupTables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "Enter surveyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LookupTableData"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SPM API - LookUp Table"
        ],
        "summary": "Create a Lookup Table entry",
        "description": "Add a new netry to a survey.\n\nMandatory Fields\nkey, score, validFrom, validTo",
        "operationId": "createLookupTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "Enter surveyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/LookupTableData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/surveys/{surveyId}/lookuptables/{key}": {
      "get": {
        "tags": [
          "SPM API - LookUp Table"
        ],
        "summary": "Retrieve a Lookup Table entry",
        "description": "Retrieve a Lookup Table entry for a survey.",
        "operationId": "findLookupTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "Enter surveyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "key",
            "in": "path",
            "description": "Enter key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LookupTableData"
            }
          }
        }
      }
    },
    "/surveys/{surveyId}/scorecards": {
      "get": {
        "tags": [
          "SPM - Scorecards"
        ],
        "summary": "List all Scorecard entries",
        "description": "List all Scorecard entries for a survey.",
        "operationId": "findBySurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "Enter surveyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Scorecard"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SPM - Scorecards"
        ],
        "summary": "Create a Scorecard entry",
        "description": "Add a new netry to a survey.\n\nMandatory Fields\nclientId, createdOn, questionId, responseId, staffId",
        "operationId": "createScorecard",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "Enter surveyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ScorecardData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/surveys/{surveyId}/scorecards/clients/{clientId}": {
      "get": {
        "tags": [
          "SPM - Scorecards"
        ],
        "operationId": "findBySurveyClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "surveyId",
            "in": "path",
            "description": "Enter surveyId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "clientId",
            "in": "path",
            "description": "Enter clientId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScorecardData"
              }
            },
            "headers": {}
          }
        }
      }
    },
    "/surveys/{id}": {
      "get": {
        "tags": [
          "SPM - Serveys"
        ],
        "summary": "Retrieve a Survey",
        "description": "",
        "operationId": "findSurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SurveyData"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "SPM - Serveys"
        ],
        "summary": "Deactivate Survey",
        "description": "",
        "operationId": "deactivateSurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Enter id",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/surveys": {
      "get": {
        "tags": [
          "SPM - Serveys"
        ],
        "summary": "List all Surveys",
        "description": "",
        "operationId": "fetchActiveSurveys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SurveyData"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "SPM - Serveys"
        ],
        "summary": "Create a Survey",
        "description": "Adds a new survey to collect client related data.\n\nMandatory Fields\n\ncountryCode, key, name, questions, responses, sequenceNo, text, value",
        "operationId": "createSurvey",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Create survey",
            "required": false,
            "schema": {
              "$ref": "#/definitions/SurveyData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/templates/{templateId}": {
      "get": {
        "tags": [
          "User Generated Documents"
        ],
        "summary": "Retrieve a UGD",
        "description": "Example Requests:\n\ntemplates/1",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "templateId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTemplatesTemplateIdResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Generated Documents"
        ],
        "operationId": "mergeTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "text/html"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      },
      "put": {
        "tags": [
          "User Generated Documents"
        ],
        "summary": "Update a UGD",
        "description": "",
        "operationId": "saveTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "templateId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutTemplatesTemplateIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutTemplatesTemplateIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Generated Documents"
        ],
        "summary": "Delete a UGD",
        "description": "",
        "operationId": "deleteTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "templateId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteTemplatesTemplateIdResponse"
            }
          }
        }
      }
    },
    "/templates/{templateId}/template": {
      "get": {
        "tags": [
          "User Generated Documents"
        ],
        "operationId": "getTemplateByTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            },
            "headers": {}
          }
        }
      }
    },
    "/templates/template": {
      "get": {
        "tags": [
          "User Generated Documents"
        ],
        "summary": "Retrieve UGD Details Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for UGDs. The UGD data returned consists of any or all of:\n\nARGUMENTS\nname String entity String type String text String optional mappers Mapper optional\nExample Request:\n\ntemplates/template",
        "operationId": "template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTemplatesTemplateResponse"
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "User Generated Documents"
        ],
        "summary": "Retrieve all UGDs",
        "description": "Example Requests:\n\ntemplates\n\nIt is also possible to get specific UGDs by entity and type:\n\ntemplates?type=0&entity=0\n[Entity: Id]\n\n\n\n\n\nclient: 0, loan: 1\n\n[Type: Id]\n\n\n\nDocument: 0, E-Mail (not yet): 1,  SMS: 2",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "typeId",
            "in": "query",
            "description": "typeId",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          },
          {
            "name": "entityId",
            "in": "query",
            "description": "entityId",
            "required": false,
            "type": "integer",
            "default": -1,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTemplatesResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Generated Documents"
        ],
        "summary": "Add a UGD",
        "description": "Adds a new UGD.\n\nMandatory Fields\nname\n\n\n\nExample Requests:\n\ntemplates/1",
        "operationId": "createTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostTemplatesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostTemplatesResponse"
            }
          }
        }
      }
    },
    "/passwordpreferences": {
      "get": {
        "tags": [
          "Password preferences"
        ],
        "operationId": "retrieve",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetPasswordPreferencesTemplateResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Password preferences"
        ],
        "summary": "Update password preferences",
        "description": "",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutPasswordPreferencesTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/passwordpreferences/template": {
      "get": {
        "tags": [
          "Password preferences"
        ],
        "summary": "List Application Password validation policies",
        "description": "ARGUMENTS\nExample Requests:\n\npasswordpreferences",
        "operationId": "template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetPasswordPreferencesTemplateResponse"
              }
            }
          }
        }
      }
    },
    "/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "List Application Permissions",
        "description": "ARGUMENTS\nmakerCheckerableoptional, Values are true, false. Default is false.\nIf makerCheckerable=false or not supplied then a list of application permissions is returned. The \"selected\" attribute is always true in this case.\n\nIf makerCheckerable=true then the \"selected\" attribute shows whether the permission is enabled for Maker Check functionality.\n\nNote: Each Apache Fineract transaction is associated with a permission.\n\nExample Requests:\n\npermissions\n\n\npermissions?makerCheckerable=true\n\n\npermissions?fields=grouping,code",
        "operationId": "retrieveAllPermissions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetPermissionsResponse"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "Enable/Disable Permissions for Maker Checker",
        "description": "",
        "operationId": "updatePermissionsDetails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutPermissionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CommandProcessingResult"
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "List Roles",
        "description": "Example Requests:\n\nroles\n\n\nroles?fields=name",
        "operationId": "retrieveAllRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetRolesResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create a New Role",
        "description": "Mandatory Fields\nname, description",
        "operationId": "createRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostRolesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostRolesResponse"
            }
          }
        }
      }
    },
    "/roles/{roleId}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Retrieve a Role",
        "description": "Example Requests:\n\nroles/1\n\n\nroles/1?fields=name",
        "operationId": "retrieveRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetRolesRoleIdResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Enable Role | Disable Role",
        "description": "Description : Enable role in case role is disabled. | Disable the role in case role is not associated with any users.\n\n\n\n\n\nExample Request:   https://DomainName/api/v1/roles/{roleId}?command=enable\n\n\n\n\n\nhttps://DomainName/api/v1/roles/{roleId}?command=disable",
        "operationId": "actionsOnRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "command",
            "in": "query",
            "description": "command",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostRolesRoleIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a Role",
        "description": "",
        "operationId": "updateRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRolesRoleIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutRolesRoleIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a Role",
        "description": "Description : Delete the role in case role is not associated with any users.",
        "operationId": "deleteRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteRolesRoleIdResponse"
            }
          }
        }
      }
    },
    "/roles/{roleId}/permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Retrieve a Role's Permissions",
        "description": "Example Requests:\n\nroles/1/permissions",
        "operationId": "retrieveRolePermissions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetRolesRoleIdPermissionsResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a Role's Permissions",
        "description": "",
        "operationId": "updateRolePermissions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "roleId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutRolesRoleIdPermissionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutRolesRoleIdPermissionsResponse"
            }
          }
        }
      }
    },
    "/users/template": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve User Details Template",
        "description": "This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:\n\nField Defaults\nAllowed Value Lists\nExample Request:\n\nusers/template",
        "operationId": "template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetUsersTemplateResponse"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve list of users",
        "description": "Example Requests:\n\nusers\n\n\nusers?fields=id,username,email,officeName",
        "operationId": "retrieveAll",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GetUsersResponse"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a User",
        "description": "Adds new application user.\n\nNote: Password information is not required (or processed). Password details at present are auto-generated and then sent to the email account given (which is why it can take a few seconds to complete).\n\nMandatory Fields: \nusername, firstname, lastname, email, officeId, roles, sendPasswordToEmail\n\nOptional Fields: \nstaffId,passwordNeverExpires,isSelfServiceUser,clients",
        "operationId": "create",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostUsersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PostUsersResponse"
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve a User",
        "description": "Example Requests:\n\nusers/1\n\n\nusers/1?template=true\n\n\nusers/1?fields=username,officeName",
        "operationId": "retrieveOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetUsersUserIdResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a User",
        "description": "When updating a password you must provide the repeatPassword parameter also.",
        "operationId": "update",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PutUsersUserIdRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PutUsersUserIdResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a User",
        "description": "Removes the user and the associated roles and permissions.",
        "operationId": "delete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeleteUsersUserIdResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "runaccrualsRequest": {
      "type": "object",
      "required": [
        "tillDate"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        },
        "tillDate": {
          "type": "string",
          "example": "04 June 2014"
        }
      }
    },
    "GetGLClosureResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 7
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "closingDate": {
          "type": "string",
          "format": "date",
          "example": "2013,1,2"
        },
        "deleted": {
          "type": "boolean",
          "example": false
        },
        "createdDate": {
          "type": "string",
          "format": "date",
          "example": "2013,1,3"
        },
        "lastUpdatedDate": {
          "type": "string",
          "format": "date",
          "example": "2013,1,3"
        },
        "createdByUserId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "createdByUsername": {
          "type": "string",
          "example": "mifos"
        },
        "lastUpdatedByUserId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "lastUpdatedByUsername": {
          "type": "string",
          "example": "mifos"
        },
        "comments": {
          "type": "string",
          "example": "closed"
        }
      }
    },
    "PostGlClosuresResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 9
        }
      }
    },
    "PostGLCLosuresRequest": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "closingDate": {
          "type": "string",
          "format": "date",
          "example": "06 December 2012"
        },
        "comments": {
          "type": "string",
          "example": "The accountants are heading for a carribean vacation"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        }
      }
    },
    "PutGlClosuresResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 9
        },
        "comments": {
          "type": "string",
          "example": "All transactions verified by Johnny Cash"
        }
      }
    },
    "PutGlClosuresRequest": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "example": "All transactions verified by Johnny Cash"
        }
      }
    },
    "DeleteGlClosuresResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 9
        }
      }
    },
    "PostFinancialActivityAccountsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostFinancialActivityAccountsRequest": {
      "type": "object",
      "properties": {
        "financialActivityId": {
          "type": "integer",
          "format": "int64",
          "example": 200
        },
        "glAccountId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "PutFinancialActivityAccountsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "comments": {
          "$ref": "#/definitions/PutFinancialActivityAccountscommentsSwagger"
        }
      }
    },
    "PutFinancialActivityAccountscommentsSwagger": {
      "type": "object",
      "properties": {
        "glAccountId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "DeleteFinancialActivityAccountsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "EnumOptionData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "FinancialActivityData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "mappedGLAccountType": {
          "type": "string",
          "enum": [
            "ASSET",
            "LIABILITY",
            "EQUITY",
            "INCOME",
            "EXPENSE"
          ]
        }
      }
    },
    "GLAccountData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "typeId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GetFinancialActivityAccountsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "financialActivityData": {
          "$ref": "#/definitions/FinancialActivityData"
        },
        "glAccountData": {
          "$ref": "#/definitions/GLAccountData"
        }
      }
    },
    "CodeValueData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean"
        }
      }
    },
    "GetGLAccountsTemplateResponse": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean",
          "example": false
        },
        "manualEntriesAllowed": {
          "type": "boolean",
          "example": true
        },
        "type": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "usage": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "accountTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "usageOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "assetHeaderAccountOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GLAccountData"
          }
        },
        "liabilityHeaderAccountOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GLAccountData"
          }
        },
        "equityHeaderAccountOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GLAccountData"
          }
        },
        "expenseHeaderAccountOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GLAccountData"
          }
        },
        "allowedAssetsTagOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueData"
          }
        },
        "allowedLiabilitiesTagOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueData"
          }
        },
        "allowedEquityTagOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueData"
          }
        },
        "allowedIncomeTagOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueData"
          }
        },
        "allowedExpensesTagOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CodeValueData"
          }
        }
      }
    },
    "GetGLAccountsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 16
        },
        "name": {
          "type": "string",
          "example": "Cash"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "glCode": {
          "type": "string",
          "example": "100001"
        },
        "disabled": {
          "type": "boolean",
          "example": false
        },
        "manualEntriesAllowed": {
          "type": "boolean",
          "example": true
        },
        "type": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "usage": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "description": {
          "type": "string",
          "example": "Desc"
        },
        "nameDecorated": {
          "type": "string",
          "example": "....Cash"
        },
        "tagId": {
          "$ref": "#/definitions/CodeValueData"
        },
        "organizationRunningBalance": {
          "type": "integer",
          "format": "int64",
          "example": 118437
        }
      }
    },
    "PostGLAccountsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int32",
          "example": 22
        }
      }
    },
    "PostGLAccountsRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Cash at Bangalore"
        },
        "glCode": {
          "type": "string",
          "example": "100001"
        },
        "manualEntriesAllowed": {
          "type": "boolean",
          "example": true
        },
        "type": {
          "type": "string",
          "example": "1"
        },
        "tagId": {
          "type": "string",
          "example": "10"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "usage": {
          "example": "1",
          "$ref": "#/definitions/EnumOptionData"
        },
        "description": {
          "type": "string",
          "example": "Desc"
        }
      }
    },
    "PutGLAccountsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int32",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutGLAccountsResponsechangesSwagger"
        }
      }
    },
    "PutGLAccountsResponsechangesSwagger": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Cash at Bangalore"
        }
      }
    },
    "PutGLAccountsRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Cash at Bangalore"
        }
      }
    },
    "DeleteGLAccountsRequest": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int32",
          "example": 1
        }
      }
    },
    "JournalEntryData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "glAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "glAccountType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "entryType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "amount": {
          "type": "number"
        },
        "transactionId": {
          "type": "string"
        }
      }
    },
    "PostJournalEntriesResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "description": "1"
        },
        "transactionId": {
          "type": "string",
          "description": "RS9MCISID4WK1ZM"
        }
      }
    },
    "JournalEntryCommand": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "transactionDate": {
          "type": "string",
          "format": "date"
        },
        "comments": {
          "type": "string"
        },
        "referenceNumber": {
          "type": "string"
        },
        "accountingRuleId": {
          "type": "integer",
          "format": "int64"
        },
        "credits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleDebitOrCreditEntryCommand"
          }
        },
        "debits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SingleDebitOrCreditEntryCommand"
          }
        }
      }
    },
    "SingleDebitOrCreditEntryCommand": {
      "type": "object",
      "properties": {
        "glAccountId": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number"
        },
        "comments": {
          "type": "string"
        },
        "parametersPassedInRequest": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string"
          }
        },
        "commentsChanged": {
          "type": "boolean"
        },
        "glAmountChanged": {
          "type": "boolean"
        },
        "glAccountIdChanged": {
          "type": "boolean"
        }
      }
    },
    "PostJournalEntriesTransactionIdResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "description": "1"
        }
      }
    },
    "PostJournalEntriesTransactionIdRequest": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "description": "1"
        }
      }
    },
    "PostProvisioningEntriesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostProvisioningEntriesRequest": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "example": "16 October 2015"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        },
        "createjournalentries": {
          "type": "string",
          "example": "true"
        },
        "provisioningentry": {
          "type": "string"
        },
        "entries": {
          "type": "string"
        }
      }
    },
    "PutProvisioningEntriesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PutProvisioningEntriesRequest": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "example": "recreateprovisioningentry"
        }
      }
    },
    "ProvisioningEntryData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "LoanProductProvisioningEntryData": {
      "type": "object",
      "properties": {
        "historyId": {
          "type": "integer",
          "format": "int64"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "currencyCode": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "overdueInDays": {
          "type": "integer",
          "format": "int64"
        },
        "percentage": {
          "type": "number"
        },
        "liablityAccount": {
          "type": "integer",
          "format": "int64"
        },
        "expenseAccount": {
          "type": "integer",
          "format": "int64"
        },
        "criteriaId": {
          "type": "integer",
          "format": "int64"
        },
        "outstandingBalance": {
          "type": "number"
        }
      }
    },
    "AccountingTagRuleData": {
      "type": "object",
      "properties": {
        "tag": {
          "$ref": "#/definitions/CodeValueData"
        }
      }
    },
    "GetAccountRulesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "officeName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "allowMultipleDebitEntries": {
          "type": "boolean"
        },
        "allowMultipleCreditEntries": {
          "type": "boolean"
        },
        "creditTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingTagRuleData"
          }
        },
        "debitTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingTagRuleData"
          }
        }
      }
    },
    "AccountingRuleData": {
      "type": "object",
      "properties": {
        "creditTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingTagRuleData"
          }
        },
        "debitTags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingTagRuleData"
          }
        }
      }
    },
    "PostAccountingRulesResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostAccountingRulesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "test"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "accountToDebit": {
          "type": "integer",
          "format": "int64",
          "example": 21
        },
        "accountToCredit": {
          "type": "integer",
          "format": "int64",
          "example": 9
        },
        "description": {
          "type": "string",
          "example": "Employee salary"
        }
      }
    },
    "PutAccountingRulesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutAccountingRulesResponsechangesSwagger"
        }
      }
    },
    "PutAccountingRulesResponsechangesSwagger": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Employee Salary posting rule"
        }
      }
    },
    "PutAccountingRulesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Employee Salary posting rule"
        }
      }
    },
    "DeleteAccountingRulesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetAccountRulesTemplateResponse": {
      "type": "object",
      "properties": {
        "systemDefined": {
          "type": "boolean",
          "example": false
        },
        "allowedOffices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeData"
          }
        },
        "allowedAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GLAccountData"
          }
        }
      }
    },
    "OfficeData": {
      "type": "object",
      "properties": {
        "hierarchy": {
          "type": "string"
        }
      }
    },
    "BatchResponse": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "integer",
          "format": "int64"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "headers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Header"
          }
        },
        "body": {
          "type": "string"
        }
      }
    },
    "Header": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PostBatchesRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "relativeUrl": {
          "type": "string",
          "example": "clients"
        },
        "method": {
          "type": "string",
          "example": "POST"
        },
        "headers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Header"
          }
        },
        "reference": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "body": {
          "$ref": "#/definitions/PostBodyRequestSwagger"
        }
      }
    },
    "PostBodyRequestSwagger": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "firstname": {
          "type": "string",
          "example": "\"Petra\""
        },
        "lastname": {
          "type": "string",
          "example": "\"Yton\""
        },
        "externalId": {
          "type": "string",
          "example": "\"ex_externalId1\""
        },
        "dateFormat": {
          "type": "string",
          "example": "\"dd MMMM yyyy\""
        },
        "locale": {
          "type": "string",
          "example": "\"en\""
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "activationDate": {
          "type": "string",
          "example": "\"04 March 2009\""
        },
        "submittedOnDate": {
          "type": "string",
          "example": "\"04 March 2009\""
        }
      }
    },
    "GetMakerCheckerResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "actionName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        },
        "resourceId": {
          "type": "integer",
          "format": "int64"
        },
        "subresourceId": {
          "type": "integer",
          "format": "int64"
        },
        "maker": {
          "type": "string"
        },
        "madeOnDate": {
          "type": "string",
          "format": "date-time"
        },
        "checker": {
          "type": "string"
        },
        "checkedOnDate": {
          "type": "string",
          "format": "date-time"
        },
        "processingResult": {
          "type": "string"
        },
        "commandAsJson": {
          "type": "string"
        },
        "officeName": {
          "type": "string"
        },
        "groupLevelName": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "clientName": {
          "type": "string"
        },
        "loanAccountNo": {
          "type": "string"
        },
        "savingsAccountNo": {
          "type": "string"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "loanId": {
          "type": "integer",
          "format": "int64"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "AppUserData": {
      "type": "object",
      "properties": {
        "selfServiceUser": {
          "type": "boolean"
        }
      }
    },
    "GetMakerCheckersSearchTemplateResponse": {
      "type": "object",
      "properties": {
        "appUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppUserData"
          }
        },
        "actionNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "entityNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "processingResults": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProcessingResultLookup"
          }
        }
      }
    },
    "ProcessingResultLookup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "processingResult": {
          "type": "string"
        }
      }
    },
    "PostMakerCheckersResponse": {
      "type": "object",
      "properties": {
        "auditId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetAccountNumberFormatsIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "accountType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "prefixType": {
          "$ref": "#/definitions/EnumOptionData"
        }
      }
    },
    "GetAccountNumberFormatsResponseTemplate": {
      "type": "object",
      "properties": {
        "accountTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "prefixTypeOptions": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/EnumOptionData"
            }
          }
        }
      }
    },
    "PutAccountNumberFormatsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "changes": {
          "$ref": "#/definitions/PutAccountNumberFormatschangesSwagger"
        }
      }
    },
    "PutAccountNumberFormatschangesSwagger": {
      "type": "object",
      "properties": {
        "prefixType": {
          "type": "integer",
          "format": "int64",
          "example": "OFFICE_NAME"
        }
      }
    },
    "PutAccountNumberFormatsRequest": {
      "type": "object",
      "properties": {
        "prefixType": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "DeleteAccountNumberFormatsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "PostAccountNumberFormatsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "PostAccountNumberFormatsRequest": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "prefixType": {
          "type": "integer",
          "format": "int64",
          "example": 101
        }
      }
    },
    "PutCachechangesSwagger": {
      "type": "object",
      "properties": {
        "cacheType": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "PutCachesResponse": {
      "type": "object",
      "properties": {
        "cacheType": {
          "$ref": "#/definitions/PutCachechangesSwagger"
        }
      }
    },
    "PutCachesRequest": {
      "type": "object",
      "properties": {
        "cacheType": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "GetCachesResponse": {
      "type": "object",
      "properties": {
        "cacheType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "CommandWrapper": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "integer",
          "format": "int64"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "loanId": {
          "type": "integer",
          "format": "int64"
        },
        "savingsId": {
          "type": "integer",
          "format": "int64"
        },
        "entityName": {
          "type": "string"
        },
        "taskPermissionName": {
          "type": "string"
        },
        "entityId": {
          "type": "integer",
          "format": "int64"
        },
        "subentityId": {
          "type": "integer",
          "format": "int64"
        },
        "href": {
          "type": "string"
        },
        "json": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "creditBureauId": {
          "type": "integer",
          "format": "int64"
        },
        "organisationCreditBureauId": {
          "type": "integer",
          "format": "int64"
        },
        "create": {
          "type": "boolean"
        },
        "createDatatable": {
          "type": "boolean"
        },
        "deleteDatatable": {
          "type": "boolean"
        },
        "updateDatatable": {
          "type": "boolean"
        },
        "datatableResource": {
          "type": "boolean"
        },
        "deleteOneToOne": {
          "type": "boolean"
        },
        "deleteMultiple": {
          "type": "boolean"
        },
        "updateOneToOne": {
          "type": "boolean"
        },
        "updateMultiple": {
          "type": "boolean"
        },
        "registerDatatable": {
          "type": "boolean"
        },
        "noteResource": {
          "type": "boolean"
        },
        "cacheResource": {
          "type": "boolean"
        },
        "updateOperation": {
          "type": "boolean"
        },
        "delete": {
          "type": "boolean"
        },
        "deleteOperation": {
          "type": "boolean"
        },
        "surveyResource": {
          "type": "boolean"
        },
        "registerSurvey": {
          "type": "boolean"
        },
        "fullFilSurvey": {
          "type": "boolean"
        },
        "workingDaysResource": {
          "type": "boolean"
        },
        "passwordPreferencesResource": {
          "type": "boolean"
        },
        "permissionResource": {
          "type": "boolean"
        },
        "userResource": {
          "type": "boolean"
        },
        "currencyResource": {
          "type": "boolean"
        },
        "loanDisburseDetailResource": {
          "type": "boolean"
        },
        "updateDisbursementDate": {
          "type": "boolean"
        },
        "update": {
          "type": "boolean"
        }
      }
    },
    "GetCodeValuesDataResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Passport"
        },
        "description": {
          "type": "string",
          "example": "Passport information"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "example": 0
        }
      }
    },
    "PostCodeValueDataResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "PostCodeValuesDataRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Passport"
        },
        "description": {
          "type": "string",
          "example": "Passport information"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "example": 0
        }
      }
    },
    "PutCodeValueDataResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        },
        "changes": {
          "$ref": "#/definitions/PutCodeValuechangesSwagger"
        }
      }
    },
    "PutCodeValuechangesSwagger": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Passport"
        },
        "description": {
          "type": "string",
          "example": "Passport information"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "example": 0
        }
      }
    },
    "PutCodeValuesDataRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Passport"
        },
        "description": {
          "type": "string",
          "example": "Passport information"
        },
        "position": {
          "type": "integer",
          "format": "int32",
          "example": 0
        }
      }
    },
    "DeleteCodeValueDataResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "GetCodesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Education"
        },
        "systemDefined": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PostCodesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "PostCodesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "MyNewCode"
        }
      }
    },
    "PutCodesApichangesSwagger": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "MyNewCode(changed)"
        }
      }
    },
    "PutCodesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        },
        "changes": {
          "$ref": "#/definitions/PutCodesApichangesSwagger"
        }
      }
    },
    "PutCodesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "MyNewCode(changed)"
        }
      }
    },
    "DeleteCodesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "PutExternalServiceRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "test@mifos.org"
        },
        "password": {
          "type": "string",
          "example": "XXXX"
        }
      }
    },
    "ExternalServicesPropertiesData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GetGlobalConfigurationsResponse": {
      "type": "object",
      "properties": {
        "globalConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GlobalConfigurationPropertyData"
          }
        }
      }
    },
    "GlobalConfigurationPropertyData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        },
        "dateValue": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "trapDoor": {
          "type": "boolean"
        }
      }
    },
    "PutGlobalConfigurationsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        },
        "changes": {
          "$ref": "#/definitions/PutGlobalConfigurationsResponsechangesSwagger"
        }
      }
    },
    "PutGlobalConfigurationsResponsechangesSwagger": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PutGlobalConfigurationsRequest": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "PutDataTablesResponse": {
      "type": "object",
      "properties": {
        "resourceIdentifier": {
          "type": "string",
          "example": "extra_client_details"
        }
      }
    },
    "PutDataTablesRequest": {
      "type": "object",
      "properties": {
        "appTableName": {
          "type": "string",
          "example": "m_client"
        },
        "dropColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PutDataTablesRequestDropColumns"
          }
        },
        "addColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PutDataTablesRequestAddColumns"
          }
        },
        "ChangeColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PutDataTablesRequestChangeColumns"
          }
        }
      }
    },
    "PutDataTablesRequestAddColumns": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Question"
        },
        "type": {
          "type": "string",
          "example": "Dropdown"
        },
        "code": {
          "type": "string",
          "example": "Gender"
        },
        "mandatory": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PutDataTablesRequestChangeColumns": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Question"
        },
        "newName": {
          "type": "string",
          "example": "Question 2"
        },
        "code": {
          "type": "string",
          "example": "Gender"
        },
        "newCode": {
          "type": "string",
          "example": "Gender2"
        },
        "mandatory": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PutDataTablesRequestDropColumns": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Gender_cd_Question"
        }
      }
    },
    "GetDataTablesResponse": {
      "type": "object",
      "properties": {
        "appTableName": {
          "type": "string",
          "example": "m_client"
        },
        "datatableName": {
          "type": "string",
          "example": "extra_client_details"
        },
        "column": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultsetColumnHeaderData"
          }
        }
      }
    },
    "ResultsetColumnHeaderData": {
      "type": "object",
      "properties": {
        "columnName": {
          "type": "string"
        },
        "columnType": {
          "type": "string"
        },
        "columnLength": {
          "type": "integer",
          "format": "int64"
        },
        "columnDisplayType": {
          "type": "string"
        },
        "columnCode": {
          "type": "string"
        },
        "dateDisplayType": {
          "type": "boolean"
        },
        "dateTimeDisplayType": {
          "type": "boolean"
        },
        "integerDisplayType": {
          "type": "boolean"
        },
        "decimalDisplayType": {
          "type": "boolean"
        },
        "booleanDisplayType": {
          "type": "boolean"
        },
        "codeValueDisplayType": {
          "type": "boolean"
        },
        "codeLookupDisplayType": {
          "type": "boolean"
        },
        "string": {
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "PostDataTablesResponse": {
      "type": "object",
      "properties": {
        "resourceIdentifier": {
          "type": "string",
          "example": "extra_client_details"
        }
      }
    },
    "PostDataTablesRequest": {
      "type": "object",
      "properties": {
        "applicationTableName": {
          "type": "string",
          "example": "m_client"
        },
        "registeredTableName": {
          "type": "string",
          "example": "extra_client_details"
        },
        "multiRow": {
          "type": "boolean",
          "example": true
        },
        "columnHeaderData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultsetColumnHeaderData"
          }
        }
      }
    },
    "DeleteDataTablesResponse": {
      "type": "object",
      "properties": {
        "resourceIdentifier": {
          "type": "string",
          "example": "extra_client_details"
        }
      }
    },
    "PostDataTablesRegisterDatatableAppTable": {
      "type": "object"
    },
    "GetDataTablesAppTableIdResponse": {
      "type": "object",
      "properties": {
        "columnHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultsetColumnHeaderData"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultsetRowData"
          }
        }
      }
    },
    "ResultsetRowData": {
      "type": "object",
      "properties": {
        "row": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PostDataTablesAppTableIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostDataTablesAppTableIdRequest": {
      "type": "object",
      "properties": {
        "BusinessDescription": {
          "type": "string",
          "example": "Livestock sales"
        },
        "Comment": {
          "type": "string",
          "example": "First comment made"
        },
        "Education_cv": {
          "type": "string",
          "example": "Primary"
        },
        "Gender_cd": {
          "type": "integer",
          "format": "int64",
          "example": 6
        },
        "HighestRatePaid": {
          "type": "number",
          "format": "double",
          "example": 8.5
        },
        "NextVisit": {
          "type": "string",
          "example": "01 October 2012"
        },
        "YearsinBusiness": {
          "type": "integer",
          "format": "int64",
          "example": 5
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "PutDataTablesAppTableIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutDataTablesAppTableIdResponseChanges"
        }
      }
    },
    "PutDataTablesAppTableIdResponseChanges": {
      "type": "object",
      "properties": {
        "BusinessDescription": {
          "type": "string",
          "example": "Livestock sales updated"
        }
      }
    },
    "PutDataTablesAppTableIdRequest": {
      "type": "object",
      "properties": {
        "BusinessDescription": {
          "type": "string",
          "example": "Livestock sales updated"
        }
      }
    },
    "PutDataTablesAppTableIdDatatableIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PutDataTablesAppTableIdDatatableIdRequest": {
      "type": "object",
      "properties": {
        "DateOfBirth": {
          "type": "string",
          "example": "01 June 1982"
        },
        "Education_cdHighest": {
          "type": "integer",
          "format": "int64",
          "example": 5
        },
        "Name": {
          "type": "string",
          "example": "June"
        },
        "OtherNotes": {
          "type": "string",
          "example": "More notes"
        },
        "PointsScore": {
          "type": "integer",
          "format": "int64",
          "example": 20
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "DeleteDataTablesDatatableAppTableIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "DeleteDataTablesDatatableAppTableIdDatatableIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "DeleteEntityDatatableChecksTemplateResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostEntityDatatableChecksTemplateResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostEntityDatatableChecksTemplateRequest": {
      "type": "object",
      "properties": {
        "entity": {
          "type": "string",
          "example": "m_loan"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "example": 100
        },
        "datatableName": {
          "type": "string",
          "example": "Additional Details"
        },
        "productId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetEntityDatatableChecksResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "entity": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "datatableName": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "order": {
          "type": "integer",
          "format": "int64"
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "productName": {
          "type": "string"
        }
      }
    },
    "AppUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "accountNonExpired": {
          "type": "boolean"
        },
        "accountNonLocked": {
          "type": "boolean"
        },
        "credentialsNonExpired": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "office": {
          "$ref": "#/definitions/Office"
        },
        "staff": {
          "$ref": "#/definitions/Staff"
        },
        "roles": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Role"
          }
        },
        "lastTimePasswordUpdated": {
          "type": "string",
          "format": "date-time"
        },
        "passwordNeverExpires": {
          "type": "boolean"
        },
        "appUserClientMappings": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/AppUserClientMapping"
          }
        },
        "authorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantedAuthority"
          }
        },
        "selfServiceUser": {
          "type": "boolean"
        },
        "staffId": {
          "type": "integer",
          "format": "int64"
        },
        "staffDisplayName": {
          "type": "string"
        },
        "notEnabled": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "AppUserClientMapping": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "client": {
          "$ref": "#/definitions/Client"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Charge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        },
        "currencyCode": {
          "type": "string"
        },
        "chargeTimeType": {
          "type": "integer",
          "format": "int32"
        },
        "chargeCalculation": {
          "type": "integer",
          "format": "int32"
        },
        "chargePaymentMode": {
          "type": "integer",
          "format": "int32"
        },
        "feeInterval": {
          "type": "integer",
          "format": "int32"
        },
        "penalty": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "minCap": {
          "type": "number"
        },
        "maxCap": {
          "type": "number"
        },
        "account": {
          "$ref": "#/definitions/GLAccount"
        },
        "taxGroup": {
          "$ref": "#/definitions/TaxGroup"
        },
        "feeOnMonthDay": {
          "$ref": "#/definitions/MonthDay"
        },
        "savingsCharge": {
          "type": "boolean"
        },
        "annualFee": {
          "type": "boolean"
        },
        "monthlyFee": {
          "type": "boolean"
        },
        "overdueInstallment": {
          "type": "boolean"
        },
        "allowedLoanChargeTime": {
          "type": "boolean"
        },
        "allowedClientChargeTime": {
          "type": "boolean"
        },
        "allowedSavingsChargeTime": {
          "type": "boolean"
        },
        "loanCharge": {
          "type": "boolean"
        },
        "clientCharge": {
          "type": "boolean"
        },
        "allowedSavingsChargeCalculationType": {
          "type": "boolean"
        },
        "allowedClientChargeCalculationType": {
          "type": "boolean"
        },
        "percentageOfApprovedAmount": {
          "type": "boolean"
        },
        "percentageOfDisbursementAmount": {
          "type": "boolean"
        },
        "disbursementCharge": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "ChargeData": {
      "type": "object",
      "properties": {
        "penalty": {
          "type": "boolean"
        },
        "overdueInstallmentCharge": {
          "type": "boolean"
        }
      }
    },
    "Chronology": {
      "type": "object",
      "properties": {
        "zone": {
          "$ref": "#/definitions/DateTimeZone"
        }
      }
    },
    "Client": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "office": {
          "$ref": "#/definitions/Office"
        },
        "transferToOffice": {
          "$ref": "#/definitions/Office"
        },
        "image": {
          "$ref": "#/definitions/Image"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "firstname": {
          "type": "string"
        },
        "middlename": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "staff": {
          "$ref": "#/definitions/Staff"
        },
        "groups": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "accountNumberRequiresAutoGeneration": {
          "type": "boolean"
        },
        "closureDate": {
          "type": "string",
          "format": "date"
        },
        "withdrawalDate": {
          "type": "string",
          "format": "date"
        },
        "submittedOnDate": {
          "type": "string",
          "format": "date"
        },
        "legalForm": {
          "type": "integer",
          "format": "int32"
        },
        "reopenedDate": {
          "type": "string",
          "format": "date"
        },
        "active": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean"
        },
        "rejected": {
          "type": "boolean"
        },
        "rejectedDate": {
          "type": "string",
          "format": "date"
        },
        "notActive": {
          "type": "boolean"
        },
        "pending": {
          "type": "boolean"
        },
        "withdrawn": {
          "type": "boolean"
        },
        "transferInProgress": {
          "type": "boolean"
        },
        "transferOnHold": {
          "type": "boolean"
        },
        "transferInProgressOrOnHold": {
          "type": "boolean"
        },
        "notPending": {
          "type": "boolean"
        },
        "activationLocalDate": {
          "type": "string",
          "format": "date"
        },
        "officeJoiningLocalDate": {
          "type": "string",
          "format": "date"
        },
        "notStaff": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "CurrencyData": {
      "type": "object"
    },
    "DatatableCheckStatusData": {
      "type": "object"
    },
    "DatatableChecksData": {
      "type": "object"
    },
    "DateTimeField": {
      "type": "object",
      "properties": {
        "durationField": {
          "$ref": "#/definitions/DurationField"
        },
        "minimumValue": {
          "type": "integer",
          "format": "int32"
        },
        "maximumValue": {
          "type": "integer",
          "format": "int32"
        },
        "leapDurationField": {
          "$ref": "#/definitions/DurationField"
        },
        "rangeDurationField": {
          "$ref": "#/definitions/DurationField"
        },
        "lenient": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DateTimeFieldType"
        },
        "supported": {
          "type": "boolean"
        }
      }
    },
    "DateTimeFieldType": {
      "type": "object",
      "properties": {
        "rangeDurationType": {
          "$ref": "#/definitions/DurationFieldType"
        },
        "durationType": {
          "$ref": "#/definitions/DurationFieldType"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "DateTimeZone": {
      "type": "object",
      "properties": {
        "fixed": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "DurationField": {
      "type": "object",
      "properties": {
        "precise": {
          "type": "boolean"
        },
        "unitMillis": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/DurationFieldType"
        },
        "supported": {
          "type": "boolean"
        }
      }
    },
    "DurationFieldType": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "FloatingRate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "floatingRatePeriods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FloatingRatePeriod"
          }
        },
        "createdBy": {
          "$ref": "#/definitions/AppUser"
        },
        "modifiedBy": {
          "$ref": "#/definitions/AppUser"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "active": {
          "type": "boolean"
        },
        "baseLendingRate": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "FloatingRatePeriod": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "fromDate": {
          "type": "string",
          "format": "date-time"
        },
        "interestRate": {
          "type": "number"
        },
        "createdBy": {
          "$ref": "#/definitions/AppUser"
        },
        "modifiedBy": {
          "$ref": "#/definitions/AppUser"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedOn": {
          "type": "string",
          "format": "date-time"
        },
        "active": {
          "type": "boolean"
        },
        "floatingRatesId": {
          "$ref": "#/definitions/FloatingRate"
        },
        "differentialToBaseLendingRate": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "FundData": {
      "type": "object"
    },
    "GLAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GLAccount"
          }
        },
        "name": {
          "type": "string"
        },
        "glCode": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "manualEntriesAllowed": {
          "type": "boolean"
        },
        "type": {
          "type": "integer",
          "format": "int32"
        },
        "usage": {
          "type": "integer",
          "format": "int32"
        },
        "headerAccount": {
          "type": "boolean"
        },
        "detailAccount": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "GetEntityDatatableChecksTemplateResponse": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusClient": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatatableCheckStatusData"
          }
        },
        "statusGroup": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatatableCheckStatusData"
          }
        },
        "statusSavings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatatableCheckStatusData"
          }
        },
        "statusLoans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatatableCheckStatusData"
          }
        },
        "datatables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatatableChecksData"
          }
        },
        "loanProductDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductData"
          }
        },
        "savingsProductDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SavingsProductData"
          }
        }
      }
    },
    "GrantedAuthority": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "office": {
          "$ref": "#/definitions/Office"
        },
        "staff": {
          "$ref": "#/definitions/Staff"
        },
        "parent": {
          "$ref": "#/definitions/Group"
        },
        "groupLevel": {
          "$ref": "#/definitions/GroupLevel"
        },
        "clientMembers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Client"
          }
        },
        "submittedOnDate": {
          "type": "string",
          "format": "date"
        },
        "accountNumberRequiresAutoGeneration": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean"
        },
        "activeClientMembers": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Client"
          }
        },
        "childGroup": {
          "type": "boolean"
        },
        "notActive": {
          "type": "boolean"
        },
        "pending": {
          "type": "boolean"
        },
        "transferInProgress": {
          "type": "boolean"
        },
        "transferOnHold": {
          "type": "boolean"
        },
        "group": {
          "type": "boolean"
        },
        "center": {
          "type": "boolean"
        },
        "transferInProgressOrOnHold": {
          "type": "boolean"
        },
        "notPending": {
          "type": "boolean"
        },
        "activationLocalDate": {
          "type": "string",
          "format": "date"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "GroupLevel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "parentId": {
          "type": "integer",
          "format": "int64"
        },
        "superParent": {
          "type": "boolean"
        },
        "levelName": {
          "type": "string"
        },
        "recursable": {
          "type": "boolean"
        },
        "group": {
          "type": "boolean"
        },
        "center": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "type": "string"
        },
        "storageType": {
          "type": "integer",
          "format": "int32"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "LoanProduct": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "shortName": {
          "type": "string"
        },
        "loanProductRelatedDetail": {
          "$ref": "#/definitions/LoanProductRelatedDetail"
        },
        "includeInBorrowerCycle": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "closeDate": {
          "type": "string",
          "format": "date"
        },
        "externalId": {
          "type": "string"
        },
        "minimumDaysBetweenDisbursalAndFirstRepayment": {
          "type": "integer",
          "format": "int32"
        },
        "productInterestRecalculationDetails": {
          "$ref": "#/definitions/LoanProductInterestRecalculationDetails"
        },
        "loanProductGuaranteeDetails": {
          "$ref": "#/definitions/LoanProductGuaranteeDetails"
        },
        "principalThresholdForLastInstallment": {
          "type": "number"
        },
        "installmentAmountInMultiplesOf": {
          "type": "integer",
          "format": "int32"
        },
        "floatingRates": {
          "$ref": "#/definitions/LoanProductFloatingRates"
        },
        "currency": {
          "$ref": "#/definitions/MonetaryCurrency"
        },
        "accountingType": {
          "type": "integer",
          "format": "int32"
        },
        "accrualBasedAccountingEnabled": {
          "type": "boolean"
        },
        "minNominalInterestRatePerPeriod": {
          "type": "number"
        },
        "maxNominalInterestRatePerPeriod": {
          "type": "number"
        },
        "minNumberOfRepayments": {
          "type": "integer",
          "format": "int32"
        },
        "maxNumberOfRepayments": {
          "type": "integer",
          "format": "int32"
        },
        "repaymentStrategy": {
          "$ref": "#/definitions/LoanTransactionProcessingStrategy"
        },
        "loanProductCharges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Charge"
          }
        },
        "loanProductConfigurableAttributes": {
          "$ref": "#/definitions/LoanProductConfigurableAttributes"
        },
        "principalAmount": {
          "$ref": "#/definitions/Money"
        },
        "minPrincipalAmount": {
          "$ref": "#/definitions/Money"
        },
        "maxPrincipalAmount": {
          "$ref": "#/definitions/Money"
        },
        "arrearsBasedOnOriginalSchedule": {
          "type": "boolean"
        },
        "multiDisburseLoan": {
          "type": "boolean"
        },
        "interestRecalculationEnabled": {
          "type": "boolean"
        },
        "numberOfRepayments": {
          "type": "integer",
          "format": "int32"
        },
        "nominalInterestRatePerPeriod": {
          "type": "number"
        },
        "interestPeriodFrequencyType": {
          "type": "string",
          "enum": [
            "DAYS",
            "WEEKS",
            "MONTHS",
            "YEARS",
            "INVALID"
          ]
        },
        "linkedToFloatingInterestRate": {
          "type": "boolean"
        },
        "cashBasedAccountingEnabled": {
          "type": "boolean"
        },
        "upfrontAccrualAccountingEnabled": {
          "type": "boolean"
        },
        "accountingDisabled": {
          "type": "boolean"
        },
        "periodicAccrualAccountingEnabled": {
          "type": "boolean"
        },
        "holdGuaranteeFundsEnabled": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "LoanProductBorrowerCycleVariationData": {
      "type": "object",
      "properties": {
        "borrowerCycleNumber": {
          "type": "integer",
          "format": "int32"
        },
        "paramType": {
          "type": "string",
          "enum": [
            "INVALID",
            "PRINCIPAL",
            "INTERESTRATE",
            "REPAYMENT"
          ]
        },
        "valueConditionType": {
          "type": "string",
          "enum": [
            "INVALID",
            "EQUAL",
            "GREATERTHAN"
          ]
        },
        "defaultValue": {
          "type": "number"
        }
      }
    },
    "LoanProductConfigurableAttributes": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "loanProduct": {
          "$ref": "#/definitions/LoanProduct"
        },
        "amortizationBoolean": {
          "type": "boolean"
        },
        "interestMethodBoolean": {
          "type": "boolean"
        },
        "transactionProcessingStrategyBoolean": {
          "type": "boolean"
        },
        "interestCalcPeriodBoolean": {
          "type": "boolean"
        },
        "arrearsToleranceBoolean": {
          "type": "boolean"
        },
        "repaymentEveryBoolean": {
          "type": "boolean"
        },
        "graceOnPrincipalAndInterestPaymentBoolean": {
          "type": "boolean"
        },
        "graceOnArrearsAgingBoolean": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "LoanProductData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fundId": {
          "type": "integer",
          "format": "int64"
        },
        "fundName": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyData"
        },
        "principal": {
          "type": "number"
        },
        "minPrincipal": {
          "type": "number"
        },
        "maxPrincipal": {
          "type": "number"
        },
        "numberOfRepayments": {
          "type": "integer",
          "format": "int32"
        },
        "repaymentEvery": {
          "type": "integer",
          "format": "int32"
        },
        "repaymentFrequencyType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "interestRatePerPeriod": {
          "type": "number"
        },
        "interestRateFrequencyType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "annualInterestRate": {
          "type": "number"
        },
        "interestRateDifferential": {
          "type": "number"
        },
        "minDifferentialLendingRate": {
          "type": "number"
        },
        "defaultDifferentialLendingRate": {
          "type": "number"
        },
        "maxDifferentialLendingRate": {
          "type": "number"
        },
        "amortizationType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "interestType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "interestCalculationPeriodType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "allowPartialPeriodInterestCalcualtion": {
          "type": "boolean"
        },
        "inArrearsTolerance": {
          "type": "number"
        },
        "transactionProcessingStrategyId": {
          "type": "integer",
          "format": "int64"
        },
        "transactionProcessingStrategyName": {
          "type": "string"
        },
        "graceOnPrincipalPayment": {
          "type": "integer",
          "format": "int32"
        },
        "recurringMoratoriumOnPrincipalPeriods": {
          "type": "integer",
          "format": "int32"
        },
        "graceOnInterestPayment": {
          "type": "integer",
          "format": "int32"
        },
        "graceOnInterestCharged": {
          "type": "integer",
          "format": "int32"
        },
        "graceOnArrearsAgeing": {
          "type": "integer",
          "format": "int32"
        },
        "daysInMonthType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "daysInYearType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "interestRecalculationData": {
          "$ref": "#/definitions/LoanProductInterestRecalculationData"
        },
        "principalVariationsForBorrowerCycle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductBorrowerCycleVariationData"
          }
        },
        "interestRateVariationsForBorrowerCycle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductBorrowerCycleVariationData"
          }
        },
        "numberOfRepaymentVariationsForBorrowerCycle": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductBorrowerCycleVariationData"
          }
        },
        "fundOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FundData"
          }
        },
        "repaymentFrequencyTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "interestRateFrequencyTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "amortizationTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "interestTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "interestCalculationPeriodTypeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "chargeOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChargeData"
          }
        },
        "multiDisburseLoan": {
          "type": "boolean"
        },
        "outstandingLoanBalance": {
          "type": "number"
        },
        "getloanProductConfigurableAttributes": {
          "$ref": "#/definitions/LoanProductConfigurableAttributes"
        },
        "minimumGapBetweenInstallments": {
          "type": "integer",
          "format": "int32"
        },
        "maximumGapBetweenInstallments": {
          "type": "integer",
          "format": "int32"
        },
        "floatingInterestRateCalculationAllowed": {
          "type": "boolean"
        },
        "linkedToFloatingInterestRates": {
          "type": "boolean"
        },
        "variableInstallmentsAllowed": {
          "type": "boolean"
        },
        "compoundingToBePostedAsTransaction": {
          "type": "boolean"
        },
        "interestRecalculationEnabled": {
          "type": "boolean"
        }
      }
    },
    "LoanProductFloatingRates": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "loanProduct": {
          "$ref": "#/definitions/LoanProduct"
        },
        "floatingRate": {
          "$ref": "#/definitions/FloatingRate"
        },
        "interestRateDifferential": {
          "type": "number"
        },
        "minDifferentialLendingRate": {
          "type": "number"
        },
        "defaultDifferentialLendingRate": {
          "type": "number"
        },
        "maxDifferentialLendingRate": {
          "type": "number"
        },
        "floatingInterestRateCalculationAllowed": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "LoanProductGuaranteeDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "mandatoryGuarantee": {
          "type": "number"
        },
        "minimumGuaranteeFromOwnFunds": {
          "type": "number"
        },
        "minimumGuaranteeFromGuarantor": {
          "type": "number"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "LoanProductInterestRecalculationData": {
      "type": "object",
      "properties": {
        "interestRecalculationCompoundingType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "rescheduleStrategyType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationRestFrequencyType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationRestFrequencyInterval": {
          "type": "integer",
          "format": "int32"
        },
        "recalculationRestFrequencyNthDay": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationRestFrequencyWeekday": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationRestFrequencyOnDay": {
          "type": "integer",
          "format": "int32"
        },
        "recalculationCompoundingFrequencyType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationCompoundingFrequencyInterval": {
          "type": "integer",
          "format": "int32"
        },
        "recalculationCompoundingFrequencyNthDay": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationCompoundingFrequencyWeekday": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "recalculationCompoundingFrequencyOnDay": {
          "type": "integer",
          "format": "int32"
        },
        "compoundingToBePostedAsTransaction": {
          "type": "boolean"
        }
      }
    },
    "LoanProductInterestRecalculationDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "interestRecalculationCompoundingMethod": {
          "type": "integer",
          "format": "int32"
        },
        "rescheduleStrategyMethod": {
          "type": "integer",
          "format": "int32"
        },
        "restFrequencyType": {
          "type": "string",
          "enum": [
            "INVALID",
            "SAME_AS_REPAYMENT_PERIOD",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ]
        },
        "restInterval": {
          "type": "integer",
          "format": "int32"
        },
        "restFrequencyNthDay": {
          "type": "integer",
          "format": "int32"
        },
        "restFrequencyWeekday": {
          "type": "integer",
          "format": "int32"
        },
        "restFrequencyOnDay": {
          "type": "integer",
          "format": "int32"
        },
        "compoundingFrequencyType": {
          "type": "string",
          "enum": [
            "INVALID",
            "SAME_AS_REPAYMENT_PERIOD",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ]
        },
        "compoundingInterval": {
          "type": "integer",
          "format": "int32"
        },
        "compoundingFrequencyNthDay": {
          "type": "integer",
          "format": "int32"
        },
        "compoundingFrequencyWeekday": {
          "type": "integer",
          "format": "int32"
        },
        "compoundingFrequencyOnDay": {
          "type": "integer",
          "format": "int32"
        },
        "isCompoundingToBePostedAsTransaction": {
          "type": "boolean"
        },
        "arrearsBasedOnOriginalSchedule": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "LoanProductRelatedDetail": {
      "type": "object",
      "properties": {
        "currency": {
          "$ref": "#/definitions/MonetaryCurrency"
        },
        "principal": {
          "$ref": "#/definitions/Money"
        },
        "nominalInterestRatePerPeriod": {
          "type": "number"
        },
        "interestPeriodFrequencyType": {
          "type": "string",
          "enum": [
            "DAYS",
            "WEEKS",
            "MONTHS",
            "YEARS",
            "INVALID"
          ]
        },
        "annualNominalInterestRate": {
          "type": "number"
        },
        "interestMethod": {
          "type": "string",
          "enum": [
            "DECLINING_BALANCE",
            "FLAT",
            "INVALID"
          ]
        },
        "interestCalculationPeriodMethod": {
          "type": "string",
          "enum": [
            "DAILY",
            "SAME_AS_REPAYMENT_PERIOD",
            "INVALID"
          ]
        },
        "allowPartialPeriodInterestCalcualtion": {
          "type": "boolean"
        },
        "repayEvery": {
          "type": "integer",
          "format": "int32"
        },
        "repaymentPeriodFrequencyType": {
          "type": "string",
          "enum": [
            "DAYS",
            "WEEKS",
            "MONTHS",
            "YEARS",
            "INVALID"
          ]
        },
        "numberOfRepayments": {
          "type": "integer",
          "format": "int32"
        },
        "graceOnPrincipalPayment": {
          "type": "integer",
          "format": "int32"
        },
        "graceOnInterestPayment": {
          "type": "integer",
          "format": "int32"
        },
        "amortizationMethod": {
          "type": "string",
          "enum": [
            "EQUAL_PRINCIPAL",
            "EQUAL_INSTALLMENTS",
            "INVALID"
          ]
        },
        "inArrearsTolerance": {
          "$ref": "#/definitions/Money"
        },
        "graceOnArrearsAgeing": {
          "type": "integer",
          "format": "int32"
        },
        "arrearsTolerance": {
          "type": "number"
        },
        "interestRecalculationEnabled": {
          "type": "boolean"
        },
        "graceOnDueDate": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LoanTransactionProcessingStrategy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "standardStrategy": {
          "type": "boolean"
        },
        "heavensfamilyStrategy": {
          "type": "boolean"
        },
        "earlyPaymentStrategy": {
          "type": "boolean"
        },
        "creocoreStrategy": {
          "type": "boolean"
        },
        "indianRBIStrategy": {
          "type": "boolean"
        },
        "principalInterestPenaltiesFeesOrderStrategy": {
          "type": "boolean"
        },
        "interestPrincipalPenaltiesFeesOrderStrategy": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "MonetaryCurrency": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "digitsAfterDecimal": {
          "type": "integer",
          "format": "int32"
        },
        "currencyInMultiplesOf": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Money": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "currencyDigitsAfterDecimal": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "type": "number"
        },
        "currency": {
          "$ref": "#/definitions/MonetaryCurrency"
        },
        "zero": {
          "type": "boolean"
        },
        "currencyInMultiplesOf": {
          "type": "integer",
          "format": "int32"
        },
        "amountDefaultedToNullIfZero": {
          "type": "number"
        },
        "lessThanZero": {
          "type": "boolean"
        },
        "greaterThanZero": {
          "type": "boolean"
        }
      }
    },
    "MonthDay": {
      "type": "object",
      "properties": {
        "dayOfMonth": {
          "type": "integer",
          "format": "int32"
        },
        "fieldTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateTimeFieldType"
          }
        },
        "monthOfYear": {
          "type": "integer",
          "format": "int32"
        },
        "chronology": {
          "$ref": "#/definitions/Chronology"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DateTimeField"
          }
        }
      }
    },
    "Office": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "hierarchy": {
          "type": "string"
        },
        "openingLocalDate": {
          "type": "string",
          "format": "date"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Permission": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "grouping": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "disabled": {
          "type": "boolean"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Permission"
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "SavingsProductData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "depositAccountType": {
          "type": "string"
        }
      }
    },
    "Staff": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "loanOfficer": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "image": {
          "$ref": "#/definitions/Image"
        },
        "notActive": {
          "type": "boolean"
        },
        "notLoanOfficer": {
          "type": "boolean"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "TaxComponent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/AppUser"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/AppUser"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "percentage": {
          "type": "number"
        },
        "debitAccountType": {
          "type": "integer",
          "format": "int32"
        },
        "debitAcount": {
          "$ref": "#/definitions/GLAccount"
        },
        "creditAccountType": {
          "type": "integer",
          "format": "int32"
        },
        "creditAcount": {
          "$ref": "#/definitions/GLAccount"
        },
        "taxComponentHistories": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TaxComponentHistory"
          }
        },
        "taxGroupMappings": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TaxGroupMappings"
          }
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "TaxComponentHistory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/AppUser"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/AppUser"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "percentage": {
          "type": "number"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "TaxGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/AppUser"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/AppUser"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "taxGroupMappings": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/TaxGroupMappings"
          }
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "TaxGroupMappings": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "$ref": "#/definitions/AppUser"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "$ref": "#/definitions/AppUser"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "taxComponent": {
          "$ref": "#/definitions/TaxComponent"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "PutReportResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 132
        },
        "changes": {
          "$ref": "#/definitions/PutReportResponseChanges"
        }
      }
    },
    "PutReportResponseChanges": {
      "type": "object",
      "properties": {
        "reportName": {
          "type": "string",
          "example": "Changed New Report"
        },
        "reportParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParameterData"
          }
        }
      }
    },
    "ReportParameterData": {
      "type": "object"
    },
    "PutReportRequest": {
      "type": "object",
      "properties": {
        "reportName": {
          "type": "string",
          "example": "Completely New Report"
        },
        "reportParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParameterData"
          }
        }
      }
    },
    "DeleteReportsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 132
        }
      }
    },
    "GetReportsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "reportName": {
          "type": "string",
          "example": "Client Listing"
        },
        "reportType": {
          "type": "string",
          "example": "Table"
        },
        "reportSubType": {
          "type": "string"
        },
        "reportCategory": {
          "type": "string",
          "example": "Client"
        },
        "description": {
          "type": "string",
          "example": "Individual Client Report Lists the small number of defined fields on the client table.  Would expect to copy this report and add any one to one additional data for specific tenant needs. Can be run for any size MFI but you expect it only to be run within a branch for larger ones.  Depending on how many columns are displayed, there is probably is a limit of about 20/50k clients returned for html display (export to excel doesnt have that client browser/memory impact)."
        },
        "reportSql": {
          "type": "string"
        },
        "coreReport": {
          "type": "boolean",
          "example": true
        },
        "useReport": {
          "type": "boolean",
          "example": true
        },
        "reportParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParameterData"
          }
        }
      }
    },
    "GetReportsTemplateResponse": {
      "type": "object",
      "properties": {
        "allowedReportTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedReportSubTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParameterData"
          }
        }
      }
    },
    "PostReportsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 132
        }
      }
    },
    "PostRepostRequest": {
      "type": "object",
      "properties": {
        "reportName": {
          "type": "string",
          "example": "Completely New Report"
        },
        "reportType": {
          "type": "string",
          "example": "Table"
        },
        "reportSubType": {
          "type": "string"
        },
        "reportCategory": {
          "type": "string",
          "example": "Loan"
        },
        "description": {
          "type": "string",
          "example": "Just An Example"
        },
        "reportSql": {
          "type": "string",
          "example": "select 'very good sql' as AComment"
        },
        "reportParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportParameterData"
          }
        }
      }
    },
    "GetReportNameResponse": {
      "type": "object",
      "properties": {
        "columnHeaders": {
          "$ref": "#/definitions/ResultsetColumnHeaderData"
        },
        "row": {
          "$ref": "#/definitions/ResultsetRowData"
        }
      }
    },
    "GetEntityTypeEntityIdDocumentsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "parentEntityType": {
          "type": "string",
          "example": "clients"
        },
        "parentEntityId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Client Details Form"
        },
        "fileName": {
          "type": "string",
          "example": "CGAP.pdf"
        },
        "size": {
          "type": "integer",
          "format": "int64",
          "example": 5246719
        },
        "type": {
          "type": "string",
          "example": "application/pdf"
        },
        "description": {
          "type": "string",
          "example": "A signed form signed by new member"
        },
        "location": {
          "type": "string"
        },
        "storageType": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PutEntityTypeEntityIdDocumentsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "changes": {
          "$ref": "#/definitions/PutEntityTypeEntityIdDocumentsResponseChangesSwagger"
        },
        "resourceIdentifier": {
          "type": "string",
          "example": "3"
        }
      }
    },
    "PutEntityTypeEntityIdDocumentsResponseChangesSwagger": {
      "type": "object"
    },
    "DeleteEntityTypeEntityIdDocumentsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "changes": {
          "$ref": "#/definitions/PutEntityTypeEntityIdDocumentsResponseChangesSwagger"
        },
        "resourceIdentifier": {
          "type": "string",
          "example": "3"
        }
      }
    },
    "PostEntityTypeEntityIdDocumentsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "resourceIdentifier": {
          "type": "string",
          "example": "3"
        }
      }
    },
    "Event": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "entityName": {
          "type": "string"
        }
      }
    },
    "Field": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string"
        },
        "fieldValue": {
          "type": "string"
        },
        "fieldType": {
          "type": "string"
        }
      }
    },
    "GetHookResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Web"
        },
        "displayName": {
          "type": "string",
          "example": "Kremlin"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "createdAt": {
          "type": "string",
          "format": "date",
          "example": "[2014, 9, 16]"
        },
        "updatedAt": {
          "type": "string",
          "format": "date",
          "example": "[2014, 9, 16]"
        },
        "templateId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "templateName": {
          "type": "string",
          "example": "My UGD"
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "PostHookResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "PostHookRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Web"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "displayName": {
          "type": "string",
          "example": "Kremlin"
        },
        "templateId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "PutHookResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        },
        "changes": {
          "$ref": "#/definitions/PutHookResponseChangesSwagger"
        }
      }
    },
    "PutHookResponseChangesSwagger": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "example": "Kremlin"
        },
        "events": {
          "type": "array",
          "example": "1",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "PutHookRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Web"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "displayName": {
          "type": "string",
          "example": "Kremlin"
        },
        "templateId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        },
        "config": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      }
    },
    "DeleteHookResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "GetHookTemplateResponse": {
      "type": "object",
      "properties": {
        "templates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HookTemplateData"
          }
        },
        "groupings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Grouping"
          }
        }
      }
    },
    "Grouping": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "HookTemplateData": {
      "type": "object",
      "properties": {
        "serviceId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "GetSchedulerResponse": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "GetJobsJobIDJobRunHistoryResponse": {
      "type": "object",
      "properties": {
        "totalFilteredRecords": {
          "type": "integer",
          "format": "int32",
          "example": 8
        },
        "pageItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobDetailHistoryDataSwagger"
          }
        }
      }
    },
    "JobDetailHistoryDataSwagger": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "jobRunStartTime": {
          "type": "string",
          "format": "date-time",
          "example": "Jul 16, 2013 12:00:00 PM"
        },
        "jobRunEndTime": {
          "type": "string",
          "format": "date-time",
          "example": "Jul 16, 2013 12:00:00 PM"
        },
        "status": {
          "type": "string",
          "example": "success"
        },
        "triggerType": {
          "type": "string",
          "example": "cron"
        }
      }
    },
    "PutJobsJobsIDRequest": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "example": "Update loan Summary"
        },
        "cronExpression": {
          "type": "string",
          "example": "0 0 22 1/1 * ? *"
        },
        "active": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "GetJobsResponse": {
      "type": "object",
      "properties": {
        "jobId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "displayName": {
          "type": "string",
          "example": "Update loan Summary"
        },
        "nextRunTime": {
          "type": "string",
          "format": "date-time"
        },
        "initializingError": {
          "type": "string"
        },
        "cronExpression": {
          "type": "string",
          "example": "0 0 22 1/1 * ? *"
        },
        "active": {
          "type": "boolean",
          "example": false
        },
        "currentlyRunning": {
          "type": "boolean",
          "example": false
        },
        "lastRunHistory": {
          "$ref": "#/definitions/JobDetailHistoryData"
        }
      }
    },
    "JobDetailHistoryData": {
      "type": "object"
    },
    "PostReportMailingJobsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostReportMailingJobsRequest": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "example": "en_GB"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy HH:mm:ss"
        },
        "name": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "description": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "1469627093000"
        },
        "stretchyReportId": {
          "type": "integer",
          "format": "int64",
          "example": 120
        },
        "emailRecipients": {
          "type": "string",
          "example": "info@musonisystem.com"
        },
        "emailSubject": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "emailMessage": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "recurrence": {
          "type": "string",
          "example": "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "stretchyReportParamMap": {
          "type": "string",
          "example": "{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\":\"1\",\"environementUrl\":\"environementUrl\"}"
        }
      }
    },
    "PutReportMailingJobsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutReportMailingJobsResponseChanges"
        }
      }
    },
    "PutReportMailingJobsResponseChanges": {
      "type": "object",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "10-08-2016 23:30:00"
        }
      }
    },
    "PutReportMailingJobsRequest": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string",
          "example": "en_GB"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy HH:mm:ss"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "10-08-2016 23:30:00"
        }
      }
    },
    "DeleteReportMailingJobsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "DeleteReportMailingJobsRequest": {
      "type": "object"
    },
    "GetReportMailingJobsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "description": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "1469627093000"
        },
        "recurrence": {
          "type": "string"
        },
        "timeline": {
          "$ref": "#/definitions/ReportMailingJobTimelineData"
        },
        "emailRecipients": {
          "type": "string",
          "example": "info@musonisystem.com"
        },
        "emailSubject": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "emailMessage": {
          "type": "string",
          "example": "Client Numbers Report"
        },
        "emailAttachmentFileFormat": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "stretchyReport": {
          "$ref": "#/definitions/ReportData"
        },
        "stretchyReportParamMap": {
          "type": "string",
          "example": "{\"startDate\":\"2016-07-01\",\"endDate\":\"2016-08-02\",\"selectOffice\":\"1\",\"environementUrl\":\"environementUrl\"}"
        },
        "nextRunDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "1469627093000"
        },
        "numberOfRuns": {
          "type": "integer",
          "format": "int32",
          "example": 0
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "runAsUserId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "ReportData": {
      "type": "object"
    },
    "ReportMailingJobTimelineData": {
      "type": "object"
    },
    "GetReportMailingJobsTemplate": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "emailAttachmentFileFormatOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        },
        "stretchyReportParamDateOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        }
      }
    },
    "ReportMailingJobRunHistoryData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "reportMailingJobId": {
          "type": "integer",
          "format": "int64"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "errorLog": {
          "type": "string"
        }
      }
    },
    "PostAuthenticationResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "mifos"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "base64EncodedAuthenticationKey": {
          "type": "string",
          "example": "bWlmb3M6cGFzc3dvcmQ="
        },
        "authenticated": {
          "type": "boolean",
          "example": true
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "staffDisplayName": {
          "type": "string",
          "example": "Director, Program"
        },
        "organisationalRole": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleData"
          }
        },
        "permissions": {
          "type": "array",
          "example": "ALL_FUNCTIONS",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RoleData": {
      "type": "object"
    },
    "GetUserDetailsResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "mifos"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "accessToken": {
          "type": "string",
          "example": "bWlmb3M6cGFzc3dvcmQ="
        },
        "authenticated": {
          "type": "boolean",
          "example": true
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "staffDisplayName": {
          "type": "string",
          "example": "mifosStaffDisplayName"
        },
        "organisationalRole": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleData"
          }
        },
        "permissions": {
          "type": "array",
          "example": "ALL_FUNCTIONS",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PostSurveySurveyNameApptableIdResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "clientId": {
          "type": "integer",
          "format": "int64",
          "example": 87
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 87
        }
      }
    },
    "PostSurveySurveyNameApptableIdRequest": {
      "type": "object",
      "properties": {
        "ppi_household_members_cd_q1_householdmembers": {
          "type": "integer",
          "format": "int64",
          "example": 167
        },
        "ppi_highestschool_cd_q2_highestschool": {
          "type": "integer",
          "format": "int64",
          "example": 174
        },
        "ppi_businessoccupation_cd_q3_businessoccupation": {
          "type": "integer",
          "format": "int64",
          "example": 180
        },
        "ppi_habitablerooms_cd_q4_habitablerooms": {
          "type": "integer",
          "format": "int64",
          "example": 184
        },
        "ppi_floortype_cd_q5_floortype": {
          "type": "integer",
          "format": "int64",
          "example": 188
        },
        "ppi_lightingsource_cd_q6_lightingsource": {
          "type": "integer",
          "format": "int64",
          "example": 190
        },
        "ppi_irons_cd_q7_irons": {
          "type": "integer",
          "format": "int64",
          "example": 193
        },
        "ppi_mosquitonets_cd_q8_mosquitonets": {
          "type": "integer",
          "format": "int64",
          "example": 195
        },
        "ppi_towels_cd_q9_towels": {
          "type": "integer",
          "format": "int64",
          "example": 198
        },
        "ppi_fryingpans_cd_q10_fryingpans": {
          "type": "integer",
          "format": "int64",
          "example": 201
        },
        "Date": {
          "type": "string",
          "format": "date-time",
          "example": "2014-12-02 20:30:00"
        },
        "dateFormat": {
          "type": "string",
          "format": "date-time",
          "example": "Y-m-d H:i:s"
        },
        "locale": {
          "type": "string",
          "example": "en_GB"
        }
      }
    },
    "GetSurveyResponse": {
      "type": "object",
      "properties": {
        "datatableData": {
          "$ref": "#/definitions/GetSurveyResponseDatatableData"
        },
        "enabled": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "GetSurveyResponseDatatableData": {
      "type": "object",
      "properties": {
        "applicationTableName": {
          "type": "string",
          "example": "m_client"
        },
        "registeredTableName": {
          "type": "string",
          "example": "ppi_kenya_2005"
        },
        "columnHeaderData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResultsetColumnHeaderData"
          }
        }
      }
    },
    "PostHolidaysHolidayIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostHolidaysHolidayIdRequest": {
      "type": "object"
    },
    "PostHolidaysResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostHolidaysRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Good Friday"
        },
        "description": {
          "type": "string",
          "example": "Good Friday"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "fromDate": {
          "type": "string",
          "format": "date",
          "example": "25 October 2013"
        },
        "toDate": {
          "type": "string",
          "format": "date",
          "example": "25 October 2013"
        },
        "repaymentsRescheduledTo": {
          "type": "string",
          "format": "date",
          "example": "26 October 2013"
        },
        "offices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PostHolidaysRequestOffices"
          }
        }
      }
    },
    "PostHolidaysRequestOffices": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetHolidaysResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Good Friday"
        },
        "fromDate": {
          "type": "string",
          "format": "date",
          "example": "[2013, 10, 26]"
        },
        "toDate": {
          "type": "string",
          "format": "date",
          "example": "[2013, 10, 26]"
        },
        "repaymentsRescheduledTo": {
          "type": "string",
          "format": "date",
          "example": "[2013, 10, 27]"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "status": {
          "$ref": "#/definitions/EnumOptionData"
        }
      }
    },
    "PutHolidaysHolidayIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutHolidaysHolidayIdResponseChanges"
        }
      }
    },
    "PutHolidaysHolidayIdResponseChanges": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Independence day"
        },
        "description": {
          "type": "string",
          "example": "Holiday for Independence day celebration"
        }
      }
    },
    "PutHolidaysHolidayIdRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Independence day"
        },
        "description": {
          "type": "string",
          "example": "Holiday for Independence day celebration"
        }
      }
    },
    "DeleteHolidaysHolidayIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetCurrenciesResponse": {
      "type": "object",
      "properties": {
        "selectedCurrencyOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          }
        },
        "currencyOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          }
        }
      }
    },
    "PutCurrenciesResponse": {
      "type": "object",
      "properties": {
        "currencies": {
          "type": "string",
          "example": "[\"KES\",\n        \"BND\",\n        \"LBP\",\n        \"GHC\",\n        \"USD\",\n        \"XOF\",\n        \"AED\",\n        \"AMD\"]"
        }
      }
    },
    "PutCurrenciesRequest": {
      "type": "object",
      "properties": {
        "currencies": {
          "type": "string",
          "example": "[\"KES\",\n        \"BND\",\n        \"LBP\",\n        \"GHC\",\n        \"USD\",\n        \"XOF\",\n        \"AED\",\n        \"AMD\"]"
        }
      }
    },
    "GetOfficesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Head Office"
        },
        "nameDecorated": {
          "type": "string",
          "example": "Head Office"
        },
        "externalId": {
          "type": "string",
          "example": "1"
        },
        "openingDate": {
          "type": "string",
          "format": "date",
          "example": "[2009, 1, 1]"
        },
        "hierarchy": {
          "type": "string",
          "example": "."
        }
      }
    },
    "GetOfficesTemplateResponse": {
      "type": "object",
      "properties": {
        "openingDate": {
          "type": "string",
          "format": "date",
          "example": "[2009, 1, 1]"
        },
        "allowedParents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetOfficesResponse"
          }
        }
      }
    },
    "PostOfficesResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        }
      }
    },
    "PostOfficesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Good Friday"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "openingDate": {
          "type": "string",
          "format": "date",
          "example": "01 July 2007"
        },
        "parentId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "externalId": {
          "type": "string",
          "example": "SYS54-88"
        }
      }
    },
    "PutOfficesOfficeIdResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "changes": {
          "$ref": "#/definitions/PutOfficesOfficeIdResponseChanges"
        }
      }
    },
    "PutOfficesOfficeIdResponseChanges": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Name is updated"
        }
      }
    },
    "PutOfficesOfficeIdRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Name is updated"
        }
      }
    },
    "GetProvisioningCriteriaCriteriaIdResponse": {
      "type": "object",
      "properties": {
        "criteriaId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "criteriaName": {
          "type": "string",
          "example": "High Risk Products Criteria"
        },
        "createdBy": {
          "type": "string",
          "example": "mifos"
        },
        "loanProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductData"
          }
        },
        "provisioningcriteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningCriteriaDefinitionData"
          }
        }
      }
    },
    "ProvisioningCriteriaDefinitionData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "categoryName": {
          "type": "string"
        },
        "minAge": {
          "type": "integer",
          "format": "int64"
        },
        "maxAge": {
          "type": "integer",
          "format": "int64"
        },
        "provisioningPercentage": {
          "type": "number"
        },
        "liabilityAccount": {
          "type": "integer",
          "format": "int64"
        },
        "liabilityCode": {
          "type": "string"
        },
        "expenseAccount": {
          "type": "integer",
          "format": "int64"
        },
        "expenseCode": {
          "type": "string"
        }
      }
    },
    "GetProvisioningCriteriaResponse": {
      "type": "object",
      "properties": {
        "criteriaId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "criteriaName": {
          "type": "string",
          "example": "High Risk Products Criteria"
        },
        "createdBy": {
          "type": "string",
          "example": "mifos"
        }
      }
    },
    "PostProvisioningCriteriaResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostProvisioningCriteriaRequest": {
      "type": "object",
      "properties": {
        "criteriaName": {
          "type": "string",
          "example": "High Risk Products Criteria"
        },
        "loanProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductData"
          }
        },
        "provisioningcriteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningCriteriaDefinitionData"
          }
        }
      }
    },
    "PutProvisioningCriteriaResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutProvisioningCriteriaResponseChanges"
        }
      }
    },
    "PutProvisioningCriteriaResponseChanges": {
      "type": "object",
      "properties": {
        "criteriaName": {
          "type": "string",
          "example": "High Risk Products Criteria"
        }
      }
    },
    "PutProvisioningCriteriaRequest": {
      "type": "object",
      "properties": {
        "criteriaName": {
          "type": "string",
          "example": "High Risk Products Criteria"
        },
        "loanProducts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoanProductData"
          }
        },
        "provisioningcriteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvisioningCriteriaDefinitionData"
          }
        }
      }
    },
    "DeleteProvisioningCriteriaResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetStaffResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "displayName": {
          "type": "string",
          "example": "Doe, John"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "isLoanOfficer": {
          "type": "boolean",
          "example": true
        },
        "externalId": {
          "type": "string",
          "example": "17H"
        },
        "isActive": {
          "type": "boolean",
          "example": false
        },
        "joiningDate": {
          "type": "string",
          "format": "date",
          "example": "[2009,8,1]"
        }
      }
    },
    "PostStaffResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostStaffRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "firstname": {
          "type": "string",
          "example": "John"
        },
        "lastname": {
          "type": "string",
          "example": "Doe"
        },
        "isLoanOfficer": {
          "type": "boolean",
          "example": true
        },
        "externalId": {
          "type": "string",
          "example": "17H"
        },
        "mobileNo": {
          "type": "string",
          "example": "+353851239876"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "joiningDate": {
          "type": "string",
          "format": "date",
          "example": "01 January 2009"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd MMMM yyyy"
        }
      }
    },
    "PutStaffResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PutStaffRequest": {
      "type": "object",
      "properties": {
        "isLoanOfficer": {
          "type": "boolean",
          "example": false
        },
        "externalId": {
          "type": "string",
          "example": "17Hbb"
        }
      }
    },
    "GetTellersResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "debitAccountId": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "creditAccountId": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "name": {
          "type": "string",
          "example": "Teller3"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "[2015,2,1]"
        },
        "status": {
          "type": "string",
          "example": "ACTIVE",
          "enum": [
            "INVALID",
            "PENDING",
            "ACTIVE",
            "INACTIVE",
            "CLOSED"
          ]
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        }
      }
    },
    "PostTellersResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 5
        }
      }
    },
    "PostTellersRequest": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Teller3"
        },
        "description": {
          "type": "string",
          "example": "cash handling"
        },
        "status": {
          "type": "string",
          "example": "ACTIVE",
          "enum": [
            "INVALID",
            "PENDING",
            "ACTIVE",
            "INACTIVE",
            "CLOSED"
          ]
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "01 February 2015"
        }
      }
    },
    "PutTellersResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 5
        },
        "changes": {
          "$ref": "#/definitions/PutTellersResponseChanges"
        }
      }
    },
    "PutTellersResponseChanges": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "teller cash handling"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "28 February 2015"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "01 February 2015"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        }
      }
    },
    "PutTellersRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Teller3"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "teller cash handling"
        },
        "status": {
          "type": "string",
          "example": "ACTIVE",
          "enum": [
            "INVALID",
            "PENDING",
            "ACTIVE",
            "INACTIVE",
            "CLOSED"
          ]
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "28 February 2015"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "01 February 2015"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        }
      }
    },
    "CashierData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "tellerId": {
          "type": "integer",
          "format": "int64"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "staffId": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "officeName": {
          "type": "string"
        },
        "tellerName": {
          "type": "string"
        },
        "staffName": {
          "type": "string"
        },
        "fullDay": {
          "type": "boolean"
        }
      }
    },
    "GetTellersTellerIdCashiersResponse": {
      "type": "object",
      "properties": {
        "tellerId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "tellerName": {
          "type": "string",
          "example": "Teller1"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "cashiers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashierData"
          }
        }
      }
    },
    "GetTellersTellerIdCashiersCashierIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "tellerId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "description": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "Feb 20, 2015 12:00:00 AM"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "Feb 27, 2015 12:00:00 AM"
        },
        "isFullDay": {
          "type": "boolean",
          "example": true
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "tellerName": {
          "type": "string",
          "example": "Teller1"
        },
        "staffName": {
          "type": "string",
          "example": "Staff1, Test"
        }
      }
    },
    "GetTellersTellerIdCashiersTemplateResponse": {
      "type": "object",
      "properties": {
        "tellerId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "tellerName": {
          "type": "string",
          "example": "Teller1"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "staffOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffData"
          }
        }
      }
    },
    "StaffData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "officeName": {
          "type": "string"
        },
        "joiningDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "PostTellersTellerIdCashiersResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "subResourceId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        }
      }
    },
    "PostTellersTellerIdCashiersRequest": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "28 February 2015"
        },
        "description": {
          "type": "string",
          "example": "teller cash handling"
        },
        "isFullDay": {
          "type": "boolean",
          "example": true
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "01 February 2015"
        }
      }
    },
    "PutTellersTellerIdCashiersCashierIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "subResourceId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "changes": {
          "$ref": "#/definitions/PutTellersTellerIdCashiersCashierIdResponseChanges"
        }
      }
    },
    "PutTellersTellerIdCashiersCashierIdResponseChanges": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "25 February 2015"
        },
        "description": {
          "type": "string",
          "example": "Cashier updated."
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        }
      }
    },
    "PutTellersTellerIdCashiersCashierIdRequest": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "25 February 2015"
        },
        "description": {
          "type": "string",
          "example": "Cashier updated."
        },
        "isFullDay": {
          "type": "boolean",
          "example": true
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "01 February 2015"
        }
      }
    },
    "DeleteTellersTellerIdCashiersCashierIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostTellersTellerIdCashiersCashierIdAllocateResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "subResourceId": {
          "type": "integer",
          "format": "int64",
          "example": 4
        }
      }
    },
    "PostTellersTellerIdCashiersCashierIdAllocateRequest": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "example": "USD"
        },
        "txnAmount": {
          "type": "number",
          "example": 5000
        },
        "txnNote": {
          "type": "string",
          "example": "allocating cash"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        },
        "txnDate": {
          "type": "string",
          "format": "date-time",
          "example": "01 February 2015"
        }
      }
    },
    "PostTellersTellerIdCashiersCashierIdSettleResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "subResourceId": {
          "type": "integer",
          "format": "int64",
          "example": 5
        }
      }
    },
    "PostTellersTellerIdCashiersCashierIdSettleRequest": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "example": "USD"
        },
        "txnAmount": {
          "type": "number",
          "example": 2000
        },
        "txnNote": {
          "type": "string",
          "example": "cash settlement"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "dateFormat": {
          "type": "string",
          "example": "dd-MM-yyyy"
        },
        "txnDate": {
          "type": "string",
          "format": "date-time",
          "example": "20 February 2015"
        }
      }
    },
    "CashierTxnType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "GetTellersTellerIdCashiersCashiersIdTransactionsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 8
        },
        "cashierId": {
          "type": "integer",
          "format": "int64",
          "example": 15
        },
        "txnType": {
          "$ref": "#/definitions/CashierTxnType"
        },
        "txnAmount": {
          "type": "number",
          "example": 1000
        },
        "txnDate": {
          "type": "string",
          "format": "date-time",
          "example": "Feb 25, 2015 12:00:00 AM"
        },
        "entityId": {
          "type": "integer",
          "format": "int64",
          "example": 2
        },
        "entityType": {
          "type": "string",
          "example": "loans"
        },
        "txnNote": {
          "type": "string",
          "example": "Disbursement, Loan:2-000000002,Client:1-Test 1"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "example": "Feb 25, 2015 12:00:00 AM"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "tellerId": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "cashierName": {
          "type": "string",
          "example": "B, Ramesh"
        }
      }
    },
    "CashierTransactionData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "cashierId": {
          "type": "integer",
          "format": "int64"
        },
        "txnType": {
          "$ref": "#/definitions/CashierTxnType"
        },
        "txnAmount": {
          "type": "number"
        },
        "txnDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityId": {
          "type": "integer",
          "format": "int64"
        },
        "entityType": {
          "type": "string"
        },
        "txnNote": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "officeName": {
          "type": "string"
        },
        "tellerId": {
          "type": "integer",
          "format": "int64"
        },
        "tellerName": {
          "type": "string"
        },
        "cashierName": {
          "type": "string"
        },
        "cashierData": {
          "$ref": "#/definitions/CashierData"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "endDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse": {
      "type": "object",
      "properties": {
        "sumCashAllocation": {
          "type": "number",
          "example": 7000
        },
        "sumInwardCash": {
          "type": "number",
          "example": 0
        },
        "sumOutwardCash": {
          "type": "number",
          "example": 0
        },
        "sumCashSettlement": {
          "type": "number",
          "example": 50
        },
        "netCash": {
          "type": "number",
          "example": 6950
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "tellerId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "tellerName": {
          "type": "string",
          "example": "Teller1"
        },
        "cashierId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "cashierName": {
          "type": "string",
          "example": "Staff1, Test"
        },
        "cashierTransactions": {
          "$ref": "#/definitions/PageCashierTransactionData"
        }
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "totalFilteredRecords": {
          "type": "integer",
          "format": "int32"
        },
        "pageItems": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "PageCashierTransactionData": {
      "type": "object",
      "properties": {
        "totalFilteredRecords": {
          "type": "integer",
          "format": "int32"
        },
        "pageItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CashierTransactionData"
          }
        }
      }
    },
    "GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse": {
      "type": "object",
      "properties": {
        "cashierId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "tellerId": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "tellerName": {
          "type": "string",
          "example": "Teller1"
        },
        "cashierName": {
          "type": "string",
          "example": "Staff1, Test"
        },
        "cashierData": {
          "$ref": "#/definitions/CashierData"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "Feb 20, 2015 12:00:00 AM"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "Feb 27, 2015 12:00:00 AM"
        },
        "currencyOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyData"
          }
        }
      }
    },
    "GetWorkingDaysTemplateResponse": {
      "type": "object",
      "properties": {
        "repaymentRescheduleOptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnumOptionData"
          }
        }
      }
    },
    "GetWorkingDaysResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "recurrence": {
          "type": "string",
          "example": "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR"
        },
        "repaymentRescheduleType": {
          "$ref": "#/definitions/EnumOptionData"
        },
        "extendTermForDailyRepayments": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PutWorkingDaysResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PutWorkingDaysRequest": {
      "type": "object",
      "properties": {
        "recurrence": {
          "type": "string",
          "example": "FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "repaymentRescheduleType": {
          "example": "4",
          "$ref": "#/definitions/EnumOptionData"
        },
        "extendTermForDailyRepayments": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "AddressData": {
      "type": "object"
    },
    "CommandProcessingResult": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "groupId": {
          "type": "integer",
          "format": "int64"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "loanId": {
          "type": "integer",
          "format": "int64"
        },
        "savingsId": {
          "type": "integer",
          "format": "int64"
        },
        "subResourceId": {
          "type": "integer",
          "format": "int64"
        },
        "transactionId": {
          "type": "string"
        },
        "changes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "productId": {
          "type": "integer",
          "format": "int64"
        },
        "rollbackTransaction": {
          "type": "boolean"
        }
      }
    },
    "ClientChargeData": {
      "type": "object"
    },
    "ClientCharge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "client": {
          "$ref": "#/definitions/Client"
        },
        "charge": {
          "$ref": "#/definitions/Charge"
        },
        "chargeTime": {
          "type": "integer",
          "format": "int32"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "chargeCalculation": {
          "type": "integer",
          "format": "int32"
        },
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "amountPaid": {
          "$ref": "#/definitions/Money"
        },
        "amountWaived": {
          "$ref": "#/definitions/Money"
        },
        "amountWrittenOff": {
          "$ref": "#/definitions/Money"
        },
        "amountOutstanding": {
          "$ref": "#/definitions/Money"
        },
        "penaltyCharge": {
          "type": "boolean"
        },
        "paid": {
          "type": "boolean"
        },
        "waived": {
          "type": "boolean"
        },
        "inactivationDate": {
          "type": "string",
          "format": "date-time"
        },
        "currency": {
          "$ref": "#/definitions/MonetaryCurrency"
        },
        "active": {
          "type": "boolean"
        },
        "notActive": {
          "type": "boolean"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "onSpecifiedDueDate": {
          "type": "boolean"
        },
        "dueLocalDate": {
          "type": "string",
          "format": "date"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "ClientIdentifierData": {
      "type": "object"
    },
    "ClientTransactionData": {
      "type": "object"
    },
    "AccountSummaryCollectionData": {
      "type": "object"
    },
    "ClientData": {
      "type": "object",
      "required": [
        "active",
        "address",
        "addressEnabled",
        "middlename",
        "officeId"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "accountNo": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "activationDate": {
          "type": "string",
          "format": "date"
        },
        "firstname": {
          "type": "string"
        },
        "middlename": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "fullname": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/CodeValueData"
        },
        "officeId": {
          "type": "integer",
          "format": "int64"
        },
        "address": {
          "$ref": "#/definitions/AddressData"
        },
        "isAddressEnabled": {
          "type": "boolean"
        },
        "addressEnabled": {
          "type": "boolean"
        },
        "staff": {
          "type": "boolean"
        }
      }
    },
    "LookupTableData": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LookupTableEntry"
          }
        }
      }
    },
    "LookupTableEntry": {
      "type": "object",
      "properties": {
        "valueFrom": {
          "type": "integer",
          "format": "int32"
        },
        "valueTo": {
          "type": "integer",
          "format": "int32"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ScorecardData": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "clientId": {
          "type": "integer",
          "format": "int64"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "scorecardValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScorecardValue"
          }
        }
      }
    },
    "ScorecardValue": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "integer",
          "format": "int64"
        },
        "responseId": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Component": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "survey": {
          "$ref": "#/definitions/Survey"
        },
        "key": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sequenceNo": {
          "type": "integer",
          "format": "int32"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "survey": {
          "$ref": "#/definitions/Survey"
        },
        "responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Response"
          }
        },
        "componentKey": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sequenceNo": {
          "type": "integer",
          "format": "int32"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "question": {
          "$ref": "#/definitions/Question"
        },
        "text": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "sequenceNo": {
          "type": "integer",
          "format": "int32"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Scorecard": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "survey": {
          "$ref": "#/definitions/Survey"
        },
        "question": {
          "$ref": "#/definitions/Question"
        },
        "response": {
          "$ref": "#/definitions/Response"
        },
        "appUser": {
          "$ref": "#/definitions/AppUser"
        },
        "client": {
          "$ref": "#/definitions/Client"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "Survey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "components": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Component"
          }
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Question"
          }
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "ComponentData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "key": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sequenceNo": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "QuestionData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "responseDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseData"
          }
        },
        "componentKey": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "sequenceNo": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResponseData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "text": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "sequenceNo": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SurveyData": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "componentDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ComponentData"
          }
        },
        "questionDatas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QuestionData"
          }
        },
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "validFrom": {
          "type": "string",
          "format": "date-time"
        },
        "validTo": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PutTemplatesTemplateIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PutTemplatesTemplateIdRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Text"
        },
        "entity": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "type": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "text": {
          "type": "string",
          "example": "This is a loan for {{loan.clientName}}"
        },
        "mappers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMapper"
          }
        }
      }
    },
    "TemplateMapper": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "mapperorder": {
          "type": "integer",
          "format": "int32"
        },
        "mapperkey": {
          "type": "string"
        },
        "mappervalue": {
          "type": "string"
        },
        "new": {
          "type": "boolean"
        }
      }
    },
    "DeleteTemplatesTemplateIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetTemplatesTemplateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Text"
        },
        "entity": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "type": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "text": {
          "type": "string",
          "example": "This is a loan for {{loan.clientName}}"
        },
        "mappers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMapper"
          }
        }
      }
    },
    "GetTemplatesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Text"
        },
        "entity": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "type": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "text": {
          "type": "string",
          "example": "This is a loan for {{loan.clientName}}"
        },
        "mappers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMapper"
          }
        }
      }
    },
    "GetTemplatesTemplateIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Text"
        },
        "entity": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "type": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "text": {
          "type": "string",
          "example": "This is a loan for {{loan.clientName}}"
        },
        "mappers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMapper"
          }
        }
      }
    },
    "PostTemplatesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostTemplatesRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Text"
        },
        "entity": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "type": {
          "type": "integer",
          "format": "int64",
          "example": 0
        },
        "text": {
          "type": "string",
          "example": "This is a loan for {{loan.clientName}}"
        },
        "mappers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemplateMapper"
          }
        }
      }
    },
    "GetPasswordPreferencesTemplateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "description": {
          "type": "string",
          "example": "Password must be at least 1 character and not more that 50 characters long"
        },
        "active": {
          "type": "boolean",
          "example": true
        },
        "key": {
          "type": "string",
          "example": "simple"
        }
      }
    },
    "PutPasswordPreferencesTemplateRequest": {
      "type": "object",
      "properties": {
        "validationPolicyId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetPermissionsResponse": {
      "type": "object",
      "properties": {
        "grouping": {
          "type": "string",
          "example": "authorisation"
        },
        "code": {
          "type": "string",
          "example": "READ_PERMISSION"
        },
        "entityName": {
          "type": "string",
          "example": "PERMISSION"
        },
        "actionName": {
          "type": "string",
          "example": "READ"
        },
        "selected": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "PutPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "string",
          "example": "\"CREATE_GUARANTOR\":true,\n    \"CREATE_CLIENT\":true"
        }
      }
    },
    "GetRolesResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Super Users"
        },
        "description": {
          "type": "string",
          "example": "This role provides all application permissions."
        }
      }
    },
    "PostRolesResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PostRolesRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Another Role Name"
        },
        "description": {
          "type": "string",
          "example": "A description outlining the purpose of this role in relation to the application."
        }
      }
    },
    "GetRolesRoleIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Super Users"
        },
        "description": {
          "type": "string",
          "example": "This role provides all application permissions."
        }
      }
    },
    "PostRolesRoleIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "GetRolesRoleIdPermissionsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Super Users"
        },
        "description": {
          "type": "string",
          "example": "This role provides all application permissions."
        },
        "permissionUsageData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetRolesRoleIdPermissionsResponsePermissionData"
          }
        }
      }
    },
    "GetRolesRoleIdPermissionsResponsePermissionData": {
      "type": "object",
      "properties": {
        "grouping": {
          "type": "string",
          "example": "authorisation"
        },
        "code": {
          "type": "string",
          "example": "READ_PERMISSION"
        },
        "entityName": {
          "type": "string",
          "example": "PERMISSION"
        },
        "actionName": {
          "type": "string",
          "example": "READ"
        },
        "selected": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "PostRolesRoleIdPermissionsResponsePermissions": {
      "type": "object",
      "properties": {
        "ALL_FUNCTIONS_READ": {
          "type": "string",
          "example": "true"
        }
      }
    },
    "PutRolesRoleIdPermissionsResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 8
        },
        "permissions": {
          "$ref": "#/definitions/PostRolesRoleIdPermissionsResponsePermissions"
        }
      }
    },
    "PutRolesRoleIdPermissionsRequest": {
      "type": "object",
      "properties": {
        "permissions": {
          "$ref": "#/definitions/PostRolesRoleIdPermissionsResponsePermissions"
        }
      }
    },
    "DeleteRolesRoleIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        }
      }
    },
    "PutRolesRoleIdResponse": {
      "type": "object",
      "properties": {
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "changes": {
          "$ref": "#/definitions/PutRolesRoleIdResponseChanges"
        }
      }
    },
    "PutRolesRoleIdResponseChanges": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "some description(changed)"
        }
      }
    },
    "PutRolesRoleIdRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "some description(changed)"
        }
      }
    },
    "GetUsersTemplateResponse": {
      "type": "object",
      "properties": {
        "allowedOffices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OfficeData"
          }
        },
        "availableRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleData"
          }
        }
      }
    },
    "GetUsersResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "username": {
          "type": "string",
          "example": "mifos"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "firstname": {
          "type": "string",
          "example": "App"
        },
        "lastname": {
          "type": "string",
          "example": "Administrator"
        },
        "email": {
          "type": "string",
          "example": "demomfi@mifos.org"
        },
        "passwordNeverExpires": {
          "type": "boolean",
          "example": false
        },
        "staff": {
          "$ref": "#/definitions/StaffData"
        },
        "selectedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleData"
          }
        }
      }
    },
    "GetUsersUserIdResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "username": {
          "type": "string",
          "example": "mifos"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "officeName": {
          "type": "string",
          "example": "Head Office"
        },
        "firstname": {
          "type": "string",
          "example": "App"
        },
        "lastname": {
          "type": "string",
          "example": "Administrator"
        },
        "email": {
          "type": "string",
          "example": "demomfi@mifos.org"
        },
        "passwordNeverExpires": {
          "type": "boolean",
          "example": false
        },
        "staff": {
          "$ref": "#/definitions/StaffData"
        },
        "availableRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleData"
          }
        },
        "selectedRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleData"
          }
        }
      }
    },
    "PutUsersUserIdResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 11
        },
        "changes": {
          "$ref": "#/definitions/PutUsersUserIdResponseChanges"
        }
      }
    },
    "PutUsersUserIdResponseChanges": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "Test"
        },
        "passwordEncoded": {
          "type": "string",
          "example": "abc3326b1bb376351c7baeb4175f5e0504e33aadf6a158474a6d71de1befae51"
        }
      }
    },
    "PutUsersUserIdRequest": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "example": "Test"
        },
        "password": {
          "type": "string",
          "example": "window75"
        },
        "repeatPassword": {
          "type": "string",
          "example": "window75"
        }
      }
    },
    "DeleteUsersUserIdResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 11
        },
        "changes": {
          "$ref": "#/definitions/DeleteUsersUserIdResponseChanges"
        }
      }
    },
    "DeleteUsersUserIdResponseChanges": {
      "type": "object"
    },
    "PostUsersResponse": {
      "type": "object",
      "properties": {
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "resourceId": {
          "type": "integer",
          "format": "int64",
          "example": 11
        }
      }
    },
    "PostUsersRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "newuser"
        },
        "firstname": {
          "type": "string",
          "example": "Test"
        },
        "lastname": {
          "type": "string",
          "example": "User"
        },
        "email": {
          "type": "string",
          "example": "whatever@mifos.org"
        },
        "officeId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "Roles": {
          "type": "string",
          "example": "[2,3]"
        },
        "sendPasswordToEmail": {
          "type": "boolean",
          "example": true
        },
        "isSelfServiceUser": {
          "type": "boolean",
          "example": true
        }
      }
    }
  }
}
