openapi: 3.0.1
info:
  title: Fineract by Skalena
  description: 'Apache Fineract is a secure, multi-tenanted microfinance platform. '
  termsOfService: https://demo.openmf.org/api-docs/apiLive.htm
  contact:
    name: https://skalena.finance
  version: 1.0.0
servers:
- url: https://skalena-api.brazilsouth.cloudapp.azure.com:8443/fineract-provider/api/v1
tags:
- name: Periodic Accrual Accounting
- name: Accounting Closure
- name: Mapping Financial Activities to Accounts
- name: General Ledger Account
- name: Journal Entries
- name: Provisioning Entries
- name: Accounting Rules
- name: Batch API
- name: Audits
- name: Maker Checker (or 4-eye) functionality
- name: Account number format
- name: Cache
- name: SMS Campaigns
- name: Code Values
- name: Codes
- name: External Services
- name: Global Configuration
- name: CreditBureau Configuration
- name: Data Tables
- name: Entity-Datatable Checks
- name: Reports
- name: Run Reports
- name: Documents
- name: DomainNameapiv1{entity}{entityId}images
- name: DomainNameapiv1entitytoentitymapping
- name: Hooks
- name: Scheduler
- name: MIFOSX-BATCH JOBS
- name: Report Mailing Jobs
- name: List Report Mailing Job History
- name: Authentication HTTP Basic
- name: Fetch authenticated user details
- name: SMS
- name: Likelihood
- name: Poverty Line
- name: Survey
- name: Mix Report
- name: Mix Taxonomy
- name: Mix Mapping
- name: Holidays
- name: Currency
- name: officetransactions
- name: Offices
- name: Provisioning Category
- name: Provisioning Criteria
- name: Staff
- name: cashiers
- name: Teller Cash Management
- name: cashiersjournal
- name: Working days
- name: Clients Address
- name: Client Charges
- name: Client Identifier Api
- name: Client Transaction
- name: Client Api
- name: SPM API - LookUp Table
- name: SPM - Scorecards
- name: SPM - Serveys
- name: User Generated Documents
- name: Password preferences
- name: Permissions
- name: Roles
- name: Users
paths:
  /runaccruals:
    post:
      tags:
      - Periodic Accrual Accounting
      summary: Executes Periodic Accrual Accounting
      description: |
        Mandatory Fields

        tillDate
      operationId: executePeriodicAccrualAccounting
      requestBody:
        description: "Request Body\n\nField Descriptions: \ntillDate: \nwhich specifies\
          \ periodic accruals should happen till the given Date"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/runaccrualsRequest'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: body
  /glclosures:
    get:
      tags:
      - Accounting Closure
      summary: List Accounting closures
      description: |-
        Example Requests:

        glclosures
      operationId: retrieveAllClosures
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGLClosureResponse'
    post:
      tags:
      - Accounting Closure
      summary: Create an Accounting Closure
      description: |-
        Mandatory Fields
        officeId,closingDate
      operationId: createGLClosure
      requestBody:
        description: Request Body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGLCLosuresRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGlClosuresResponse'
      x-codegen-request-body-name: body
  /glclosures/{glClosureId}:
    get:
      tags:
      - Accounting Closure
      summary: Retrieve an Accounting Closure
      description: |-
        Example Requests:

        glclosures/1


        /glclosures/1?fields=officeName,closingDate
      operationId: retreiveClosure
      parameters:
      - name: glClosureId
        in: path
        description: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLClosureResponse'
    put:
      tags:
      - Accounting Closure
      summary: Update an Accounting closure
      description: Once an accounting closure is created, only the comments associated
        with it may be edited
      operationId: updateGLClosure
      parameters:
      - name: glClosureId
        in: path
        description: glClosureId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGlClosuresRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGlClosuresResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Accounting Closure
      summary: Delete an accounting closure
      description: 'Note: Only the latest accounting closure associated with a branch
        may be deleted.'
      operationId: deleteGLClosure
      parameters:
      - name: glClosureId
        in: path
        description: glclosureId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGlClosuresResponse'
  /financialactivityaccounts:
    get:
      tags:
      - Mapping Financial Activities to Accounts
      summary: List Financial Activities to Accounts Mappings
      description: |-
        Example Requests:

        financialactivityaccounts
      operationId: retrieveAll
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
    post:
      tags:
      - Mapping Financial Activities to Accounts
      summary: Create a new Financial Activity to Accounts Mapping
      description: |-
        Mandatory Fields
        financialActivityId, glAccountId
      operationId: createGLAccount
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostFinancialActivityAccountsResponse'
      x-codegen-request-body-name: body
  /financialactivityaccounts/{mappingId}:
    get:
      tags:
      - Mapping Financial Activities to Accounts
      summary: |
        Retrieve a Financial Activity to Account Mapping
      description: |-
        Example Requests:

        financialactivityaccounts/1
      operationId: retreive
      parameters:
      - name: mappingId
        in: path
        description: mappingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
    put:
      tags:
      - Mapping Financial Activities to Accounts
      summary: Update a Financial Activity to Account Mapping
      description: "the API updates the Ledger account linked to a Financial Activity\
        \ \n"
      operationId: updateGLAccount
      parameters:
      - name: mappingId
        in: path
        description: mappingId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutFinancialActivityAccountsResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Mapping Financial Activities to Accounts
      summary: Delete a Financial Activity to Account Mapping
      operationId: deleteGLAccount
      parameters:
      - name: mappingId
        in: path
        description: mappingId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFinancialActivityAccountsResponse'
  /financialactivityaccounts/template:
    get:
      tags:
      - Mapping Financial Activities to Accounts
      operationId: retrieveTemplate
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /glaccounts/template:
    get:
      tags:
      - General Ledger Account
      summary: Retrieve GL Accounts Template
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\n\nField Defaults\nAllowed Value\
        \ Lists\nExample Request:\n\nglaccounts/template\nglaccounts/template?type=1\n\
        \ntype is optional and integer value from 1 to 5.\n\n1.Assets \n2.Liabilities\
        \ \n3.Equity \n4.Income \n5.Expenses"
      operationId: retrieveNewAccountDetails
      parameters:
      - name: type
        in: query
        description: type
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLAccountsTemplateResponse'
  /glaccounts:
    get:
      tags:
      - General Ledger Account
      summary: List General Ledger Accounts
      description: |-
        ARGUMENTS
        type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled boolean optional parentId Long optional tagId Long optional
        Example Requests:

        glaccounts


        glaccounts?type=1&manualEntriesAllowed=true&usage=1&disabled=false

        glaccounts?fetchRunningBalance=true
      operationId: retrieveAllAccounts
      parameters:
      - name: type
        in: query
        description: type
        schema:
          type: integer
          format: int32
      - name: searchParam
        in: query
        description: searchParam
        schema:
          type: string
      - name: usage
        in: query
        description: usage
        schema:
          type: integer
          format: int32
      - name: manualEntriesAllowed
        in: query
        description: manualEntriesAllowed
        schema:
          type: boolean
      - name: disabled
        in: query
        description: disabled
        schema:
          type: boolean
      - name: fetchRunningBalance
        in: query
        description: fetchRunningBalance
        schema:
          type: boolean
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGLAccountsResponse'
    post:
      tags:
      - General Ledger Account
      summary: Create a General Ledger Account
      description: "Note: You may optionally create Hierarchical Chart of Accounts\
        \ by using the \"parentId\" property of an Account\nMandatory Fields: \nname,\
        \ glCode, type, usage and manualEntriesAllowed"
      operationId: createGLAccountPost
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostGLAccountsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostGLAccountsResponse'
      x-codegen-request-body-name: body
  /glaccounts/{glAccountId}:
    get:
      tags:
      - General Ledger Account
      summary: Retrieve a General Ledger Account
      description: |-
        Example Requests:

        glaccounts/1


        glaccounts/1?template=true


        glaccounts/1?fields=name,glCode


        glaccounts/1?fetchRunningBalance=true
      operationId: retreiveAccount
      parameters:
      - name: glAccountId
        in: path
        description: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      - name: fetchRunningBalance
        in: query
        description: fetchRunningBalance
        schema:
          type: boolean
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGLAccountsResponse'
    put:
      tags:
      - General Ledger Account
      summary: Update an Accounting closure
      description: |+
        Once an accounting closure is created, only the comments associated with it may be edited

      operationId: updateGLAccountPut
      parameters:
      - name: glAccountId
        in: path
        description: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGLAccountsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGLAccountsResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - General Ledger Account
      summary: Delete an accounting closure
      description: 'Note: Only the latest accounting closure associated with a branch
        may be deleted.'
      operationId: deleteGLAccountDelete
      parameters:
      - name: glAccountId
        in: path
        description: glAccountId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGLAccountsRequest'
  /journalentries/{journalEntryId}:
    get:
      tags:
      - Journal Entries
      summary: Retrieve a single Entry
      description: |-
        Example Requests:

        journalentries/1



        journalentries/1?fields=officeName,glAccountId,entryType,amount

        journalentries/1?runningBalance=true

        journalentries/1?transactionDetails=true
      operationId: retreiveJournalEntryById
      parameters:
      - name: journalEntryId
        in: path
        description: journalEntryId
        required: true
        schema:
          type: integer
          format: int64
      - name: runningBalance
        in: query
        description: runningBalance
        schema:
          type: boolean
      - name: transactionDetails
        in: query
        description: transactionDetails
        schema:
          type: boolean
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JournalEntryData'
  /journalentries:
    get:
      tags:
      - Journal Entries
      summary: List Journal Entries
      description: |-
        The list capability of journal entries can support pagination and sorting.

        Example Requests:

        journalentries

        journalentries?transactionId=PB37X8Y21EQUY4S

        journalentries?officeId=1&manualEntriesOnly=true&fromDate=1 July 2013&toDate=15 July 2013&dateFormat=dd MMMM yyyy&locale=en

        journalentries?fields=officeName,glAccountName,transactionDate

        journalentries?offset=10&limit=50

        journalentries?orderBy=transactionId&sortOrder=DESC

        journalentries?runningBalance=true

        journalentries?transactionDetails=true

        journalentries?loanId=12

        journalentries?savingsId=24
      operationId: retrieveAllGet
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: glAccountId
        in: query
        description: glAccountId
        schema:
          type: integer
          format: int64
      - name: manualEntriesOnly
        in: query
        description: manualEntriesOnly
        schema:
          type: boolean
      - name: fromDate
        in: query
        description: fromDate
        schema:
          type: string
      - name: toDate
        in: query
        description: toDate
        schema:
          type: string
      - name: transactionId
        in: query
        description: transactionId
        schema:
          type: string
      - name: entityType
        in: query
        description: entityType
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      - name: loanId
        in: query
        description: loanId
        schema:
          type: integer
          format: int64
      - name: savingsId
        in: query
        description: savingsId
        schema:
          type: integer
          format: int64
      - name: runningBalance
        in: query
        description: runningBalance
        schema:
          type: boolean
      - name: transactionDetails
        in: query
        description: transactionDetails
        schema:
          type: boolean
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JournalEntryData'
    post:
      tags:
      - Journal Entries
      summary: Create "Balanced" Journal Entries
      description: "Note: A Balanced (simple) Journal entry would have atleast one\
        \ \"Debit\" and one \"Credit\" entry whose amounts are equal \nCompound Journal\
        \ entries may have \"n\" debits and \"m\" credits where both \"m\" and \"\
        n\" are greater than 0 and the net sum or all debits and credits are equal\
        \ \n\n\nMandatory Fields\nofficeId, transactionDate\n\n\ncredits- glAccountId,\
        \ amount, comments\n\n \ndebits-  glAccountId, amount, comments\n\n \nOptional\
        \ Fields\npaymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber,\
        \ bankNumber"
      operationId: createGLJournalEntry
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalEntryCommand'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostJournalEntriesResponse'
      x-codegen-request-body-name: body
  /journalentries/{transactionId}:
    post:
      tags:
      - Journal Entries
      summary: Update Running balances for Journal Entries
      description: "This API calculates the running balances for office. If office\
        \ ID not provided this API calculates running balances for all offices. \n\
        Mandatory Fields\nofficeId"
      operationId: createReversalJournalEntry
      parameters:
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: string
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostJournalEntriesTransactionIdRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostJournalEntriesTransactionIdResponse'
      x-codegen-request-body-name: body
  /journalentries/provisioning:
    get:
      tags:
      - Journal Entries
      operationId: retrieveJournalEntries
      parameters:
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: entryId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /journalentries/openingbalance:
    get:
      tags:
      - Journal Entries
      operationId: retrieveOpeningBalance
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /provisioningentries:
    get:
      tags:
      - Provisioning Entries
      summary: List all Provisioning Entries
      operationId: retrieveAllProvisioningEntries
      parameters:
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProvisioningEntryData'
    post:
      tags:
      - Provisioning Entries
      summary: Create new Provisioning Entries
      description: |-
        Creates a new Provisioning Entries

        Mandatory Fields
        date
        dateFormat
        locale
        Optional Fields
        createjournalentries
      operationId: createProvisioningEntries
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProvisioningEntriesRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProvisioningEntriesResponse'
      x-codegen-request-body-name: body
  /provisioningentries/{entryId}:
    get:
      tags:
      - Provisioning Entries
      summary: Retrieves a Provisioning Entry
      description: Returns the details of a generated Provisioning Entry.
      operationId: retrieveProvisioningEntry
      parameters:
      - name: entryId
        in: path
        description: entryId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvisioningEntryData'
    post:
      tags:
      - Provisioning Entries
      summary: Recreates Provisioning Entry
      description: Recreates Provisioning Entry | createjournalentry.
      operationId: modifyProvisioningEntry
      parameters:
      - name: entryId
        in: path
        description: entryId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: |-
          command=createjournalentry
          command=recreateprovisioningentry
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProvisioningEntriesRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProvisioningEntriesResponse'
      x-codegen-request-body-name: body
  /provisioningentries/entries:
    get:
      tags:
      - Provisioning Entries
      operationId: retrieveProviioningEntries
      parameters:
      - name: entryId
        in: query
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: productId
        in: query
        schema:
          type: integer
          format: int64
      - name: categoryId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoanProductProvisioningEntryData'
  /accountingrules:
    get:
      tags:
      - Accounting Rules
      summary: Retrieve Accounting Rules
      description: |-
        Returns the list of defined accounting rules.

        Example Requests:

        accountingrules
      operationId: retrieveAllAccountingRules
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountRulesResponse'
    post:
      tags:
      - Accounting Rules
      summary: Create/Define a Accounting rule
      description: |-
        Define a new Accounting rule.

        Mandatory Fields
        name, officeId,
        accountToDebit OR debitTags,
        accountToCredit OR creditTags.

        Optional Fields
        description
      operationId: createAccountingRule
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountingRulesRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountingRulesResponse'
      x-codegen-request-body-name: body
  /accountingrules/{accountingRuleId}:
    get:
      tags:
      - Accounting Rules
      summary: Retrieve a Accounting rule
      description: |-
        Returns the details of a defined Accounting rule.

        Example Requests:

        accountingrules/1
      operationId: retreiveAccountingRule
      parameters:
      - name: accountingRuleId
        in: path
        description: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountingRuleData'
    put:
      tags:
      - Accounting Rules
      summary: Update a Accounting Rule
      description: Updates the details of a Accounting rule.
      operationId: updateAccountingRule
      parameters:
      - name: accountingRuleId
        in: path
        description: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountingRulesRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountingRulesResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Accounting Rules
      summary: Delete a Accounting Rule
      description: Deletes a Accounting rule.
      operationId: deleteAccountingRule
      parameters:
      - name: accountingRuleId
        in: path
        description: accountingRuleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountingRulesResponse'
  /accountingrules/template:
    get:
      tags:
      - Accounting Rules
      summary: Retrieve Accounting Rule Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        accountingrules/template
      operationId: retrieveTemplateGet
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountRulesTemplateResponse'
  /batches:
    post:
      tags:
      - Batch API
      summary: Batch requests in a single transaction
      description: |-
        The Apache Fineract Batch API is also capable of executing all the requests in a single transaction, by setting a Query Parameter, "enclosingTransaction=true". So, if one or more of the requests in a batch returns an erroneous response all of the Data base transactions made by other successful requests will be rolled back.

        If there has been a rollback in a transaction then a single response will be provided, with a '400' status code and a body consisting of the error details of the first failed request.
      operationId: handleBatchRequests
      parameters:
      - name: enclosingTransaction
        in: query
        description: enclosingTransaction
        schema:
          type: boolean
          default: false
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBatchesRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchResponse'
      x-codegen-request-body-name: body
  /audits/{auditId}:
    get:
      tags:
      - Audits
      summary: Retrieve an Audit Entry
      description: |-
        Example Requests:

        audits/20
        audits/20?fields=madeOnDate,maker,processingResult
      operationId: retrieveAuditEntry
      parameters:
      - name: auditId
        in: path
        description: auditId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckerResponse'
  /audits/searchtemplate:
    get:
      tags:
      - Audits
      summary: Audit Search Template
      description: |-
        This is a convenience resource. It can be useful when building an Audit Search UI. "appUsers" are data scoped to the office/branch the requestor is associated with.

        Example Requests:

        audits/searchtemplate
        audits/searchtemplate?fields=actionNames
      operationId: retrieveAuditSearchTemplate
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
  /audits:
    get:
      tags:
      - Audits
      summary: List Audits
      description: |-
        Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending order, and are within the requestors' data scope. Also it supports pagination and sorting

        Example Requests:

        audits

        audits?fields=madeOnDate,maker,processingResult

        audits?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00

        audits?officeId=1

        audits?officeId=1&includeJson=true
      operationId: retrieveAuditEntries
      parameters:
      - name: actionName
        in: query
        description: actionName
        schema:
          type: string
      - name: entityName
        in: query
        description: entityName
        schema:
          type: string
      - name: resourceId
        in: query
        description: resourceId
        schema:
          type: integer
          format: int64
      - name: makerId
        in: query
        description: makerId
        schema:
          type: integer
          format: int64
      - name: makerDateTimeFrom
        in: query
        description: makerDateTimeFrom
        schema:
          type: string
      - name: makerDateTimeTo
        in: query
        description: makerDateTimeTo
        schema:
          type: string
      - name: checkerId
        in: query
        description: checkerId
        schema:
          type: integer
          format: int64
      - name: checkerDateTimeFrom
        in: query
        description: checkerDateTimeFrom
        schema:
          type: string
      - name: checkerDateTimeTo
        in: query
        description: checkerDateTimeTo
        schema:
          type: string
      - name: processingResult
        in: query
        description: processingResult
        schema:
          type: integer
          format: int32
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int32
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int32
      - name: loanid
        in: query
        description: loanid
        schema:
          type: integer
          format: int32
      - name: savingsAccountId
        in: query
        description: savingsAccountId
        schema:
          type: integer
          format: int32
      - name: paged
        in: query
        description: paged
        schema:
          type: boolean
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMakerCheckerResponse'
  /makercheckers/searchtemplate:
    get:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: Maker Checker Search Template
      description: |-
        This is a convenience resource. It can be useful when building a Checker Inbox UI. "appUsers" are data scoped to the office/branch the requestor is associated with. "actionNames" and "entityNames" returned are those that the requestor has Checker approval permissions for.

        Example Requests:

        makercheckers/searchtemplate
        makercheckers/searchtemplate?fields=entityNames
      operationId: retrieveAuditSearchTemplateGet
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
  /makercheckers:
    get:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: List Maker Checker Entries
      description: |-
        Get a list of entries that can be checked by the requestor that match the criteria supplied.

        Example Requests:

        makercheckers

        makercheckers?fields=madeOnDate,maker,processingResult

        makercheckers?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00

        makercheckers?officeId=1

        makercheckers?officeId=1&includeJson=true
      operationId: retrieveCommands
      parameters:
      - name: actionName
        in: query
        description: actionName
        schema:
          type: string
      - name: entityName
        in: query
        description: entityName
        schema:
          type: string
      - name: resourceId
        in: query
        description: resourceId
        schema:
          type: integer
          format: int64
      - name: makerId
        in: query
        description: makerId
        schema:
          type: integer
          format: int64
      - name: makerDateTimeFrom
        in: query
        description: makerDateTimeFrom
        schema:
          type: string
      - name: makerDateTimeTo
        in: query
        description: makerDateTimeTo
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int32
      - name: groupId
        in: query
        description: groupId
        schema:
          type: integer
          format: int32
      - name: clientId
        in: query
        description: clientId
        schema:
          type: integer
          format: int32
      - name: loanid
        in: query
        description: loanid
        schema:
          type: integer
          format: int32
      - name: savingsAccountId
        in: query
        description: savingsAccountId
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetMakerCheckerResponse'
  /makercheckers/{auditId}:
    post:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: Approve Maker Checker Entry | Reject Maker Checker Entry
      operationId: approveMakerCheckerEntry
      parameters:
      - name: auditId
        in: path
        description: auditId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMakerCheckersResponse'
    delete:
      tags:
      - Maker Checker (or 4-eye) functionality
      summary: Delete Maker Checker Entry
      operationId: deleteMakerCheckerEntry
      parameters:
      - name: auditId
        in: path
        description: auditId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostMakerCheckersResponse'
  /accountnumberformats:
    get:
      tags:
      - Account number format
      summary: List Account number formats
      description: |-
        Example Requests:

        accountnumberformats


        accountnumberformats?fields=accountType,prefixType
      operationId: retrieveAllGetNumberFormats
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
    post:
      tags:
      - Account number format
      summary: Create an Account number format
      description: |-
        Note: You may associate a single Account number format for a given account type
        Mandatory Fields for Account number formats
        accountType
      operationId: create
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountNumberFormatsRequest'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAccountNumberFormatsResponse'
      x-codegen-request-body-name: body
  /accountnumberformats/{accountNumberFormatId}:
    get:
      tags:
      - Account number format
      summary: Retrieve an Account number format
      description: |-
        Example Requests:

        accountnumberformats/1


        accountnumberformats/1?template=true


        accountnumberformats/1?fields=accountType,prefixType
      operationId: retrieveOne
      parameters:
      - name: accountNumberFormatId
        in: path
        description: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
    put:
      tags:
      - Account number format
      summary: Update an Account number format
      operationId: update
      parameters:
      - name: accountNumberFormatId
        in: path
        description: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountNumberFormatsRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutAccountNumberFormatsResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Account number format
      summary: Delete an Account number format
      description: 'Note: Account numbers created while this format was active would
        remain unchanged.'
      operationId: delete
      parameters:
      - name: accountNumberFormatId
        in: path
        description: accountNumberFormatId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountNumberFormatsResponse'
  /accountnumberformats/template:
    get:
      tags:
      - Account number format
      summary: Retrieve Account number format Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists

        Example Request:

        accountnumberformats/template
      operationId: retrieveTemplateGetFormat
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountNumberFormatsResponseTemplate'
  /caches:
    get:
      tags:
      - Cache
      summary: Retrieve Cache Types
      description: |-
        Returns the list of caches.

        Example Requests:

        caches
      operationId: retrieveAllCaches
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCachesResponse'
    put:
      tags:
      - Cache
      summary: Switch Cache
      description: Switches the cache to chosen one.
      operationId: switchCache
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCachesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCachesResponse'
      x-codegen-request-body-name: body
  /smscampaigns:
    get:
      tags:
      - SMS Campaigns
      summary: List SMS Campaigns
      description: |-
        Example Requests:

        smscampaigns
      operationId: retrieveAllCampaigns
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - SMS Campaigns
      summary: Create a SMS Campaign
      description: |-
        Mandatory Fields
        campaignName, campaignType, triggerType, providerId, runReportId, message

        Mandatory Fields for Cash based on selected report id
        paramValue in json format
      operationId: createCampaign
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandWrapper'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /smscampaigns/{resourceId}:
    get:
      tags:
      - SMS Campaigns
      summary: Retrieve a SMS Campaign
      description: |
        Example Requests:

        smscampaigns/1
      operationId: retrieveCampaign
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /smscampaigns/{campaignId}:
    put:
      tags:
      - SMS Campaigns
      summary: Update a Campaign
      operationId: updateCampaign
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandWrapper'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    post:
      tags:
      - SMS Campaigns
      summary: SMS Campaign
      description: Activates | Deactivates | Reactivates
      operationId: handleCommands
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
      - SMS Campaigns
      summary: Delete a SMS Campaign
      description: 'Note: Only closed SMS Campaigns can be deleted'
      operationId: deleteSMS
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
  /smscampaigns/template:
    get:
      tags:
      - SMS Campaigns
      summary: Retrieve a SMS Campaign
      description: |-
        Example Requests:

        smscampaigns/1


        smscampaigns/1?template=true


        smscampaigns/template
      operationId: template
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                type: string
  /smscampaigns/preview:
    post:
      tags:
      - SMS Campaigns
      operationId: preview
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /codes/{codeId}/codevalues:
    get:
      tags:
      - Code Values
      summary: List Code Values
      description: |-
        Returns the list of Code Values for a given Code

        Example Requests:

        codes/1/codevalues
      operationId: retrieveAllCodeValues
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: A List of Given response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCodeValuesDataResponse'
    post:
      tags:
      - Code Values
      summary: Create a Code Value
      operationId: createCodeValue
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCodeValuesDataRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCodeValueDataResponse'
      x-codegen-request-body-name: body
  /codes/{codeId}:
    get:
      tags:
      - Codes
      summary: Retrieve a Code
      description: |-
        Returns the details of a Code.

        Example Requests:

        codes/1
      operationId: retrieveCode
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCodesResponse'
    put:
      tags:
      - Codes
      summary: Update a Code
      description: Updates the details of a code if it is not system defined.
      operationId: updateCode
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCodesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCodesResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Codes
      summary: Delete a Code
      description: Deletes a code if it is not system defined.
      operationId: deleteCode
      parameters:
      - name: codeId
        in: path
        description: codeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCodesResponse'
  /externalservice/{servicename}:
    get:
      tags:
      - External Services
      summary: Retrieve External Services Configuration
      description: |-
        Returns a external Service configurations based on the Service Name.

        Service Names supported are S3 and SMTP.

        Example Requests:

        externalservice/SMTP
      operationId: retrieveOneSMS
      parameters:
      - name: servicename
        in: path
        description: servicename
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExternalServicesPropertiesData'
    put:
      tags:
      - External Services
      summary: Update External Service
      description: "Updates the external Service Configuration for a Service Name.\n\
        \nExample: \n\nexternalservice/S3"
      operationId: updateExternalServiceProperties
      parameters:
      - name: servicename
        in: path
        description: servicename
        required: true
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExternalServiceRequest'
        required: true
      responses:
        200:
          description: ""
          content: {}
      x-codegen-request-body-name: body
  /configurations:
    get:
      tags:
      - Global Configuration
      summary: Retrieve Global Configuration | Retrieve Global Configuration for surveys
      description: |-
        Returns the list global enable/disable configurations.

        Example Requests:

        configurations


        Returns the list global enable/disable survey configurations.

        Example Requests:

        configurations/survey
      operationId: retrieveConfiguration
      parameters:
      - name: survey
        in: query
        description: survey
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: "List of example \n response \nsurveys response   \ngiven below"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
  /configurations/{configId}:
    get:
      tags:
      - Global Configuration
      summary: Retrieve Global Configuration
      description: |-
        Returns a global enable/disable configurations.

        Example Requests:

        configurations/1
      operationId: retrieveOneConf
      parameters:
      - name: configId
        in: path
        description: configId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
    put:
      tags:
      - Global Configuration
      summary: Update Global Configuration
      description: Updates an enable/disable global configuration item.
      operationId: updateConfiguration
      parameters:
      - name: configId
        in: path
        description: configId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutGlobalConfigurationsRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutGlobalConfigurationsResponse'
      x-codegen-request-body-name: body
  /CreditBureauConfiguration/organisationCreditBureau:
    get:
      tags:
      - CreditBureau Configuration
      operationId: getOrganisationCreditBureau
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - CreditBureau Configuration
      operationId: updateCreditBureau
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /CreditBureauConfiguration/loanProduct:
    get:
      tags:
      - CreditBureau Configuration
      operationId: fetchLoanProducts
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration/mappings:
    get:
      tags:
      - CreditBureau Configuration
      operationId: getCreditBureauLoanProductMapping
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - CreditBureau Configuration
      operationId: updateCreditBureauLoanProductMapping
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}:
    post:
      tags:
      - CreditBureau Configuration
      operationId: addOrganisationCreditBureau
      parameters:
      - name: organisationCreditBureauId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /CreditBureauConfiguration/mappings/{CreditBureauId}:
    post:
      tags:
      - CreditBureau Configuration
      operationId: createCreditBureauLoanProductMapping
      parameters:
      - name: CreditBureauId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /CreditBureauConfiguration/config/{organisationCreditBureauId}:
    get:
      tags:
      - CreditBureau Configuration
      operationId: getConfiguration
      parameters:
      - name: organisationCreditBureauId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /CreditBureauConfiguration:
    get:
      tags:
      - CreditBureau Configuration
      operationId: getCreditBureau
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /datatables/{datatableName}:
    put:
      tags:
      - Data Tables
      summary: Update Data Table
      description: Modifies fields of a data table. If the apptableName parameter
        is passed, data table is deregistered and registered with the new application
        table.
      operationId: updateDatatable
      parameters:
      - name: datatableName
        in: path
        description: datatableName
        required: true
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Data Tables
      summary: Delete Data Table
      description: Deletes a data table and deregisters it from the Apache Fineract
        Core application table.
      operationId: deleteDatatable
      parameters:
      - name: datatableName
        in: path
        description: datatableName
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesResponse'
  /datatables:
    get:
      tags:
      - Data Tables
      summary: List Data Tables
      description: |-
        Lists registered data tables and the Apache Fineract Core application table they are registered to.

        ARGUMENTS

        apptable  - optional
        The Apache Fineract core application table.

        Example Requests:

        datatables?apptable=m_client


        datatables
      operationId: getDatatables
      parameters:
      - name: apptable
        in: query
        description: apptable
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetDataTablesResponse'
    post:
      tags:
      - Data Tables
      summary: Create Data Table
      description: "Create a new data table and registers it with the Apache Fineract\
        \ Core application table.\n\nField Descriptions\n\nMandatory - datatableName\
        \ : \n\nThe name of the Data Table.\n\nMandatory - apptableName\n\nApplication\
        \ table name. Must be one of the following:\n\nm_client\n\nm_group\n\nm_loan\n\
        \nm_office\n\nm_saving_account\n\nm_product_loan\n\nm_savings_product\n\n\
        Mandatory - columns  \nAn array of columns in the new Data Table.\n\nOptional\
        \ - multiRow\n\nAllows to create multiple entries in the Data Table. Optional,\
        \ defaults to false. If this property is not provided Data Table will allow\
        \ only one entry.\n\nField Descriptions - columns\n\nMandatory - name\n\n\
        Name of the created column. Can contain only alphanumeric characters, underscores\
        \ and spaces, but cannot start with a number. Cannot start or end with an\
        \ underscore or space.\n\nMandatory - type\n\nColumn type. Must be one of\
        \ the following:\n\nBoolean\n\nDate\n\nDateTime\n\nDecimal\n\nDropdown\n\n\
        \nNumber\n\nString\n\nText\n\nMandatory [type = Dropdown] - code\n\nUsed in\
        \ Code Value fields. Column name becomes: code_cd_name. Mandatory if using\
        \ type Dropdown, otherwise an error is returned.\n\nOptional - mandatory\n\
        \nDetermines whether this column must have a value in every entry. Optional,\
        \ defaults to false.\n\nMandatory [type = String] - length\n\nLength of the\
        \ text field. Mandatory if type String is used, otherwise an error is returned."
      operationId: createDatatable
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataTablesResponse'
      x-codegen-request-body-name: body
  /datatables/register/{datatable}/{apptable}:
    post:
      tags:
      - Data Tables
      summary: Register Data Table
      description: Registers a data table with the Apache Fineract Core application
        table. This allows the data table to be maintained through the API. In case
        the datatable is a PPI (survey table), a parameter category should be pass
        along with the request. The API currently support one category (200)
      operationId: registerDatatable
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptable
        in: path
        description: apptable
        required: true
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesRegisterDatatableAppTable'
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
      x-codegen-request-body-name: body
  /datatables/deregister/{datatable}:
    post:
      tags:
      - Data Tables
      summary: Deregister Data Table
      description: Deregisters a data table. It will no longer be available through
        the API.
      operationId: deregisterDatatable
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesResponse'
  /datatables/{datatable}:
    get:
      tags:
      - Data Tables
      summary: Retrieve Data Table Details
      description: Lists a registered data table details and the Apache Fineract Core
        application table they are registered to.
      operationId: getDatatable
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataTablesResponse'
  /datatables/{datatable}/{apptableId}:
    get:
      tags:
      - Data Tables
      summary: Retrieve Entry(s) from Data Table
      description: "Gets the entry (if it exists) for data tables that are one to\
        \ one with the application table. \nGets the entries (if they exist) for data\
        \ tables that are one to many with the application table.\n\nNote: The 'fields'\
        \ parameter is not available for datatables.\n\nARGUMENTS\norderoptional Specifies\
        \ the order in which data is returned.genericResultSetoptional, defaults to\
        \ false If 'true' an optimised JSON format is returned suitable for tabular\
        \ display of data. This format is used by the default data tables UI functionality.\n\
        Example Requests:\n\ndatatables/extra_client_details/1\n\n\ndatatables/extra_family_details/1?order=`Date\
        \ of Birth` desc\n\n\ndatatables/extra_client_details/1?genericResultSet=true"
      operationId: getDatatableGet
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - name: order
        in: query
        description: order
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataTablesAppTableIdResponse'
    put:
      tags:
      - Data Tables
      summary: Update Entry in Data Table (One to One)
      description: Updates the row (if it exists) of the data table.
      operationId: updateDatatableEntryOnetoOne
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesAppTableIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesAppTableIdResponse'
      x-codegen-request-body-name: body
    post:
      tags:
      - Data Tables
      summary: Create Entry in Data Table
      description: |-
        Adds a row to the data table.

        Note that the default datatable UI functionality converts any field name containing spaces to underscores when using the API. This means the field name "Business Description" is considered the same as "Business_Description". So you shouldn't have both "versions" in any data table.
      operationId: createDatatableEntry
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostDataTablesAppTableIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostDataTablesAppTableIdResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Data Tables
      summary: Delete Entry(s) in Data Table
      description: "Deletes the entry (if it exists) for data tables that are one-to-one\
        \ with the application table. \nDeletes the entries (if they exist) for data\
        \ tables that are one-to-many with the application table."
      operationId: deleteDatatableEntries
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdResponse'
  /datatables/{datatable}/{apptableId}/{datatableId}:
    get:
      tags:
      - Data Tables
      operationId: getDatatableManyEntry
      parameters:
      - name: datatable
        in: path
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: datatableId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: order
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - Data Tables
      summary: Update Entry in Data Table (One to Many)
      description: Updates the row (if it exists) of the data table.
      operationId: updateDatatableEntryOneToMany
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - name: datatableId
        in: path
        description: datatableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Data Tables
      summary: Delete Entry in Datatable (One to Many)
      description: |+
        Deletes the entry (if it exists) for data tables that are one to many with the application table.

      operationId: deleteDatatableEntriesDel
      parameters:
      - name: datatable
        in: path
        description: datatable
        required: true
        schema: {}
        example: '{}'
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      - name: datatableId
        in: path
        description: datatableId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdDatatableIdResponse'
  /entityDatatableChecks:
    get:
      tags:
      - Entity-Datatable Checks
      summary: List Entity-Datatable Checks
      description: |-
        The list capability of Entity-Datatable Checks can support pagination.

        OPTIONAL ARGUMENTS
        offset Integer optional, defaults to 0 Indicates the result from which pagination startslimit Integer optional, defaults to 200 Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1
        Example Request:

        entityDatatableChecks?offset=0&limit=15
      operationId: retrieveAllChecks
      parameters:
      - name: status
        in: query
        description: status
        schema:
          type: integer
          format: int64
      - name: entity
        in: query
        description: entity
        schema:
          type: string
      - name: productId
        in: query
        description: productId
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEntityDatatableChecksResponse'
    post:
      tags:
      - Entity-Datatable Checks
      summary: Create Entity-Datatable Checks
      description: "Mandatory Fields : \nentity, status, datatableName\n\nNon-Mandatory\
        \ Fields : \nproductId"
      operationId: createEntityDatatableCheck
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEntityDatatableChecksTemplateRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntityDatatableChecksTemplateResponse'
      x-codegen-request-body-name: body
  /entityDatatableChecks/template:
    get:
      tags:
      - Entity-Datatable Checks
      summary: Retrieve Entity-Datatable Checks Template
      description: |-
        This is a convenience resource useful for building maintenance user interface screens for Entity-Datatable Checks applications. The template data returned consists of:

        Allowed Value Lists
        Example Request:

        entityDatatableChecks/template
      operationId: getTemplate
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityDatatableChecksTemplateResponse'
  /reports/{id}:
    get:
      tags:
      - Reports
      summary: |
        Retrieve a Report
      description: |-
        Example Requests:

        reports/1


        reports/1?template=true
      operationId: retrieveReport
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsResponse'
    put:
      tags:
      - Reports
      summary: Update a Report
      description: Only the useReport value can be updated for core reports.
      operationId: updateReport
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutReportRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReportResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Reports
      summary: Delete a Report
      description: Only non-core reports can be deleted.
      operationId: deleteReport
      parameters:
      - name: id
        in: path
        description: id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReportsResponse'
  /reports:
    get:
      tags:
      - Reports
      summary: List Reports
      description: |-
        Lists all reports and their parameters.

        Example Request:

        reports
      operationId: retrieveReportList
      responses:
        200:
          description: ""
          content: {}
    post:
      tags:
      - Reports
      summary: Create a Report
      operationId: createReport
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRepostRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportsResponse'
      x-codegen-request-body-name: body
  /reports/template:
    get:
      tags:
      - Reports
      summary: Retrieve Report Template
      description: "This is a convenience resource. It can be useful when building\
        \ maintenance user interface screens for client applications. The template\
        \ data returned consists of any or all of:\n\nField Defaults\nAllowed Value\
        \ Lists\n\nExample Request : \n\nreports/template"
      operationId: retrieveOfficeTemplate
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportsTemplateResponse'
  /runreports/{reportName}:
    get:
      tags:
      - Run Reports
      summary: Running a Report
      description: |-
        This resource allows you to run and receive output from pre-defined Apache Fineract reports.

        Reports can also be used to provide data for searching and workflow functionality.

        The default output is a JSON formatted "Generic Resultset". The Generic Resultset contains Column Heading as well as Data information. However, you can export to CSV format by simply adding "&exportCSV=true" to the end of your URL.

        If Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho reports can return HTML, PDF or CSV formats.

        The Apache Fineract reference application uses a JQuery plugin called stretchy reporting which, itself, uses this reports resource to provide a pretty flexible reporting User Interface (UI).



        Example Requests:

        runreports/Client%20Listing?R_officeId=1


        runreports/Client%20Listing?R_officeId=1&exportCSV=true


        runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true


        runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true&exportCSV=true


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=HTML&R_officeId=1


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=XLS&R_officeId=1


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=CSV&R_officeId=1


        runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=PDF&R_officeId=1
      operationId: runReport
      parameters:
      - name: reportName
        in: path
        description: reportName
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            text/csv:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            application/vnd.ms-excel:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            application/pdf:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
            text/html:
              schema:
                $ref: '#/components/schemas/GetReportNameResponse'
  /{entityType}/{entityId}/documents:
    get:
      tags:
      - Documents
      summary: List documents
      description: |-
        Example Requests:

        clients/1/documents

        client_identifiers/1/documents

        loans/1/documents?fields=name,description
      operationId: retreiveAllDocuments
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
    post:
      tags:
      - Documents
      summary: Create a Document
      description: "Note: A document is created using a Multi-part form upload \n\n\
        Body Parts\n\nname : \nName or summary of the document\n\ndescription : \n\
        Description of the document\n\nfile : \nThe file to be uploaded\n\nMandatory\
        \ Fields : \nfile and description"
      operationId: createDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        description: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  description: file
                  format: binary
                name:
                  type: string
                  description: name
                description:
                  type: string
                  description: description
      responses:
        200:
          description: Not Shown (multi-part form data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntityTypeEntityIdDocumentsResponse'
  /{entityType}/{entityId}/documents/{documentId}:
    get:
      tags:
      - Documents
      summary: Retrieve a Document
      description: |-
        Example Requests:

        clients/1/documents/1


        loans/1/documents/1


        client_identifiers/1/documents/1?fields=name,description
      operationId: getDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
    put:
      tags:
      - Documents
      summary: Update a Document
      description: "Note: A document is updated using a Multi-part form upload \n\
        Body Parts\nname\nName or summary of the document\ndescription\nDescription\
        \ of the document\nfile\nThe file to be uploaded"
      operationId: updateDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        description: Content-Length
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  description: file
                  format: binary
                name:
                  type: string
                  description: name
                description:
                  type: string
                  description: description
      responses:
        200:
          description: Not Shown (multi-part form data)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponse'
    delete:
      tags:
      - Documents
      summary: Remove a Document
      operationId: deleteDocument
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteEntityTypeEntityIdDocumentsResponse'
  /{entityType}/{entityId}/documents/{documentId}/attachment:
    get:
      tags:
      - Documents
      summary: Retrieve Binary File associated with Document
      description: |-
        Request used to download the file associated with the document

        Example Requests:

        clients/1/documents/1/attachment


        loans/1/documents/1/attachment
      operationId: downloadFile
      parameters:
      - name: entityType
        in: path
        description: entityType
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      - name: documentId
        in: path
        description: documentId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: 'Not Shown: The corresponding Binary file'
          content: {}
  /{entity}/{entityId}/images:
    get:
      tags:
      - DomainNameapiv1{entity}{entityId}images
      operationId: downloadClientImage
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: maxWidth
        in: query
        schema:
          type: integer
          format: int32
      - name: maxHeight
        in: query
        schema:
          type: integer
          format: int32
      - name: output
        in: query
        schema:
          type: string
      responses:
        default:
          description: successful operation
          content: {}
    put:
      tags:
      - DomainNameapiv1{entity}{entityId}images
      operationId: updateClientImage
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Content-Length
        in: header
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - DomainNameapiv1{entity}{entityId}images
      operationId: addNewClientImage
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          text/plain:
            schema:
              type: string
          text/html:
            schema:
              type: string
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - DomainNameapiv1{entity}{entityId}images
      operationId: deleteClientImage
      parameters:
      - name: entity
        in: path
        required: true
        schema:
          type: string
      - name: entityId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping/{mapId}/{fromId}/{toId}:
    get:
      tags:
      - DomainNameapiv1entitytoentitymapping
      operationId: getEntityToEntityMappings
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fromId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: toId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping/{mapId}:
    get:
      tags:
      - DomainNameapiv1entitytoentitymapping
      operationId: retrieveOneMapping
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - DomainNameapiv1entitytoentitymapping
      operationId: updateMap
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - DomainNameapiv1entitytoentitymapping
      operationId: deleteMapping
      parameters:
      - name: mapId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping:
    get:
      tags:
      - DomainNameapiv1entitytoentitymapping
      operationId: retrieveAllEntityMapping
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /entitytoentitymapping/{relId}:
    post:
      tags:
      - DomainNameapiv1entitytoentitymapping
      operationId: createMap
      parameters:
      - name: relId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /hooks:
    get:
      tags:
      - Hooks
      summary: Retrieve Hooks
      description: |-
        Returns the list of hooks.

        Example Requests:

        hooks
      operationId: retrieveHooks
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHookResponse'
    post:
      tags:
      - Hooks
      summary: Create a Hook
      description: |-
        The following parameters can be passed for the creation of a hook :-

        name - string - Required. The name of the template that is being called. (See /hooks/template for the list of valid hook names.)

        isActive - boolean - Determines whether the hook is actually triggered.

        events - array - Determines what events the hook is triggered for.

        config - hash - Required. Key/value pairs to provide settings for this hook. These settings vary between the templates.

        templateId - Optional. The UGD template ID associated with the same entity (client or loan).
      operationId: createHook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHookRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHookResponse'
      x-codegen-request-body-name: body
  /hooks/{hookId}:
    get:
      tags:
      - Hooks
      summary: Retrieve a Hook
      description: |-
        Returns the details of a Hook.

        Example Requests:

        hooks/1
      operationId: retrieveHook
      parameters:
      - name: hookId
        in: path
        description: hookId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHookResponse'
    put:
      tags:
      - Hooks
      summary: Update a Hook
      description: Updates the details of a hook.
      operationId: updateHook
      parameters:
      - name: hookId
        in: path
        description: hookId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHookRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutHookResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Hooks
      summary: Delete a Hook
      description: Deletes a hook.
      operationId: deleteHook
      parameters:
      - name: hookId
        in: path
        description: hookId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHookResponse'
  /hooks/template:
    get:
      tags:
      - Hooks
      summary: Retrieve Hooks Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        hooks/template
      operationId: templateGetAll
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHookTemplateResponse'
  /scheduler:
    get:
      tags:
      - Scheduler
      summary: Retrieve Scheduler Status
      description: |-
        Returns the scheduler status.

        Example Requests:

        scheduler
      operationId: retrieveStatus
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSchedulerResponse'
    post:
      tags:
      - Scheduler
      summary: Activate Scheduler Jobs | Suspend Scheduler Jobs
      description: Activates the scheduler job service. | Suspends the scheduler job
        service.
      operationId: changeSchedulerStatus
      parameters:
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        200:
          description: |-
            POST :  scheduler?command=start


            POST : scheduler?command=stop
          content: {}
  /jobs/{jobId}/runhistory:
    get:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Retrieve Job Run History
      description: |-
        Example Requests:

        jobs/5/runhistory?offset=0&limit=200
      operationId: retrieveHistory
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsJobIDJobRunHistoryResponse'
  /jobs/{jobId}:
    get:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Retrieve a Job
      description: |-
        Returns the details of a Job.

        Example Requests:

        jobs/5
      operationId: retrieveOneJob
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobsResponse'
    put:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Update a Job
      description: Updates the details of a job.
      operationId: updateJobDetail
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutJobsJobsIDRequest'
        required: true
      responses:
        200:
          description: ""
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Run a Job
      description: Manually Execute Specific Job.
      operationId: executeJob
      parameters:
      - name: jobId
        in: path
        description: jobId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        200:
          description: 'POST: jobs/1?command=executeJob'
          content: {}
  /jobs:
    get:
      tags:
      - MIFOSX-BATCH JOBS
      summary: Retrieve Scheduler Jobs
      description: |-
        Returns the list of jobs.

        Example Requests:

        jobs
      operationId: retrieveAllJobs
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetJobsResponse'
  /reportmailingjobs:
    get:
      tags:
      - Report Mailing Jobs
      summary: List Report Mailing Jobs
      description: |-
        Example Requests:

        reportmailingjobs
      operationId: retrieveAllReportMailingJobs
      parameters:
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetReportMailingJobsResponse'
    post:
      tags:
      - Report Mailing Jobs
      summary: Create a Report Mailing Job
      description: |-
        Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients, emailSubject, emailMessage, emailAttachmentFileFormatId, recurrence, isActive

        Optional Fields: description, stretchyReportParamMap
      operationId: createReportMailingJob
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostReportMailingJobsRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostReportMailingJobsResponse'
      x-codegen-request-body-name: body
  /reportmailingjobs/{entityId}:
    get:
      tags:
      - Report Mailing Jobs
      summary: Retrieve a Report Mailing Job
      description: |-
        Example Requests:

        reportmailingjobs/1


        reportmailingjobs/1?template=true
      operationId: retrieveReportMailingJob
      parameters:
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportMailingJobsResponse'
    put:
      tags:
      - Report Mailing Jobs
      summary: |
        Update a Report Mailing Job
      operationId: updateReportMailingJob
      parameters:
      - name: entityId
        in: path
        description: entityId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutReportMailingJobsRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutReportMailingJobsResponse'
      x-codegen-request-body-name: body
  /reportmailingjobs/template:
    get:
      tags:
      - Report Mailing Jobs
      summary: Retrieve Report Mailing Job Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for report mailing job applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        reportmailingjobs/template
      operationId: retrieveReportMailingJobTemplate
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportMailingJobsTemplate'
  /reportmailingjobrunhistory:
    get:
      tags:
      - List Report Mailing Job History
      summary: List Report Mailing Job History
      description: |-
        The list capability of report mailing job history can support pagination and sorting.

        Example Requests:

        reportmailingjobrunhistory/1
      operationId: retrieveAllByReportMailingJobId
      parameters:
      - name: reportMailingJobId
        in: query
        description: reportMailingJobId
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportMailingJobRunHistoryData'
  /authentication:
    post:
      tags:
      - Authentication HTTP Basic
      summary: Verify authentication
      description: Authenticates the credentials provided and returns the set roles
        and permissions allowed.
      operationId: authenticate
      parameters:
      - name: username
        in: query
        description: username
        schema:
          type: string
      - name: password
        in: query
        description: password
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAuthenticationResponse'
        400:
          description: Unauthenticated. Please login
          content: {}
  /userdetails:
    get:
      tags:
      - Fetch authenticated user details
      summary: |
        Fetch authenticated user details
      description: checks the Authentication and returns the set roles and permissions
        allowed.
      operationId: fetchAuthenticatedUserData
      parameters:
      - name: access_token
        in: query
        description: access_token
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserDetailsResponse'
  /sms/{campaignId}/messageByStatus:
    get:
      tags:
      - SMS
      operationId: retrieveAllSmsByStatus
      parameters:
      - name: campaignId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        schema:
          type: string
      - name: toDate
        in: query
        schema:
          type: string
      - name: locale
        in: query
        schema:
          type: string
      - name: dateFormat
        in: query
        schema:
          type: string
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /sms:
    get:
      tags:
      - SMS
      operationId: retrieveAllSMS
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - SMS
      operationId: createSMS
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /sms/{resourceId}:
    get:
      tags:
      - SMS
      operationId: retrieveOneSMSID
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - SMS
      operationId: updateSMS
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - SMS
      operationId: deleteSMSID
      parameters:
      - name: resourceId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string

  /povertyLine/{ppiName}:
    get:
      tags:
      - Poverty Line
      operationId: retrieveAllpovertyLine
      parameters:
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /povertyLine/{ppiName}/{likelihoodId}:
    get:
      tags:
      - Poverty Line
      operationId: retrieveAllpovertyLineGet
      parameters:
      - name: ppiName
        in: path
        required: true
        schema:
          type: string
      - name: likelihoodId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /survey/{surveyName}/{apptableId}:
    post:
      tags:
      - Survey
      summary: Create an entry in the survey table
      description: "Insert and entry in a survey table (full fill the survey).\n\n\
        Refer Link for sample Body:  [ https://demo.openmf.org/api-docs/apiLive.htm#survey_create\
        \ ] "
      operationId: createDatatableEntryPost
      parameters:
      - name: surveyName
        in: path
        description: surveyName
        required: true
        schema:
          type: string
      - name: apptableId
        in: path
        description: apptableId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSurveySurveyNameApptableIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSurveySurveyNameApptableIdResponse'
      x-codegen-request-body-name: body
  /survey/{surveyName}/{clientId}/{fulfilledId}:
    delete:
      tags:
      - Survey
      operationId: deleteDatatableEntriesSurvey
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: fulfilledId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /survey:
    get:
      tags:
      - Survey
      summary: Retrieve surveys
      description: Retrieve surveys. This allows to retrieve the list of survey tables
        registered .
      operationId: retrieveSurveys
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetSurveyResponse'
  /survey/{surveyName}:
    get:
      tags:
      - Survey
      summary: Retrieve survey
      description: Lists a registered survey table details and the Apache Fineract
        Core application table they are registered to.
      operationId: retrieveSurvey
      parameters:
      - name: surveyName
        in: path
        description: surveyName
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSurveyResponse'
  /survey/{surveyName}/{clientId}:
    get:
      tags:
      - Survey
      operationId: getClientSurveyOverview
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /survey/{surveyName}/{clientId}/{entryId}:
    get:
      tags:
      - Survey
      operationId: getSurveyEntry
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: entryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /survey/register/{surveyName}/{apptable}:
    put:
      tags:
      - Survey
      operationId: register
      parameters:
      - name: surveyName
        in: path
        required: true
        schema:
          type: string
      - name: apptable
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /mixreport:
    get:
      tags:
      - Mix Report
      operationId: retrieveXBRLReport
      parameters:
      - name: startDate
        in: query
        schema:
          type: string
          format: date-time
      - name: endDate
        in: query
        schema:
          type: string
          format: date-time
      - name: currency
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: string
  /mixtaxonomy:
    get:
      tags:
      - Mix Taxonomy
      operationId: retrieveAllMixTaxonomy
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /mixmapping:
    get:
      tags:
      - Mix Mapping
      operationId: retrieveTaxonomyMapping
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    put:
      tags:
      - Mix Mapping
      operationId: updateTaxonomyMapping
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /holidays/{holidayId}:
    get:
      tags:
      - Holidays
      summary: Retrieve a Holiday
      description: |-
        Example Requests:

        holidays/1
      operationId: retrieveOneHoliday
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHolidaysResponse'
    put:
      tags:
      - Holidays
      summary: Update a Holiday
      description: If a holiday is in pending state (created and not activated) then
        all fields are allowed to modify. Once holidays become active only name and
        descriptions are allowed to modify.
      operationId: updateHoliday
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutHolidaysHolidayIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutHolidaysHolidayIdResponse'
      x-codegen-request-body-name: body
    post:
      tags:
      - Holidays
      summary: Activate a Holiday
      description: |-
        Always Holidays are created in pending state. This API allows to activate a holiday.

        Only the active holidays are considered for rescheduling the loan repayment.
      operationId: handleCommandsHoliday
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHolidaysHolidayIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHolidaysHolidayIdResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Holidays
      summary: Delete a Holiday
      description: This API allows to delete a holiday. This is a soft delete the
        deleted holiday status is marked as deleted.
      operationId: deleteHoliday
      parameters:
      - name: holidayId
        in: path
        description: holidayId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteHolidaysHolidayIdResponse'
  /holidays:
    get:
      tags:
      - Holidays
      summary: List Holidays
      description: |-
        Example Requests:

        holidays?officeId=1
      operationId: retrieveAllHolidays
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: fromDate
        in: query
        description: fromDate
        schema:
          type: string
      - name: toDate
        in: query
        description: toDate
        schema:
          type: string
      - name: locale
        in: query
        description: locale
        schema:
          type: string
      - name: dateFormat
        in: query
        description: dateFormat
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetHolidaysResponse'
    post:
      tags:
      - Holidays
      summary: Create a Holiday
      description: 'Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo,
        offices'
      operationId: createNewHoliday
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostHolidaysRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostHolidaysResponse'
      x-codegen-request-body-name: body
  /currencies:
    get:
      tags:
      - Currency
      summary: Retrieve Currency Configuration
      description: |-
        Returns the list of currencies permitted for use AND the list of currencies not selected (but available for selection).

        Example Requests:

        currencies


        currencies?fields=selectedCurrencyOptions
      operationId: retrieveCurrencies
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurrenciesResponse'
    put:
      tags:
      - Currency
      summary: Update Currency Configuration
      description: Updates the list of currencies permitted for use.
      operationId: updateCurrencies
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCurrenciesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutCurrenciesResponse'
      x-codegen-request-body-name: body
  /officetransactions:
    get:
      tags:
      - officetransactions
      operationId: retrieveOfficeTransactions
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - officetransactions
      operationId: transferMoneyFrom
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /officetransactions/template:
    get:
      tags:
      - officetransactions
      operationId: newOfficeTransactionDetails
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /officetransactions/{transactionId}:
    delete:
      tags:
      - officetransactions
      operationId: deleteOfficeTransactions
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /offices/template:
    get:
      tags:
      - Offices
      summary: Retrieve Office Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        offices/template
      operationId: retrieveOfficeTemplateGet
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesTemplateResponse'
  /offices:
    get:
      tags:
      - Offices
      summary: List Offices
      description: |-
        Example Requests:

        offices


        offices?fields=id,name,openingDate
      operationId: retrieveOffices
      parameters:
      - name: includeAllOffices
        in: query
        description: includeAllOffices
        schema:
          type: boolean
          default: false
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetOfficesResponse'
    post:
      tags:
      - Offices
      summary: Create an Office
      description: |-
        Mandatory Fields
        name, openingDate, parentId
      operationId: createOffice
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOfficesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostOfficesResponse'
      x-codegen-request-body-name: body
  /offices/{officeId}:
    get:
      tags:
      - Offices
      summary: Retrieve an Office
      description: |-
        Example Requests:

        offices/1


        offices/1?template=true


        offices/1?fields=id,name,parentName
      operationId: retreiveOffice
      parameters:
      - name: officeId
        in: path
        description: officeId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfficesResponse'
    put:
      tags:
      - Offices
      summary: Update Office
      operationId: updateOffice
      parameters:
      - name: officeId
        in: path
        description: officeId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutOfficesOfficeIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutOfficesOfficeIdResponse'
      x-codegen-request-body-name: body
  /provisioningcategory:
    get:
      tags:
      - Provisioning Category
      operationId: retrieveAllProvisionCategory
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
      - Provisioning Category
      operationId: createProvisioningCategory
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
  /provisioningcategory/{categoryId}:
    put:
      tags:
      - Provisioning Category
      operationId: updateProvisioningCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Provisioning Category
      operationId: deleteProvisioningCategory
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /provisioningcriteria/{criteriaId}:
    get:
      tags:
      - Provisioning Criteria
      summary: Retrieves a Provisioning Criteria
      description: Retrieves a Provisioning Criteria
      operationId: retrieveProvisioningCriteria
      parameters:
      - name: criteriaId
        in: path
        description: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetProvisioningCriteriaCriteriaIdResponse'
    put:
      tags:
      - Provisioning Criteria
      summary: Updates a new Provisioning Criteria
      description: |-
        Updates a new Provisioning Criteria

        Optional Fields
        criteriaName, loanProducts, provisioningcriteria
      operationId: updateProvisioningCriteria
      parameters:
      - name: criteriaId
        in: path
        description: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutProvisioningCriteriaRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutProvisioningCriteriaResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Provisioning Criteria
      summary: Deletes Provisioning Criteria
      description: Deletes Provisioning Criteria
      operationId: deleteProvisioningCriteria
      parameters:
      - name: criteriaId
        in: path
        description: criteriaId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteProvisioningCriteriaResponse'
  /provisioningcriteria:
    get:
      tags:
      - Provisioning Criteria
      summary: Retrieves all created Provisioning Criterias
      description: Retrieves all created Provisioning Criterias
      operationId: retrieveAllProvisioningCriterias
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetProvisioningCriteriaResponse'
    post:
      tags:
      - Provisioning Criteria
      summary: Create a new Provisioning Criteria
      description: "Creates a new Provisioning Criteria\n\nMandatory Fields: \ncriteriaName\n\
        provisioningcriteria\n\nOptional Fields: \nloanProducts"
      operationId: createProvisioningCriteria
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostProvisioningCriteriaRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostProvisioningCriteriaResponse'
      x-codegen-request-body-name: body
  /provisioningcriteria/template:
    get:
      tags:
      - Provisioning Criteria
      operationId: retrieveTemplateProvision
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /staff:
    get:
      tags:
      - Staff
      summary: Retrieve Staff
      description: |-
        Returns the list of staff members.

        Example Requests:

        staff




        Retrieve a Staff by status

        Returns the details of a Staff based on status.

        By default it Returns all the ACTIVE Staff.

        If status=INACTIVE, then it returns all INACTIVE Staff.

        and for status=ALL, it Returns both ACTIVE and INACTIVE Staff.

        Example Requests:

        staff?status=active
      operationId: retrieveStaff
      parameters:
      - name: sqlSearch
        in: query
        description: sqlSearch
        schema:
          type: string
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      - name: staffInOfficeHierarchy
        in: query
        description: staffInOfficeHierarchy
        schema:
          type: boolean
          default: false
      - name: loanOfficersOnly
        in: query
        description: loanOfficersOnly
        schema:
          type: boolean
          default: false
      - name: status
        in: query
        description: status
        schema:
          type: string
          default: active
      responses:
        200:
          description: GET https://DomainName/api/v1/staff?status={ACTIVE|INACTIVE|ALL}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStaffResponse'
    post:
      tags:
      - Staff
      summary: Create a staff member
      description: "Creates a staff member.\n\nMandatory Fields: \nofficeId, firstname,\
        \ lastname\n\nOptional Fields: \nisLoanOfficer, isActive"
      operationId: createStaff
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostStaffRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostStaffResponse'
      x-codegen-request-body-name: body
  /staff/{staffId}:
    get:
      tags:
      - Staff
      summary: Retrieve a Staff Member
      description: |-
        Returns the details of a Staff Member.

        Example Requests:

        staff/1
      operationId: retreiveStaff
      parameters:
      - name: staffId
        in: path
        description: staffId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetStaffResponse'
    put:
      tags:
      - Staff
      summary: Update a Staff Member
      description: Updates the details of a staff member.
      operationId: updateStaff
      parameters:
      - name: staffId
        in: path
        description: staffId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutStaffRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutStaffResponse'
      x-codegen-request-body-name: body
  /cashiers:
    get:
      tags:
      - cashiers
      operationId: getCashierData
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: tellerId
        in: query
        schema:
          type: integer
          format: int64
      - name: staffId
        in: query
        schema:
          type: integer
          format: int64
      - name: date
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /tellers:
    get:
      tags:
      - Teller Cash Management
      summary: List all tellers
      description: Retrieves list tellers
      operationId: getTellerData
      parameters:
      - name: officeId
        in: query
        description: officeId
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTellersResponse'
    post:
      tags:
      - Teller Cash Management
      summary: Create teller
      description: |-
        Mandatory Fields
        Teller name, OfficeId, Description, Start Date, Status
        Optional Fields
        End Date
      operationId: createTeller
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersResponse'
      x-codegen-request-body-name: body
  /tellers/{tellerId}:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve tellers
      operationId: findTeller
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersResponse'
    put:
      tags:
      - Teller Cash Management
      summary: Update teller
      operationId: updateTeller
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTellersRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTellersResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Teller Cash Management
      operationId: deleteTeller
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/cashiers:
    get:
      tags:
      - Teller Cash Management
      summary: List Cashiers
      operationId: getCashierDataTellers
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: fromdate
        in: query
        description: fromdate
        schema:
          type: string
      - name: todate
        in: query
        description: todate
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersResponse'
    post:
      tags:
      - Teller Cash Management
      summary: Create Cashiers
      description: "Mandatory Fields: \nCashier/staff, Fromm Date, To Date, Full Day\
        \ or From time and To time\n\n\n\nOptional Fields: \nDescription/Notes"
      operationId: createCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersResponse'
      x-codegen-request-body-name: body
  /tellers/{tellerId}/cashiers/{cashierId}:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve a cashier
      operationId: findCashierData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashierIdResponse'
    put:
      tags:
      - Teller Cash Management
      summary: Update Cashier
      operationId: updateCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Teller Cash Management
      summary: Delete Cashier
      operationId: deleteCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTellersTellerIdCashiersCashierIdResponse'
  /tellers/{tellerId}/cashiers/template:
    get:
      tags:
      - Teller Cash Management
      summary: Find Cashiers
      operationId: getCashierTemplate
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersTemplateResponse'
  /tellers/{tellerId}/cashiers/{cashierId}/allocate:
    post:
      tags:
      - Teller Cash Management
      summary: Allocate Cash To Cashier
      description: "Mandatory Fields: \nDate, Amount, Currency, Notes/Comments"
      operationId: allocateCashToCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateResponse'
      x-codegen-request-body-name: body
  /tellers/{tellerId}/cashiers/{cashierId}/settle:
    post:
      tags:
      - Teller Cash Management
      summary: Settle Cash From Cashier
      description: |-
        Mandatory Fields
        Date, Amount, Currency, Notes/Comments
      operationId: settleCashFromCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          text/html:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleResponse'
      x-codegen-request-body-name: body
  /tellers/{tellerId}/cashiers/{cashierId}/transactions:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve Cashier Transaction
      operationId: getTransactionsForCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        description: currencyCode
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsResponse'
  /tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions:
    get:
      tags:
      - Teller Cash Management
      summary: Transactions Wtih Summary For Cashier
      operationId: getTransactionsWtihSummaryForCashier
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      - name: currencyCode
        in: query
        description: currencyCode
        schema:
          type: string
      - name: offset
        in: query
        description: offset
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: limit
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        description: orderBy
        schema:
          type: string
      - name: sortOrder
        in: query
        description: sortOrder
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse'
  /tellers/{tellerId}/cashiers/{cashierId}/transactions/template:
    get:
      tags:
      - Teller Cash Management
      summary: Retrieve Cashier Transaction Template
      operationId: getCashierTxnTemplate
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: path
        description: cashierId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse'
  /tellers/{tellerId}/transactions:
    get:
      tags:
      - Teller Cash Management
      operationId: getTransactionData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: dateRange
        in: query
        description: dateRange
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/transactions/{transactionId}:
    get:
      tags:
      - Teller Cash Management
      operationId: findTransactionData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        description: transactionId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /tellers/{tellerId}/journals:
    get:
      tags:
      - Teller Cash Management
      operationId: getJournalData
      parameters:
      - name: tellerId
        in: path
        description: tellerId
        required: true
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: query
        description: cashierId
        schema:
          type: integer
          format: int64
      - name: dateRange
        in: query
        description: dateRange
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /cashiersjournal:
    get:
      tags:
      - cashiersjournal
      operationId: getJournalDataCashier
      parameters:
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: tellerId
        in: query
        schema:
          type: integer
          format: int64
      - name: cashierId
        in: query
        schema:
          type: integer
          format: int64
      - name: dateRange
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /workingdays/template:
    get:
      tags:
      - Working days
      summary: Working Days Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for working days.

        Example Request:

        workingdays/template
      operationId: templateWorkingDays
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWorkingDaysTemplateResponse'
  /workingdays:
    get:
      tags:
      - Working days
      summary: List Working days
      description: |-
        Example Requests:

        workingdays
      operationId: retrieveAllWorkingDays
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetWorkingDaysResponse'
    put:
      tags:
      - Working days
      summary: Update a Working Day
      description: |-
        Mandatory Fields
        recurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale
      operationId: updateWorkingDays
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWorkingDaysRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutWorkingDaysResponse'
      x-codegen-request-body-name: body
  /client/{clientid}/addresses:
    get:
      tags:
      - Clients Address
      summary: List all addresses for a Client
      description: |-
        Example Requests:

        client/1/addresses


        clients/1/addresses?status=false,true&&type=1,2,3
      operationId: getAddresses
      parameters:
      - name: status
        in: query
        schema:
          type: string
      - name: type
        in: query
        schema:
          type: integer
          format: int64
      - name: clientid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressData'
    put:
      tags:
      - Clients Address
      summary: update an address for a Client
      description: |-
        All the address fields can be updated by using update client address API

        Mandatory Fields
        type and addressId
      operationId: UpdateClientAddress
      parameters:
      - name: clientid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
    post:
      tags:
      - Clients Address
      summary: Create an address for a Client
      description: "Mandatory Fields : \ntype and clientId"
      operationId: AddClientAddress
      parameters:
      - name: type
        in: query
        schema:
          type: integer
          format: int64
      - name: clientid
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
      x-codegen-request-body-name: body
  /client/addresses/template:
    get:
      tags:
      - Clients Address
      operationId: getAddressesTemplate
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /clients/{clientId}/charges/{chargeId}:
    get:
      tags:
      - Client Charges
      summary: Retrieve a Client Charge
      description: |-
        Example Requests:
        clients/1/charges/1


        clients/1/charges/1?fields=name,id
      operationId: retrieveClientCharge
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientChargeData'
    post:
      tags:
      - Client Charges
      summary: Pay a Client Charge
      description: |
        Mandatory Fields
        transactionDate and amount "Pay either a part of or the entire due amount for a charge.(command=paycharge)

        Waive a Client Charge


        This API provides the facility of waiving off the remaining amount on a client charge (command=waive)
      operationId: payOrWaiveClientCharge
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Client Charges
      summary: Delete a Client Charge
      description: 'Deletes a Client Charge on which no transactions have taken place
        (either payments or waivers). '
      operationId: deleteClientCharge
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /clients/{clientId}/charges:
    get:
      tags:
      - Client Charges
      summary: List Client Charges
      description: |-
        The list capability of client charges supports pagination.Example Requests:
        clients/1/charges

        clients/1/charges?offset=0&limit=5
      operationId: retrieveAllClientCharges
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: chargeStatus
        in: query
        schema:
          type: string
          default: all
      - name: pendingPayment
        in: query
        schema:
          type: boolean
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCharge'
    post:
      tags:
      - Client Charges
      summary: Add Client Charge
      description: " This API associates a Client charge with an implicit Client account\n\
        Mandatory Fields : \nchargeId and dueDate  \nOptional Fields : \namount"
      operationId: applyClientCharge
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /clients/{clientId}/identifiers:
    get:
      tags:
      - Client Identifier Api
      summary: List all Identifiers for a Client
      description: |-
        Example Requests:
        clients/1/identifiers


        clients/1/identifiers?fields=documentKey,documentType,description
      operationId: retrieveAllClientIdentifiers
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientIdentifierData'
    post:
      tags:
      - Client Identifier Api
      summary: Create an Identifier for a Client
      description: "Mandatory Fields\ndocumentKey, documentTypeId "
      operationId: createClientIdentifier
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /clients/{clientId}/identifiers/{identifierId}:
    get:
      tags:
      - Client Identifier Api
      summary: Retrieve a Client Identifier
      description: |-
        Example Requests:
        clients/1/identifier/2


        clients/1/identifier/2?template=true

        clients/1/identifiers/2?fields=documentKey,documentType,description
      operationId: retrieveClientIdentifiers
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: identifierId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientIdentifierData'
    put:
      tags:
      - Client Identifier Api
      summary: Update a Client Identifier
      operationId: updateClientIdentifer
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: identifierId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
    delete:
      tags:
      - Client Identifier Api
      summary: Delete a Client Identifier
      operationId: deleteClientIdentifier
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: identifierId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /clients/{clientId}/transactions:
    get:
      tags:
      - Client Transaction
      summary: List Client Transactions
      description: "The list capability of client transaction can support pagination.\n\
        \nMandatory Arguments : offset\n    Integer Mandatory, defaults to 0 \n  \
        \  Indicates the result from which pagination starts\nlimit\n    Integer Mandatory,\
        \ defaults to 200 \n    Restricts the size of results returned. To override\
        \ the default and return all entries you must explicitly pass a non-positive\
        \ integer value for limit e.g. limit=0, or limit=-1\n\n\n\nExample Requests:\n\
        clients/189/transactions\nclients/189/transactions?offset=10&limit=50"
      operationId: retrieveAllClientTransactions
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTransactionData'
  /clients/{clientId}/transactions/{transactionId}:
    get:
      tags:
      - Client Transaction
      summary: Retrieve a Client Transaction
      description: |-
        Example Requests:
        clients/1/transactions/1


        clients/1/transactions/1?fields=id,officeName
      operationId: retrieveClientTransaction
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientTransactionData'
    post:
      tags:
      - Client Transaction
      summary: Undo a Client Transaction
      operationId: undoClientTransaction
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: transactionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /clients/{clientId}/accounts:
    get:
      tags:
      - Client Api
      summary: Retrieve client accounts overview
      description: "An example of how a loan portfolio summary can be provided. This\
        \ is requested in a specific use case of the community application.\nIt is\
        \ quite reasonable to add resources like this to simplify User Interface development.\n\
        \nExample Requests:\n \nclients/1/accounts\n\nclients/1/accounts?fields=loanAccounts,savingsAccounts"
      operationId: retrieveAssociatedAccounts
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountSummaryCollectionData'
        400:
          description: Bad Request
          content: {}
  /clients:
    get:
      tags:
      - Client Api
      summary: List Clients
      description: |-
        Example Requests:

        clients

        clients?fields=displayName,officeName,timeline

        clients?offset=10&limit=50

        clients?orderBy=displayName&sortOrder=DESC
      operationId: retrieveAllClients
      parameters:
      - name: sqlSearch
        in: query
        schema:
          type: string
      - name: officeId
        in: query
        schema:
          type: integer
          format: int64
      - name: externalId
        in: query
        schema:
          type: string
      - name: displayName
        in: query
        schema:
          type: string
      - name: firstName
        in: query
        schema:
          type: string
      - name: lastName
        in: query
        schema:
          type: string
      - name: underHierarchy
        in: query
        schema:
          type: string
      - name: offset
        in: query
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        schema:
          type: integer
          format: int32
      - name: orderBy
        in: query
        schema:
          type: string
      - name: sortOrder
        in: query
        schema:
          type: string
      - name: orphansOnly
        in: query
        schema:
          type: boolean
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientData'
    post:
      tags:
      - Client Api
      summary: Create a Client
      description: |-
        Note:
        1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional) OR fullname - for a business or organisation (or person known by one name).

        2.If address is enable(enable-address=true), then additional field called address has to be passed.
      operationId: createClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientData'
        required: true
      responses:
        200:
          description: Successfully Client Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
      x-codegen-request-body-name: body
  /clients/{clientId}:
    get:
      tags:
      - Client Api
      summary: Retrieve a Client
      description: |-
        Example Requests:

        clients/1


        clients/1?template=true


        clients/1?fields=id,displayName,officeName
      operationId: retrieveOneClient
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: staffInSelectedOfficeOnly
        in: query
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientData'
    put:
      tags:
      - Client Api
      summary: Update a Client
      description: |-
        You can update any of the basic attributes of a client (but not its associations) using this API.

        Changing the relationship between a client and its office is not supported through this API. An API specific to handling transfers of clients between offices is available for the same.

        The relationship between a client and a group must be removed through the Groups API.
      operationId: updateClient
      parameters:
      - name: clientId
        in: path
        description: ClientId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientData'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
      x-codegen-request-body-name: body
    post:
      tags:
      - Client Api
      summary: 'Activate a Client | Close a Client | Reject a Client | Withdraw a
        Client | Reactivate a Client | UndoReject a Client | UndoWithdraw a Client
        | Assign a Staff | Unassign a Staff | Update Default Savings Account | Propose
        a Client Transfer | Withdraw a Client Transfer | Reject a Client Transfer
        | Accept a Client Transfer | Propose and Accept a Client Transfer | '
      description: |2

        [Reject a Client] Mandatory Fields : rejectionDate, rejectionReasonId

        [Withdraw a Client] Mandatory Fields : withdrawalDate, withdrawalReasonId

        [Reactivate a Client] Mandatory Fields : reactivationDate

        [UndoReject a Client] Mandatory Fields : reopenedDate

        [UndoWithdraw a Client]Mandatory Fields :  reopenedDate
      operationId: activate
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - Client Api
      summary: Delete a Client
      description: If a client is in Pending state, you are allowed to Delete it.
        The delete is a 'hard delete' and cannot be recovered from. Once clients become
        active or have loans or savings associated with them, you cannot delete the
        client but you may Close the client if they have left the program.
      operationId: deleteClient
      parameters:
      - name: clientId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
  /clients/template:
    get:
      tags:
      - Client Api
      summary: Retrieve Client Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value ListsExample Request:

        clients/template
      operationId: retrieveTemplateClient
      parameters:
      - name: officeId
        in: query
        description: optional
        schema:
          type: integer
          format: int64
      - name: commandParam
        in: query
        description: optional If commandParam=close retrieves all closureReasons which
          are associated with "ClientClosureReason" value.
        schema:
          type: string
          default: "false"
      - name: staffInSelectedOfficeOnly
        in: query
        description: optional Defaults to false if not provided. If staffInSelectedOfficeOnly=true
          only staff who are associated with the selected branch are returned.
        schema:
          type: boolean
          default: false
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientData'
  /surveys/{surveyId}/lookuptables:
    get:
      tags:
      - SPM API - LookUp Table
      summary: List all Lookup Table entries
      description: List all Lookup Table entries for a survey.
      operationId: fetchLookupTables
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LookupTableData'
    post:
      tags:
      - SPM API - LookUp Table
      summary: Create a Lookup Table entry
      description: |-
        Add a new netry to a survey.

        Mandatory Fields
        key, score, validFrom, validTo
      operationId: createLookupTable
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupTableData'
        required: false
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: body
  /surveys/{surveyId}/lookuptables/{key}:
    get:
      tags:
      - SPM API - LookUp Table
      summary: Retrieve a Lookup Table entry
      description: Retrieve a Lookup Table entry for a survey.
      operationId: findLookupTable
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      - name: key
        in: path
        description: Enter key
        required: true
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTableData'
  /surveys/{surveyId}/scorecards:
    get:
      tags:
      - SPM - Scorecards
      summary: List all Scorecard entries
      description: List all Scorecard entries for a survey.
      operationId: findBySurvey
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scorecard'
    post:
      tags:
      - SPM - Scorecards
      summary: Create a Scorecard entry
      description: |-
        Add a new netry to a survey.

        Mandatory Fields
        clientId, createdOn, questionId, responseId, staffId
      operationId: createScorecard
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardData'
        required: false
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: body
  /surveys/{surveyId}/scorecards/clients/{clientId}:
    get:
      tags:
      - SPM - Scorecards
      operationId: findBySurveyClient
      parameters:
      - name: surveyId
        in: path
        description: Enter surveyId
        required: true
        schema:
          type: integer
          format: int64
      - name: clientId
        in: path
        description: Enter clientId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScorecardData'
  /surveys/{id}:
    get:
      tags:
      - SPM - Serveys
      summary: Retrieve a Survey
      operationId: findSurvey
      parameters:
      - name: id
        in: path
        description: Enter id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyData'
    delete:
      tags:
      - SPM - Serveys
      summary: Deactivate Survey
      operationId: deactivateSurvey
      parameters:
      - name: id
        in: path
        description: Enter id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: OK
          content: {}
  /surveys:
    get:
      tags:
      - SPM - Serveys
      summary: List all Surveys
      operationId: fetchActiveSurveys
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SurveyData'
    post:
      tags:
      - SPM - Serveys
      summary: Create a Survey
      description: |-
        Adds a new survey to collect client related data.

        Mandatory Fields

        countryCode, key, name, questions, responses, sequenceNo, text, value
      operationId: createSurvey
      requestBody:
        description: Create survey
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SurveyData'
        required: false
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: body
  /templates/{templateId}:
    get:
      tags:
      - User Generated Documents
      summary: Retrieve a UGD
      description: |-
        Example Requests:

        templates/1
      operationId: retrieveOneTemplateGet
      parameters:
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesTemplateIdResponse'
    put:
      tags:
      - User Generated Documents
      summary: Update a UGD
      operationId: saveTemplate
      parameters:
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTemplatesTemplateIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTemplatesTemplateIdResponse'
      x-codegen-request-body-name: body
    post:
      tags:
      - User Generated Documents
      operationId: mergeTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: false
      responses:
        200:
          description: successful operation
          content:
            text/html:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
      - User Generated Documents
      summary: Delete a UGD
      operationId: deleteTemplate
      parameters:
      - name: templateId
        in: path
        description: templateId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTemplatesTemplateIdResponse'
  /templates/{templateId}/template:
    get:
      tags:
      - User Generated Documents
      operationId: getTemplateByTemplate
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: string
  /templates/template:
    get:
      tags:
      - User Generated Documents
      summary: Retrieve UGD Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for UGDs. The UGD data returned consists of any or all of:

        ARGUMENTS
        name String entity String type String text String optional mappers Mapper optional
        Example Request:

        templates/template
      operationId: templatesGetAllReq
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesTemplateResponse'
  /templates:
    get:
      tags:
      - User Generated Documents
      summary: Retrieve all UGDs
      description: |-
        Example Requests:

        templates

        It is also possible to get specific UGDs by entity and type:

        templates?type=0&entity=0
        [Entity: Id]





        client: 0, loan: 1

        [Type: Id]



        Document: 0, E-Mail (not yet): 1,  SMS: 2
      operationId: retrieveAllTemplatesGetStar
      parameters:
      - name: typeId
        in: query
        description: typeId
        schema:
          type: integer
          format: int32
          default: -1
      - name: entityId
        in: query
        description: entityId
        schema:
          type: integer
          format: int32
          default: -1
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTemplatesResponse'
    post:
      tags:
      - User Generated Documents
      summary: Add a UGD
      description: |-
        Adds a new UGD.

        Mandatory Fields
        name



        Example Requests:

        templates/1
      operationId: createTemplate
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTemplatesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTemplatesResponse'
      x-codegen-request-body-name: body
  /passwordpreferences:
    get:
      tags:
      - Password preferences
      operationId: retrieve
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
    put:
      tags:
      - Password preferences
      summary: Update password preferences
      operationId: updatePassPref
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPasswordPreferencesTemplateRequest'
        required: true
      responses:
        200:
          description: ""
          content: {}
      x-codegen-request-body-name: body
  /passwordpreferences/template:
    get:
      tags:
      - Password preferences
      summary: List Application Password validation policies
      description: |-
        ARGUMENTS
        Example Requests:

        passwordpreferences
      operationId: templatePassword
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
  /permissions:
    get:
      tags:
      - Permissions
      summary: List Application Permissions
      description: |-
        ARGUMENTS
        makerCheckerableoptional, Values are true, false. Default is false.
        If makerCheckerable=false or not supplied then a list of application permissions is returned. The "selected" attribute is always true in this case.

        If makerCheckerable=true then the "selected" attribute shows whether the permission is enabled for Maker Check functionality.

        Note: Each Apache Fineract transaction is associated with a permission.

        Example Requests:

        permissions


        permissions?makerCheckerable=true


        permissions?fields=grouping,code
      operationId: retrieveAllPermissions
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetPermissionsResponse'
    put:
      tags:
      - Permissions
      summary: Enable/Disable Permissions for Maker Checker
      operationId: updatePermissionsDetails
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutPermissionsRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommandProcessingResult'
      x-codegen-request-body-name: body
  /roles:
    get:
      tags:
      - Roles
      summary: List Roles
      description: |-
        Example Requests:

        roles


        roles?fields=name
      operationId: retrieveAllRoles
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetRolesResponse'
    post:
      tags:
      - Roles
      summary: Create a New Role
      description: |-
        Mandatory Fields
        name, description
      operationId: createRole
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRolesRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRolesResponse'
      x-codegen-request-body-name: body
  /roles/{roleId}:
    get:
      tags:
      - Roles
      summary: Retrieve a Role
      description: |-
        Example Requests:

        roles/1


        roles/1?fields=name
      operationId: retrieveRole
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRolesRoleIdResponse'
    put:
      tags:
      - Roles
      summary: Update a Role
      operationId: updateRole
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRolesRoleIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRolesRoleIdResponse'
      x-codegen-request-body-name: body
    post:
      tags:
      - Roles
      summary: Enable Role | Disable Role
      description: |-
        Description : Enable role in case role is disabled. | Disable the role in case role is not associated with any users.





        Example Request:   https://DomainName/api/v1/roles/{roleId}?command=enable





        https://DomainName/api/v1/roles/{roleId}?command=disable
      operationId: actionsOnRoles
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      - name: command
        in: query
        description: command
        schema:
          type: string
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRolesRoleIdResponse'
    delete:
      tags:
      - Roles
      summary: Delete a Role
      description: 'Description : Delete the role in case role is not associated with
        any users.'
      operationId: deleteRole
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRolesRoleIdResponse'
  /roles/{roleId}/permissions:
    get:
      tags:
      - Roles
      summary: Retrieve a Role's Permissions
      description: |-
        Example Requests:

        roles/1/permissions
      operationId: retrieveRolePermissions
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponse'
    put:
      tags:
      - Roles
      summary: Update a Role's Permissions
      operationId: updateRolePermissions
      parameters:
      - name: roleId
        in: path
        description: roleId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRolesRoleIdPermissionsRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutRolesRoleIdPermissionsResponse'
      x-codegen-request-body-name: body
  /users/template:
    get:
      tags:
      - Users
      summary: Retrieve User Details Template
      description: |-
        This is a convenience resource. It can be useful when building maintenance user interface screens for client applications. The template data returned consists of any or all of:

        Field Defaults
        Allowed Value Lists
        Example Request:

        users/template
      operationId: templateUsersGet
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersTemplateResponse'
  /users:
    get:
      tags:
      - Users
      summary: Retrieve list of users
      description: |-
        Example Requests:

        users


        users?fields=id,username,email,officeName
      operationId: retrieveAllUsers
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUsersResponse'
    post:
      tags:
      - Users
      summary: Create a User
      description: "Adds new application user.\n\nNote: Password information is not\
        \ required (or processed). Password details at present are auto-generated\
        \ and then sent to the email account given (which is why it can take a few\
        \ seconds to complete).\n\nMandatory Fields: \nusername, firstname, lastname,\
        \ email, officeId, roles, sendPasswordToEmail\n\nOptional Fields: \nstaffId,passwordNeverExpires,isSelfServiceUser,clients"
      operationId: createUser
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUsersRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUsersResponse'
      x-codegen-request-body-name: body
  /users/{userId}:
    get:
      tags:
      - Users
      summary: Retrieve a User
      description: |-
        Example Requests:

        users/1


        users/1?template=true


        users/1?fields=username,officeName
      operationId: retrieveOneUser
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUsersUserIdResponse'
    put:
      tags:
      - Users
      summary: Update a User
      description: When updating a password you must provide the repeatPassword parameter
        also.
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUsersUserIdRequest'
        required: true
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutUsersUserIdResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
      - Users
      summary: Delete a User
      description: Removes the user and the associated roles and permissions.
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        description: userId
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsersUserIdResponse'
components:
  schemas:
    runaccrualsRequest:
      required:
      - tillDate
      type: object
      properties:
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        tillDate:
          type: string
          example: 04 June 2014
    GetGLClosureResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 7
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        closingDate:
          type: string
          format: date
        deleted:
          type: boolean
          example: false
        createdDate:
          type: string
          format: date
        lastUpdatedDate:
          type: string
          format: date
        createdByUserId:
          type: integer
          format: int64
          example: 1
        createdByUsername:
          type: string
          example: mifos
        lastUpdatedByUserId:
          type: integer
          format: int64
          example: 1
        lastUpdatedByUsername:
          type: string
          example: mifos
        comments:
          type: string
          example: closed
    PostGlClosuresResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
    PostGLCLosuresRequest:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        closingDate:
          type: string
          format: date
        comments:
          type: string
          example: The accountants are heading for a carribean vacation
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
    PutGlClosuresResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
        comments:
          type: string
          example: All transactions verified by Johnny Cash
    PutGlClosuresRequest:
      type: object
      properties:
        comments:
          type: string
          example: All transactions verified by Johnny Cash
    DeleteGlClosuresResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 9
    PostFinancialActivityAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostFinancialActivityAccountsRequest:
      type: object
      properties:
        financialActivityId:
          type: integer
          format: int64
          example: 200
        glAccountId:
          type: integer
          format: int64
          example: 2
    PutFinancialActivityAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        comments:
          $ref: '#/components/schemas/PutFinancialActivityAccountscommentsSwagger'
    PutFinancialActivityAccountscommentsSwagger:
      type: object
      properties:
        glAccountId:
          type: integer
          format: int64
          example: 1
    DeleteFinancialActivityAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    EnumOptionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        code:
          type: string
        value:
          type: string
    FinancialActivityData:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        mappedGLAccountType:
          type: string
          enum:
          - ASSET
          - LIABILITY
          - EQUITY
          - INCOME
          - EXPENSE
    GLAccountData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        glCode:
          type: string
        type:
          $ref: '#/components/schemas/EnumOptionData'
        typeId:
          type: integer
          format: int32
    GetFinancialActivityAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        financialActivityData:
          $ref: '#/components/schemas/FinancialActivityData'
        glAccountData:
          $ref: '#/components/schemas/GLAccountData'
    CodeValueData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        active:
          type: boolean
        mandatory:
          type: boolean
    GetGLAccountsTemplateResponse:
      type: object
      properties:
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        usageOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        assetHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        liabilityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        equityHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        expenseHeaderAccountOptions:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
        allowedAssetsTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedLiabilitiesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedEquityTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedIncomeTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
        allowedExpensesTagOptions:
          type: array
          items:
            $ref: '#/components/schemas/CodeValueData'
    GetGLAccountsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 16
        name:
          type: string
          example: Cash
        parentId:
          type: integer
          format: int64
          example: 1
        glCode:
          type: string
          example: "100001"
        disabled:
          type: boolean
          example: false
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          $ref: '#/components/schemas/EnumOptionData'
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        description:
          type: string
          example: Desc
        nameDecorated:
          type: string
          example: '....Cash'
        tagId:
          $ref: '#/components/schemas/CodeValueData'
        organizationRunningBalance:
          type: integer
          format: int64
          example: 118437
    PostGLAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 22
    PostGLAccountsRequest:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
        glCode:
          type: string
          example: "100001"
        manualEntriesAllowed:
          type: boolean
          example: true
        type:
          type: string
          example: "1"
        tagId:
          type: string
          example: "10"
        parentId:
          type: integer
          format: int64
          example: 1
        usage:
          $ref: '#/components/schemas/EnumOptionData'
        description:
          type: string
          example: Desc
    PutGLAccountsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
        changes:
          $ref: '#/components/schemas/PutGLAccountsResponsechangesSwagger'
    PutGLAccountsResponsechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
    PutGLAccountsRequest:
      type: object
      properties:
        name:
          type: string
          example: Cash at Bangalore
    DeleteGLAccountsRequest:
      type: object
      properties:
        resourceId:
          type: integer
          format: int32
          example: 1
    JournalEntryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        glAccountId:
          type: integer
          format: int64
        glAccountType:
          $ref: '#/components/schemas/EnumOptionData'
        entryType:
          $ref: '#/components/schemas/EnumOptionData'
        amount:
          type: number
        transactionId:
          type: string
    PostJournalEntriesResponse:
      type: object
      properties:
        officeId:
          type: integer
          description: "1"
          format: int64
        transactionId:
          type: string
          description: RS9MCISID4WK1ZM
    JournalEntryCommand:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        transactionDate:
          type: string
          format: date
        comments:
          type: string
        referenceNumber:
          type: string
        accountingRuleId:
          type: integer
          format: int64
        credits:
          type: array
          items:
            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
        debits:
          type: array
          items:
            $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
    SingleDebitOrCreditEntryCommand:
      type: object
      properties:
        glAccountId:
          type: integer
          format: int64
        amount:
          type: number
        comments:
          type: string
        parametersPassedInRequest:
          uniqueItems: true
          type: array
          items:
            type: string
        commentsChanged:
          type: boolean
        glAmountChanged:
          type: boolean
        glAccountIdChanged:
          type: boolean
    PostJournalEntriesTransactionIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          description: "1"
          format: int64
    PostJournalEntriesTransactionIdRequest:
      type: object
      properties:
        officeId:
          type: integer
          description: "1"
          format: int64
    PostProvisioningEntriesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostProvisioningEntriesRequest:
      type: object
      properties:
        date:
          type: string
          example: 16 October 2015
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
        createjournalentries:
          type: string
          example: "true"
        provisioningentry:
          type: string
        entries:
          type: string
    PutProvisioningEntriesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutProvisioningEntriesRequest:
      type: object
      properties:
        command:
          type: string
          example: recreateprovisioningentry
    ProvisioningEntryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdDate:
          type: string
          format: date-time
    LoanProductProvisioningEntryData:
      type: object
      properties:
        historyId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        currencyCode:
          type: string
        productId:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        overdueInDays:
          type: integer
          format: int64
        percentage:
          type: number
        liablityAccount:
          type: integer
          format: int64
        expenseAccount:
          type: integer
          format: int64
        criteriaId:
          type: integer
          format: int64
        outstandingBalance:
          type: number
    AccountingTagRuleData:
      type: object
      properties:
        tag:
          $ref: '#/components/schemas/CodeValueData'
    GetAccountRulesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        name:
          type: string
        description:
          type: string
        systemDefined:
          type: boolean
        allowMultipleDebitEntries:
          type: boolean
        allowMultipleCreditEntries:
          type: boolean
        creditTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        debitTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
    AccountingRuleData:
      type: object
      properties:
        creditTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
        debitTags:
          type: array
          items:
            $ref: '#/components/schemas/AccountingTagRuleData'
    PostAccountingRulesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PostAccountingRulesRequest:
      type: object
      properties:
        name:
          type: string
          example: test
        officeId:
          type: integer
          format: int64
          example: 1
        accountToDebit:
          type: integer
          format: int64
          example: 21
        accountToCredit:
          type: integer
          format: int64
          example: 9
        description:
          type: string
          example: Employee salary
    PutAccountingRulesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutAccountingRulesResponsechangesSwagger'
    PutAccountingRulesResponsechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Employee Salary posting rule
    PutAccountingRulesRequest:
      type: object
      properties:
        name:
          type: string
          example: Employee Salary posting rule
    DeleteAccountingRulesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    GetAccountRulesTemplateResponse:
      type: object
      properties:
        systemDefined:
          type: boolean
          example: false
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        allowedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/GLAccountData'
    OfficeData:
      type: object
      properties:
        hierarchy:
          type: string
    BatchResponse:
      type: object
      properties:
        requestId:
          type: integer
          format: int64
        statusCode:
          type: integer
          format: int32
        headers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Header'
        body:
          type: string
    Header:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    PostBatchesRequest:
      type: object
      properties:
        requestId:
          type: integer
          format: int64
          example: 1
        relativeUrl:
          type: string
          example: clients
        method:
          type: string
          example: POST
        headers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Header'
        reference:
          type: integer
          format: int64
          example: 1
        body:
          $ref: '#/components/schemas/PostBodyRequestSwagger'
    PostBodyRequestSwagger:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        firstname:
          type: string
          example: '"Petra"'
        lastname:
          type: string
          example: '"Yton"'
        externalId:
          type: string
          example: '"ex_externalId1"'
        dateFormat:
          type: string
          example: '"dd MMMM yyyy"'
        locale:
          type: string
          example: '"en"'
        active:
          type: boolean
          example: true
        activationDate:
          type: string
          example: '"04 March 2009"'
        submittedOnDate:
          type: string
          example: '"04 March 2009"'
    GetMakerCheckerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        actionName:
          type: string
        entityName:
          type: string
        resourceId:
          type: integer
          format: int64
        subresourceId:
          type: integer
          format: int64
        maker:
          type: string
        madeOnDate:
          type: string
          format: date-time
        checker:
          type: string
        checkedOnDate:
          type: string
          format: date-time
        processingResult:
          type: string
        commandAsJson:
          type: string
        officeName:
          type: string
        groupLevelName:
          type: string
        groupName:
          type: string
        clientName:
          type: string
        loanAccountNo:
          type: string
        savingsAccountNo:
          type: string
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        url:
          type: string
    AppUserData:
      type: object
      properties:
        selfServiceUser:
          type: boolean
    GetMakerCheckersSearchTemplateResponse:
      type: object
      properties:
        appUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppUserData'
        actionNames:
          type: array
          items:
            type: string
        entityNames:
          type: array
          items:
            type: string
        processingResults:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingResultLookup'
    ProcessingResultLookup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        processingResult:
          type: string
    PostMakerCheckersResponse:
      type: object
      properties:
        auditId:
          type: integer
          format: int64
          example: 1
    GetAccountNumberFormatsIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        accountType:
          $ref: '#/components/schemas/EnumOptionData'
        prefixType:
          $ref: '#/components/schemas/EnumOptionData'
    GetAccountNumberFormatsResponseTemplate:
      type: object
      properties:
        accountTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        prefixTypeOptions:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/EnumOptionData'
    PutAccountNumberFormatsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 2
        changes:
          $ref: '#/components/schemas/PutAccountNumberFormatschangesSwagger'
    PutAccountNumberFormatschangesSwagger:
      type: object
      properties:
        prefixType:
          type: integer
          format: int64
    PutAccountNumberFormatsRequest:
      type: object
      properties:
        prefixType:
          type: integer
          format: int64
          example: 1
    DeleteAccountNumberFormatsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 2
    PostAccountNumberFormatsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostAccountNumberFormatsRequest:
      type: object
      properties:
        accountType:
          type: integer
          format: int64
          example: 1
        prefixType:
          type: integer
          format: int64
          example: 101
    PutCachechangesSwagger:
      type: object
      properties:
        cacheType:
          type: integer
          format: int64
          example: 2
    PutCachesResponse:
      type: object
      properties:
        cacheType:
          $ref: '#/components/schemas/PutCachechangesSwagger'
    PutCachesRequest:
      type: object
      properties:
        cacheType:
          type: integer
          format: int64
          example: 2
    GetCachesResponse:
      type: object
      properties:
        cacheType:
          $ref: '#/components/schemas/EnumOptionData'
        enabled:
          type: boolean
    CommandWrapper:
      type: object
      properties:
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        entityName:
          type: string
        taskPermissionName:
          type: string
        entityId:
          type: integer
          format: int64
        subentityId:
          type: integer
          format: int64
        href:
          type: string
        json:
          type: string
        transactionId:
          type: string
        productId:
          type: integer
          format: int64
        creditBureauId:
          type: integer
          format: int64
        organisationCreditBureauId:
          type: integer
          format: int64
        create:
          type: boolean
        createDatatable:
          type: boolean
        deleteDatatable:
          type: boolean
        updateDatatable:
          type: boolean
        datatableResource:
          type: boolean
        deleteOneToOne:
          type: boolean
        deleteMultiple:
          type: boolean
        updateOneToOne:
          type: boolean
        updateMultiple:
          type: boolean
        registerDatatable:
          type: boolean
        noteResource:
          type: boolean
        cacheResource:
          type: boolean
        updateOperation:
          type: boolean
        delete:
          type: boolean
        deleteOperation:
          type: boolean
        surveyResource:
          type: boolean
        registerSurvey:
          type: boolean
        fullFilSurvey:
          type: boolean
        workingDaysResource:
          type: boolean
        passwordPreferencesResource:
          type: boolean
        permissionResource:
          type: boolean
        userResource:
          type: boolean
        currencyResource:
          type: boolean
        loanDisburseDetailResource:
          type: boolean
        updateDisbursementDate:
          type: boolean
        update:
          type: boolean
    GetCodeValuesDataResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
    PostCodeValueDataResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostCodeValuesDataRequest:
      type: object
      properties:
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
    PutCodeValueDataResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutCodeValuechangesSwagger'
    PutCodeValuechangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
    PutCodeValuesDataRequest:
      type: object
      properties:
        name:
          type: string
          example: Passport
        description:
          type: string
          example: Passport information
        position:
          type: integer
          format: int32
          example: 0
    DeleteCodeValueDataResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    GetCodesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Education
        systemDefined:
          type: boolean
          example: true
    PostCodesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostCodesRequest:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode
    PutCodesApichangesSwagger:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode(changed)
    PutCodesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutCodesApichangesSwagger'
    PutCodesRequest:
      type: object
      properties:
        name:
          type: string
          example: MyNewCode(changed)
    DeleteCodesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PutExternalServiceRequest:
      type: object
      properties:
        username:
          type: string
          example: test@mifos.org
        password:
          type: string
          example: XXXX
    ExternalServicesPropertiesData:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    GetGlobalConfigurationsResponse:
      type: object
      properties:
        globalConfiguration:
          type: array
          items:
            $ref: '#/components/schemas/GlobalConfigurationPropertyData'
    GlobalConfigurationPropertyData:
      type: object
      properties:
        name:
          type: string
        enabled:
          type: boolean
        value:
          type: integer
          format: int64
        dateValue:
          type: string
          format: date-time
        id:
          type: integer
          format: int64
        description:
          type: string
        trapDoor:
          type: boolean
    PutGlobalConfigurationsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutGlobalConfigurationsResponsechangesSwagger'
    PutGlobalConfigurationsResponsechangesSwagger:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
    PutGlobalConfigurationsRequest:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
        value:
          type: integer
          format: int64
          example: 2
    PutDataTablesResponse:
      type: object
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
    PutDataTablesRequest:
      type: object
      properties:
        appTableName:
          type: string
          example: m_client
        dropColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestDropColumns'
        addColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestAddColumns'
        ChangeColumns:
          type: array
          items:
            $ref: '#/components/schemas/PutDataTablesRequestChangeColumns'
    PutDataTablesRequestAddColumns:
      type: object
      properties:
        name:
          type: string
          example: Question
        type:
          type: string
          example: Dropdown
        code:
          type: string
          example: Gender
        mandatory:
          type: boolean
          example: true
    PutDataTablesRequestChangeColumns:
      type: object
      properties:
        name:
          type: string
          example: Question
        newName:
          type: string
          example: Question 2
        code:
          type: string
          example: Gender
        newCode:
          type: string
          example: Gender2
        mandatory:
          type: boolean
          example: true
    PutDataTablesRequestDropColumns:
      type: object
      properties:
        name:
          type: string
          example: Gender_cd_Question
    GetDataTablesResponse:
      type: object
      properties:
        appTableName:
          type: string
          example: m_client
        datatableName:
          type: string
          example: extra_client_details
        column:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
    ResultsetColumnHeaderData:
      type: object
      properties:
        columnName:
          type: string
        columnType:
          type: string
        columnLength:
          type: integer
          format: int64
        columnDisplayType:
          type: string
        columnCode:
          type: string
        dateDisplayType:
          type: boolean
        dateTimeDisplayType:
          type: boolean
        integerDisplayType:
          type: boolean
        decimalDisplayType:
          type: boolean
        booleanDisplayType:
          type: boolean
        codeValueDisplayType:
          type: boolean
        codeLookupDisplayType:
          type: boolean
        string:
          type: boolean
        mandatory:
          type: boolean
        optional:
          type: boolean
    PostDataTablesResponse:
      type: object
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
    PostDataTablesRequest:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        registeredTableName:
          type: string
          example: extra_client_details
        multiRow:
          type: boolean
          example: true
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
    DeleteDataTablesResponse:
      type: object
      properties:
        resourceIdentifier:
          type: string
          example: extra_client_details
    PostDataTablesRegisterDatatableAppTable:
      type: object
    GetDataTablesAppTableIdResponse:
      type: object
      properties:
        columnHeaders:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetRowData'
    ResultsetRowData:
      type: object
      properties:
        row:
          type: array
          items:
            type: string
    PostDataTablesAppTableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostDataTablesAppTableIdRequest:
      type: object
      properties:
        BusinessDescription:
          type: string
          example: Livestock sales
        Comment:
          type: string
          example: First comment made
        Education_cv:
          type: string
          example: Primary
        Gender_cd:
          type: integer
          format: int64
          example: 6
        HighestRatePaid:
          type: number
          format: double
          example: 8.5
        NextVisit:
          type: string
          example: 01 October 2012
        YearsinBusiness:
          type: integer
          format: int64
          example: 5
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
    PutDataTablesAppTableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutDataTablesAppTableIdResponseChanges'
    PutDataTablesAppTableIdResponseChanges:
      type: object
      properties:
        BusinessDescription:
          type: string
          example: Livestock sales updated
    PutDataTablesAppTableIdRequest:
      type: object
      properties:
        BusinessDescription:
          type: string
          example: Livestock sales updated
    PutDataTablesAppTableIdDatatableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutDataTablesAppTableIdDatatableIdRequest:
      type: object
      properties:
        DateOfBirth:
          type: string
          example: 01 June 1982
        Education_cdHighest:
          type: integer
          format: int64
          example: 5
        Name:
          type: string
          example: June
        OtherNotes:
          type: string
          example: More notes
        PointsScore:
          type: integer
          format: int64
          example: 20
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
    DeleteDataTablesDatatableAppTableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteDataTablesDatatableAppTableIdDatatableIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteEntityDatatableChecksTemplateResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostEntityDatatableChecksTemplateResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostEntityDatatableChecksTemplateRequest:
      type: object
      properties:
        entity:
          type: string
          example: m_loan
        status:
          type: integer
          format: int64
          example: 100
        datatableName:
          type: string
          example: Additional Details
        productId:
          type: integer
          format: int64
          example: 1
    GetEntityDatatableChecksResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        entity:
          type: string
        status:
          $ref: '#/components/schemas/EnumOptionData'
        datatableName:
          type: string
        systemDefined:
          type: boolean
        order:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
        productName:
          type: string
    AppUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        password:
          type: string
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        credentialsNonExpired:
          type: boolean
        enabled:
          type: boolean
        deleted:
          type: boolean
        office:
          $ref: '#/components/schemas/Office'
        staff:
          $ref: '#/components/schemas/Staff'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        lastTimePasswordUpdated:
          type: string
          format: date-time
        passwordNeverExpires:
          type: boolean
        appUserClientMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/AppUserClientMapping'
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        selfServiceUser:
          type: boolean
        staffId:
          type: integer
          format: int64
        staffDisplayName:
          type: string
        notEnabled:
          type: boolean
        new:
          type: boolean
    AppUserClientMapping:
      type: object
      properties:
        id:
          type: integer
          format: int64
        client:
          $ref: '#/components/schemas/Client'
        new:
          type: boolean
    Charge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        amount:
          type: number
        currencyCode:
          type: string
        chargeTimeType:
          type: integer
          format: int32
        chargeCalculation:
          type: integer
          format: int32
        chargePaymentMode:
          type: integer
          format: int32
        feeInterval:
          type: integer
          format: int32
        penalty:
          type: boolean
        active:
          type: boolean
        deleted:
          type: boolean
        minCap:
          type: number
        maxCap:
          type: number
        account:
          $ref: '#/components/schemas/GLAccount'
        taxGroup:
          $ref: '#/components/schemas/TaxGroup'
        feeOnMonthDay:
          $ref: '#/components/schemas/MonthDay'
        savingsCharge:
          type: boolean
        annualFee:
          type: boolean
        monthlyFee:
          type: boolean
        overdueInstallment:
          type: boolean
        allowedLoanChargeTime:
          type: boolean
        allowedClientChargeTime:
          type: boolean
        allowedSavingsChargeTime:
          type: boolean
        loanCharge:
          type: boolean
        clientCharge:
          type: boolean
        allowedSavingsChargeCalculationType:
          type: boolean
        allowedClientChargeCalculationType:
          type: boolean
        percentageOfApprovedAmount:
          type: boolean
        percentageOfDisbursementAmount:
          type: boolean
        disbursementCharge:
          type: boolean
        new:
          type: boolean
    ChargeData:
      type: object
      properties:
        penalty:
          type: boolean
        overdueInstallmentCharge:
          type: boolean
    Chronology:
      type: object
      properties:
        zone:
          $ref: '#/components/schemas/DateTimeZone'
    Client:
      type: object
      properties:
        id:
          type: integer
          format: int64
        office:
          $ref: '#/components/schemas/Office'
        transferToOffice:
          $ref: '#/components/schemas/Office'
        image:
          $ref: '#/components/schemas/Image'
        status:
          type: integer
          format: int32
        firstname:
          type: string
        middlename:
          type: string
        lastname:
          type: string
        displayName:
          type: string
        externalId:
          type: string
        staff:
          $ref: '#/components/schemas/Staff'
        groups:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Group'
        accountNumberRequiresAutoGeneration:
          type: boolean
        closureDate:
          type: string
          format: date
        withdrawalDate:
          type: string
          format: date
        submittedOnDate:
          type: string
          format: date
        legalForm:
          type: integer
          format: int32
        reopenedDate:
          type: string
          format: date
        active:
          type: boolean
        closed:
          type: boolean
        rejected:
          type: boolean
        rejectedDate:
          type: string
          format: date
        notActive:
          type: boolean
        pending:
          type: boolean
        withdrawn:
          type: boolean
        transferInProgress:
          type: boolean
        transferOnHold:
          type: boolean
        transferInProgressOrOnHold:
          type: boolean
        notPending:
          type: boolean
        activationLocalDate:
          type: string
          format: date
        officeJoiningLocalDate:
          type: string
          format: date
        notStaff:
          type: boolean
        new:
          type: boolean
    CurrencyData:
      type: object
    DatatableCheckStatusData:
      type: object
    DatatableChecksData:
      type: object
    DateTimeField:
      type: object
      properties:
        durationField:
          $ref: '#/components/schemas/DurationField'
        minimumValue:
          type: integer
          format: int32
        maximumValue:
          type: integer
          format: int32
        leapDurationField:
          $ref: '#/components/schemas/DurationField'
        rangeDurationField:
          $ref: '#/components/schemas/DurationField'
        lenient:
          type: boolean
        name:
          type: string
        type:
          $ref: '#/components/schemas/DateTimeFieldType'
        supported:
          type: boolean
    DateTimeFieldType:
      type: object
      properties:
        rangeDurationType:
          $ref: '#/components/schemas/DurationFieldType'
        durationType:
          $ref: '#/components/schemas/DurationFieldType'
        name:
          type: string
    DateTimeZone:
      type: object
      properties:
        fixed:
          type: boolean
        id:
          type: string
    DurationField:
      type: object
      properties:
        precise:
          type: boolean
        unitMillis:
          type: integer
          format: int64
        name:
          type: string
        type:
          $ref: '#/components/schemas/DurationFieldType'
        supported:
          type: boolean
    DurationFieldType:
      type: object
      properties:
        name:
          type: string
    FloatingRate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        floatingRatePeriods:
          type: array
          items:
            $ref: '#/components/schemas/FloatingRatePeriod'
        createdBy:
          $ref: '#/components/schemas/AppUser'
        modifiedBy:
          $ref: '#/components/schemas/AppUser'
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        active:
          type: boolean
        baseLendingRate:
          type: boolean
        new:
          type: boolean
    FloatingRatePeriod:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fromDate:
          type: string
          format: date-time
        interestRate:
          type: number
        createdBy:
          $ref: '#/components/schemas/AppUser'
        modifiedBy:
          $ref: '#/components/schemas/AppUser'
        createdOn:
          type: string
          format: date-time
        modifiedOn:
          type: string
          format: date-time
        active:
          type: boolean
        floatingRatesId:
          $ref: '#/components/schemas/FloatingRate'
        differentialToBaseLendingRate:
          type: boolean
        new:
          type: boolean
    FundData:
      type: object
    GLAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        children:
          type: array
          items:
            $ref: '#/components/schemas/GLAccount'
        name:
          type: string
        glCode:
          type: string
        disabled:
          type: boolean
        manualEntriesAllowed:
          type: boolean
        type:
          type: integer
          format: int32
        usage:
          type: integer
          format: int32
        headerAccount:
          type: boolean
        detailAccount:
          type: boolean
        new:
          type: boolean
    GetEntityDatatableChecksTemplateResponse:
      type: object
      properties:
        entities:
          type: array
          items:
            type: string
        statusClient:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusGroup:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusSavings:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        statusLoans:
          type: array
          items:
            $ref: '#/components/schemas/DatatableCheckStatusData'
        datatables:
          type: array
          items:
            $ref: '#/components/schemas/DatatableChecksData'
        loanProductDatas:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        savingsProductDatas:
          type: array
          items:
            $ref: '#/components/schemas/SavingsProductData'
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    Group:
      type: object
      properties:
        id:
          type: integer
          format: int64
        office:
          $ref: '#/components/schemas/Office'
        staff:
          $ref: '#/components/schemas/Staff'
        parent:
          $ref: '#/components/schemas/Group'
        groupLevel:
          $ref: '#/components/schemas/GroupLevel'
        clientMembers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Client'
        submittedOnDate:
          type: string
          format: date
        accountNumberRequiresAutoGeneration:
          type: boolean
        active:
          type: boolean
        closed:
          type: boolean
        activeClientMembers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Client'
        childGroup:
          type: boolean
        notActive:
          type: boolean
        pending:
          type: boolean
        transferInProgress:
          type: boolean
        transferOnHold:
          type: boolean
        group:
          type: boolean
        center:
          type: boolean
        transferInProgressOrOnHold:
          type: boolean
        notPending:
          type: boolean
        activationLocalDate:
          type: string
          format: date
        new:
          type: boolean
    GroupLevel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        parentId:
          type: integer
          format: int64
        superParent:
          type: boolean
        levelName:
          type: string
        recursable:
          type: boolean
        group:
          type: boolean
        center:
          type: boolean
        new:
          type: boolean
    Image:
      type: object
      properties:
        id:
          type: integer
          format: int64
        location:
          type: string
        storageType:
          type: integer
          format: int32
        new:
          type: boolean
    LoanProduct:
      type: object
      properties:
        id:
          type: integer
          format: int64
        shortName:
          type: string
        loanProductRelatedDetail:
          $ref: '#/components/schemas/LoanProductRelatedDetail'
        includeInBorrowerCycle:
          type: boolean
        startDate:
          type: string
          format: date
        closeDate:
          type: string
          format: date
        externalId:
          type: string
        minimumDaysBetweenDisbursalAndFirstRepayment:
          type: integer
          format: int32
        productInterestRecalculationDetails:
          $ref: '#/components/schemas/LoanProductInterestRecalculationDetails'
        loanProductGuaranteeDetails:
          $ref: '#/components/schemas/LoanProductGuaranteeDetails'
        principalThresholdForLastInstallment:
          type: number
        installmentAmountInMultiplesOf:
          type: integer
          format: int32
        floatingRates:
          $ref: '#/components/schemas/LoanProductFloatingRates'
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        accountingType:
          type: integer
          format: int32
        accrualBasedAccountingEnabled:
          type: boolean
        minNominalInterestRatePerPeriod:
          type: number
        maxNominalInterestRatePerPeriod:
          type: number
        minNumberOfRepayments:
          type: integer
          format: int32
        maxNumberOfRepayments:
          type: integer
          format: int32
        repaymentStrategy:
          $ref: '#/components/schemas/LoanTransactionProcessingStrategy'
        loanProductCharges:
          type: array
          items:
            $ref: '#/components/schemas/Charge'
        loanProductConfigurableAttributes:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        principalAmount:
          $ref: '#/components/schemas/Money'
        minPrincipalAmount:
          $ref: '#/components/schemas/Money'
        maxPrincipalAmount:
          $ref: '#/components/schemas/Money'
        arrearsBasedOnOriginalSchedule:
          type: boolean
        multiDisburseLoan:
          type: boolean
        interestRecalculationEnabled:
          type: boolean
        numberOfRepayments:
          type: integer
          format: int32
        nominalInterestRatePerPeriod:
          type: number
        interestPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - INVALID
        linkedToFloatingInterestRate:
          type: boolean
        cashBasedAccountingEnabled:
          type: boolean
        upfrontAccrualAccountingEnabled:
          type: boolean
        accountingDisabled:
          type: boolean
        periodicAccrualAccountingEnabled:
          type: boolean
        holdGuaranteeFundsEnabled:
          type: boolean
        new:
          type: boolean
    LoanProductBorrowerCycleVariationData:
      type: object
      properties:
        borrowerCycleNumber:
          type: integer
          format: int32
        paramType:
          type: string
          enum:
          - INVALID
          - PRINCIPAL
          - INTERESTRATE
          - REPAYMENT
        valueConditionType:
          type: string
          enum:
          - INVALID
          - EQUAL
          - GREATERTHAN
        defaultValue:
          type: number
    LoanProductConfigurableAttributes:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        amortizationBoolean:
          type: boolean
        interestMethodBoolean:
          type: boolean
        transactionProcessingStrategyBoolean:
          type: boolean
        interestCalcPeriodBoolean:
          type: boolean
        arrearsToleranceBoolean:
          type: boolean
        repaymentEveryBoolean:
          type: boolean
        graceOnPrincipalAndInterestPaymentBoolean:
          type: boolean
        graceOnArrearsAgingBoolean:
          type: boolean
        new:
          type: boolean
    LoanProductData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        fundId:
          type: integer
          format: int64
        fundName:
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyData'
        principal:
          type: number
        minPrincipal:
          type: number
        maxPrincipal:
          type: number
        numberOfRepayments:
          type: integer
          format: int32
        repaymentEvery:
          type: integer
          format: int32
        repaymentFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        interestRatePerPeriod:
          type: number
        interestRateFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        annualInterestRate:
          type: number
        interestRateDifferential:
          type: number
        minDifferentialLendingRate:
          type: number
        defaultDifferentialLendingRate:
          type: number
        maxDifferentialLendingRate:
          type: number
        amortizationType:
          $ref: '#/components/schemas/EnumOptionData'
        interestType:
          $ref: '#/components/schemas/EnumOptionData'
        interestCalculationPeriodType:
          $ref: '#/components/schemas/EnumOptionData'
        allowPartialPeriodInterestCalcualtion:
          type: boolean
        inArrearsTolerance:
          type: number
        transactionProcessingStrategyId:
          type: integer
          format: int64
        transactionProcessingStrategyName:
          type: string
        graceOnPrincipalPayment:
          type: integer
          format: int32
        recurringMoratoriumOnPrincipalPeriods:
          type: integer
          format: int32
        graceOnInterestPayment:
          type: integer
          format: int32
        graceOnInterestCharged:
          type: integer
          format: int32
        graceOnArrearsAgeing:
          type: integer
          format: int32
        daysInMonthType:
          $ref: '#/components/schemas/EnumOptionData'
        daysInYearType:
          $ref: '#/components/schemas/EnumOptionData'
        interestRecalculationData:
          $ref: '#/components/schemas/LoanProductInterestRecalculationData'
        principalVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        interestRateVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        numberOfRepaymentVariationsForBorrowerCycle:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
        fundOptions:
          type: array
          items:
            $ref: '#/components/schemas/FundData'
        repaymentFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestRateFrequencyTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        amortizationTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        interestCalculationPeriodTypeOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        chargeOptions:
          type: array
          items:
            $ref: '#/components/schemas/ChargeData'
        multiDisburseLoan:
          type: boolean
        outstandingLoanBalance:
          type: number
        getloanProductConfigurableAttributes:
          $ref: '#/components/schemas/LoanProductConfigurableAttributes'
        minimumGapBetweenInstallments:
          type: integer
          format: int32
        maximumGapBetweenInstallments:
          type: integer
          format: int32
        floatingInterestRateCalculationAllowed:
          type: boolean
        linkedToFloatingInterestRates:
          type: boolean
        variableInstallmentsAllowed:
          type: boolean
        compoundingToBePostedAsTransaction:
          type: boolean
        interestRecalculationEnabled:
          type: boolean
    LoanProductFloatingRates:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanProduct:
          $ref: '#/components/schemas/LoanProduct'
        floatingRate:
          $ref: '#/components/schemas/FloatingRate'
        interestRateDifferential:
          type: number
        minDifferentialLendingRate:
          type: number
        defaultDifferentialLendingRate:
          type: number
        maxDifferentialLendingRate:
          type: number
        floatingInterestRateCalculationAllowed:
          type: boolean
        new:
          type: boolean
    LoanProductGuaranteeDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mandatoryGuarantee:
          type: number
        minimumGuaranteeFromOwnFunds:
          type: number
        minimumGuaranteeFromGuarantor:
          type: number
        new:
          type: boolean
    LoanProductInterestRecalculationData:
      type: object
      properties:
        interestRecalculationCompoundingType:
          $ref: '#/components/schemas/EnumOptionData'
        rescheduleStrategyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyInterval:
          type: integer
          format: int32
        recalculationRestFrequencyNthDay:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyWeekday:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationRestFrequencyOnDay:
          type: integer
          format: int32
        recalculationCompoundingFrequencyType:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyInterval:
          type: integer
          format: int32
        recalculationCompoundingFrequencyNthDay:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyWeekday:
          $ref: '#/components/schemas/EnumOptionData'
        recalculationCompoundingFrequencyOnDay:
          type: integer
          format: int32
        compoundingToBePostedAsTransaction:
          type: boolean
    LoanProductInterestRecalculationDetails:
      type: object
      properties:
        id:
          type: integer
          format: int64
        interestRecalculationCompoundingMethod:
          type: integer
          format: int32
        rescheduleStrategyMethod:
          type: integer
          format: int32
        restFrequencyType:
          type: string
          enum:
          - INVALID
          - SAME_AS_REPAYMENT_PERIOD
          - DAILY
          - WEEKLY
          - MONTHLY
        restInterval:
          type: integer
          format: int32
        restFrequencyNthDay:
          type: integer
          format: int32
        restFrequencyWeekday:
          type: integer
          format: int32
        restFrequencyOnDay:
          type: integer
          format: int32
        compoundingFrequencyType:
          type: string
          enum:
          - INVALID
          - SAME_AS_REPAYMENT_PERIOD
          - DAILY
          - WEEKLY
          - MONTHLY
        compoundingInterval:
          type: integer
          format: int32
        compoundingFrequencyNthDay:
          type: integer
          format: int32
        compoundingFrequencyWeekday:
          type: integer
          format: int32
        compoundingFrequencyOnDay:
          type: integer
          format: int32
        isCompoundingToBePostedAsTransaction:
          type: boolean
        arrearsBasedOnOriginalSchedule:
          type: boolean
        new:
          type: boolean
    LoanProductRelatedDetail:
      type: object
      properties:
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        principal:
          $ref: '#/components/schemas/Money'
        nominalInterestRatePerPeriod:
          type: number
        interestPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - INVALID
        annualNominalInterestRate:
          type: number
        interestMethod:
          type: string
          enum:
          - DECLINING_BALANCE
          - FLAT
          - INVALID
        interestCalculationPeriodMethod:
          type: string
          enum:
          - DAILY
          - SAME_AS_REPAYMENT_PERIOD
          - INVALID
        allowPartialPeriodInterestCalcualtion:
          type: boolean
        repayEvery:
          type: integer
          format: int32
        repaymentPeriodFrequencyType:
          type: string
          enum:
          - DAYS
          - WEEKS
          - MONTHS
          - YEARS
          - INVALID
        numberOfRepayments:
          type: integer
          format: int32
        graceOnPrincipalPayment:
          type: integer
          format: int32
        graceOnInterestPayment:
          type: integer
          format: int32
        amortizationMethod:
          type: string
          enum:
          - EQUAL_PRINCIPAL
          - EQUAL_INSTALLMENTS
          - INVALID
        inArrearsTolerance:
          $ref: '#/components/schemas/Money'
        graceOnArrearsAgeing:
          type: integer
          format: int32
        arrearsTolerance:
          type: number
        interestRecalculationEnabled:
          type: boolean
        graceOnDueDate:
          type: integer
          format: int32
    LoanTransactionProcessingStrategy:
      type: object
      properties:
        id:
          type: integer
          format: int64
        standardStrategy:
          type: boolean
        heavensfamilyStrategy:
          type: boolean
        earlyPaymentStrategy:
          type: boolean
        creocoreStrategy:
          type: boolean
        indianRBIStrategy:
          type: boolean
        principalInterestPenaltiesFeesOrderStrategy:
          type: boolean
        interestPrincipalPenaltiesFeesOrderStrategy:
          type: boolean
        new:
          type: boolean
    MonetaryCurrency:
      type: object
      properties:
        code:
          type: string
        digitsAfterDecimal:
          type: integer
          format: int32
        currencyInMultiplesOf:
          type: integer
          format: int32
    Money:
      type: object
      properties:
        currencyCode:
          type: string
        currencyDigitsAfterDecimal:
          type: integer
          format: int32
        amount:
          type: number
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        zero:
          type: boolean
        currencyInMultiplesOf:
          type: integer
          format: int32
        amountDefaultedToNullIfZero:
          type: number
        lessThanZero:
          type: boolean
        greaterThanZero:
          type: boolean
    MonthDay:
      type: object
      properties:
        dayOfMonth:
          type: integer
          format: int32
        fieldTypes:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeFieldType'
        monthOfYear:
          type: integer
          format: int32
        chronology:
          $ref: '#/components/schemas/Chronology'
        values:
          type: array
          items:
            type: integer
            format: int32
        fields:
          type: array
          items:
            $ref: '#/components/schemas/DateTimeField'
    Office:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        hierarchy:
          type: string
        openingLocalDate:
          type: string
          format: date
        new:
          type: boolean
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        grouping:
          type: string
        code:
          type: string
        new:
          type: boolean
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        disabled:
          type: boolean
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permission'
        enabled:
          type: boolean
        new:
          type: boolean
    SavingsProductData:
      type: object
      properties:
        name:
          type: string
        depositAccountType:
          type: string
    Staff:
      type: object
      properties:
        id:
          type: integer
          format: int64
        loanOfficer:
          type: boolean
        active:
          type: boolean
        image:
          $ref: '#/components/schemas/Image'
        notActive:
          type: boolean
        notLoanOfficer:
          type: boolean
        new:
          type: boolean
    TaxComponent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        percentage:
          type: number
        debitAccountType:
          type: integer
          format: int32
        debitAcount:
          $ref: '#/components/schemas/GLAccount'
        creditAccountType:
          type: integer
          format: int32
        creditAcount:
          $ref: '#/components/schemas/GLAccount'
        taxComponentHistories:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaxComponentHistory'
        taxGroupMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappings'
        new:
          type: boolean
    TaxComponentHistory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        percentage:
          type: number
        new:
          type: boolean
    TaxGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        taxGroupMappings:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaxGroupMappings'
        new:
          type: boolean
    TaxGroupMappings:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          $ref: '#/components/schemas/AppUser'
        createdDate:
          type: string
          format: date-time
        lastModifiedBy:
          $ref: '#/components/schemas/AppUser'
        lastModifiedDate:
          type: string
          format: date-time
        taxComponent:
          $ref: '#/components/schemas/TaxComponent'
        endDate:
          type: string
          format: date-time
        new:
          type: boolean
    PutReportResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
        changes:
          $ref: '#/components/schemas/PutReportResponseChanges'
    PutReportResponseChanges:
      type: object
      properties:
        reportName:
          type: string
          example: Changed New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    ReportParameterData:
      type: object
    PutReportRequest:
      type: object
      properties:
        reportName:
          type: string
          example: Completely New Report
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    DeleteReportsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
    GetReportsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        reportName:
          type: string
          example: Client Listing
        reportType:
          type: string
          example: Table
        reportSubType:
          type: string
        reportCategory:
          type: string
          example: Client
        description:
          type: string
          example: Individual Client Report Lists the small number of defined fields
            on the client table.  Would expect to copy this report and add any one
            to one additional data for specific tenant needs. Can be run for any size
            MFI but you expect it only to be run within a branch for larger ones.  Depending
            on how many columns are displayed, there is probably is a limit of about
            20/50k clients returned for html display (export to excel doesnt have
            that client browser/memory impact).
        reportSql:
          type: string
        coreReport:
          type: boolean
          example: true
        useReport:
          type: boolean
          example: true
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    GetReportsTemplateResponse:
      type: object
      properties:
        allowedReportTypes:
          type: array
          items:
            type: string
        allowedReportSubTypes:
          type: array
          items:
            type: string
        allowedParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    PostReportsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 132
    PostRepostRequest:
      type: object
      properties:
        reportName:
          type: string
          example: Completely New Report
        reportType:
          type: string
          example: Table
        reportSubType:
          type: string
        reportCategory:
          type: string
          example: Loan
        description:
          type: string
          example: Just An Example
        reportSql:
          type: string
          example: select 'very good sql' as AComment
        reportParameters:
          type: array
          items:
            $ref: '#/components/schemas/ReportParameterData'
    GetReportNameResponse:
      type: object
      properties:
        columnHeaders:
          $ref: '#/components/schemas/ResultsetColumnHeaderData'
        row:
          $ref: '#/components/schemas/ResultsetRowData'
    GetEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        parentEntityType:
          type: string
          example: clients
        parentEntityId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Client Details Form
        fileName:
          type: string
          example: CGAP.pdf
        size:
          type: integer
          format: int64
          example: 5246719
        type:
          type: string
          example: application/pdf
        description:
          type: string
          example: A signed form signed by new member
        location:
          type: string
        storageType:
          type: integer
          format: int32
    PutEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        changes:
          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
        resourceIdentifier:
          type: string
          example: "3"
    PutEntityTypeEntityIdDocumentsResponseChangesSwagger:
      type: object
    DeleteEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        changes:
          $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
        resourceIdentifier:
          type: string
          example: "3"
    PostEntityTypeEntityIdDocumentsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 3
        resourceIdentifier:
          type: string
          example: "3"
    Event:
      type: object
      properties:
        actionName:
          type: string
        entityName:
          type: string
    Field:
      type: object
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
        fieldType:
          type: string
    GetHookResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Web
        displayName:
          type: string
          example: Kremlin
        isActive:
          type: boolean
          example: true
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        templateId:
          type: integer
          format: int64
          example: 1
        templateName:
          type: string
          example: My UGD
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    PostHookResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    PostHookRequest:
      type: object
      properties:
        name:
          type: string
          example: Web
        isActive:
          type: boolean
          example: true
        displayName:
          type: string
          example: Kremlin
        templateId:
          type: integer
          format: int64
          example: 1
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    PutHookResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
        changes:
          $ref: '#/components/schemas/PutHookResponseChangesSwagger'
    PutHookResponseChangesSwagger:
      type: object
      properties:
        displayName:
          type: string
          example: Kremlin
        events:
          type: array
          example: "1"
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    PutHookRequest:
      type: object
      properties:
        name:
          type: string
          example: Web
        isActive:
          type: boolean
          example: true
        displayName:
          type: string
          example: Kremlin
        templateId:
          type: integer
          format: int64
          example: 1
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        config:
          type: array
          items:
            $ref: '#/components/schemas/Field'
    DeleteHookResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 4
    GetHookTemplateResponse:
      type: object
      properties:
        templates:
          type: array
          items:
            $ref: '#/components/schemas/HookTemplateData'
        groupings:
          type: array
          items:
            $ref: '#/components/schemas/Grouping'
    Grouping:
      type: object
      properties:
        name:
          type: string
    HookTemplateData:
      type: object
      properties:
        serviceId:
          type: integer
          format: int64
    GetSchedulerResponse:
      type: object
      properties:
        active:
          type: boolean
          example: true
    GetJobsJobIDJobRunHistoryResponse:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
          example: 8
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/JobDetailHistoryDataSwagger'
    JobDetailHistoryDataSwagger:
      type: object
      properties:
        version:
          type: integer
          format: int64
          example: 1
        jobRunStartTime:
          type: string
          format: date-time
        jobRunEndTime:
          type: string
          format: date-time
        status:
          type: string
          example: success
        triggerType:
          type: string
          example: cron
    PutJobsJobsIDRequest:
      type: object
      properties:
        displayName:
          type: string
          example: Update loan Summary
        cronExpression:
          type: string
          example: 0 0 22 1/1 * ? *
        active:
          type: boolean
          example: false
    GetJobsResponse:
      type: object
      properties:
        jobId:
          type: integer
          format: int64
          example: 1
        displayName:
          type: string
          example: Update loan Summary
        nextRunTime:
          type: string
          format: date-time
        initializingError:
          type: string
        cronExpression:
          type: string
          example: 0 0 22 1/1 * ? *
        active:
          type: boolean
          example: false
        currentlyRunning:
          type: boolean
          example: false
        lastRunHistory:
          $ref: '#/components/schemas/JobDetailHistoryData'
    JobDetailHistoryData:
      type: object
    PostReportMailingJobsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostReportMailingJobsRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        dateFormat:
          type: string
          example: dd-MM-yyyy HH:mm:ss
        name:
          type: string
          example: Client Numbers Report
        description:
          type: string
          example: Client Numbers Report
        startDateTime:
          type: string
          format: date-time
        stretchyReportId:
          type: integer
          format: int64
          example: 120
        emailRecipients:
          type: string
          example: info@musonisystem.com
        emailSubject:
          type: string
          example: Client Numbers Report
        emailMessage:
          type: string
          example: Client Numbers Report
        recurrence:
          type: string
          example: FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR
        isActive:
          type: boolean
          example: true
        stretchyReportParamMap:
          type: string
          example: '{"startDate":"2016-07-01","endDate":"2016-08-02","selectOffice":"1","environementUrl":"environementUrl"}'
    PutReportMailingJobsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutReportMailingJobsResponseChanges'
    PutReportMailingJobsResponseChanges:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
    PutReportMailingJobsRequest:
      type: object
      properties:
        locale:
          type: string
          example: en_GB
        dateFormat:
          type: string
          example: dd-MM-yyyy HH:mm:ss
        startDateTime:
          type: string
          format: date-time
    DeleteReportMailingJobsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    DeleteReportMailingJobsRequest:
      type: object
    GetReportMailingJobsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Client Numbers Report
        description:
          type: string
          example: Client Numbers Report
        startDateTime:
          type: string
          format: date-time
        recurrence:
          type: string
        timeline:
          $ref: '#/components/schemas/ReportMailingJobTimelineData'
        emailRecipients:
          type: string
          example: info@musonisystem.com
        emailSubject:
          type: string
          example: Client Numbers Report
        emailMessage:
          type: string
          example: Client Numbers Report
        emailAttachmentFileFormat:
          $ref: '#/components/schemas/EnumOptionData'
        stretchyReport:
          $ref: '#/components/schemas/ReportData'
        stretchyReportParamMap:
          type: string
          example: '{"startDate":"2016-07-01","endDate":"2016-08-02","selectOffice":"1","environementUrl":"environementUrl"}'
        nextRunDateTime:
          type: string
          format: date-time
        numberOfRuns:
          type: integer
          format: int32
          example: 0
        isActive:
          type: boolean
          example: true
        runAsUserId:
          type: integer
          format: int64
          example: 1
    ReportData:
      type: object
    ReportMailingJobTimelineData:
      type: object
    GetReportMailingJobsTemplate:
      type: object
      properties:
        isActive:
          type: boolean
          example: true
        emailAttachmentFileFormatOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
        stretchyReportParamDateOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    ReportMailingJobRunHistoryData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        reportMailingJobId:
          type: integer
          format: int64
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        status:
          type: string
        errorMessage:
          type: string
        errorLog:
          type: string
    PostAuthenticationResponse:
      type: object
      properties:
        username:
          type: string
          example: mifos
        userId:
          type: integer
          format: int64
          example: 1
        base64EncodedAuthenticationKey:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffId:
          type: integer
          format: int64
          example: 1
        staffDisplayName:
          type: string
          example: Director, Program
        organisationalRole:
          $ref: '#/components/schemas/EnumOptionData'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
    RoleData:
      type: object
    GetUserDetailsResponse:
      type: object
      properties:
        username:
          type: string
          example: mifos
        userId:
          type: integer
          format: int64
          example: 1
        accessToken:
          type: string
          example: bWlmb3M6cGFzc3dvcmQ=
        authenticated:
          type: boolean
          example: true
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffId:
          type: integer
          format: int64
          example: 1
        staffDisplayName:
          type: string
          example: mifosStaffDisplayName
        organisationalRole:
          $ref: '#/components/schemas/EnumOptionData'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        permissions:
          type: array
          example: ALL_FUNCTIONS
          items:
            type: string
    PostSurveySurveyNameApptableIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 2
        clientId:
          type: integer
          format: int64
          example: 87
        resourceId:
          type: integer
          format: int64
          example: 87
    PostSurveySurveyNameApptableIdRequest:
      type: object
      properties:
        ppi_household_members_cd_q1_householdmembers:
          type: integer
          format: int64
          example: 167
        ppi_highestschool_cd_q2_highestschool:
          type: integer
          format: int64
          example: 174
        ppi_businessoccupation_cd_q3_businessoccupation:
          type: integer
          format: int64
          example: 180
        ppi_habitablerooms_cd_q4_habitablerooms:
          type: integer
          format: int64
          example: 184
        ppi_floortype_cd_q5_floortype:
          type: integer
          format: int64
          example: 188
        ppi_lightingsource_cd_q6_lightingsource:
          type: integer
          format: int64
          example: 190
        ppi_irons_cd_q7_irons:
          type: integer
          format: int64
          example: 193
        ppi_mosquitonets_cd_q8_mosquitonets:
          type: integer
          format: int64
          example: 195
        ppi_towels_cd_q9_towels:
          type: integer
          format: int64
          example: 198
        ppi_fryingpans_cd_q10_fryingpans:
          type: integer
          format: int64
          example: 201
        Date:
          type: string
          format: date-time
        dateFormat:
          type: string
          format: date-time
        locale:
          type: string
          example: en_GB
    GetSurveyResponse:
      type: object
      properties:
        datatableData:
          $ref: '#/components/schemas/GetSurveyResponseDatatableData'
        enabled:
          type: boolean
          example: false
    GetSurveyResponseDatatableData:
      type: object
      properties:
        applicationTableName:
          type: string
          example: m_client
        registeredTableName:
          type: string
          example: ppi_kenya_2005
        columnHeaderData:
          type: array
          items:
            $ref: '#/components/schemas/ResultsetColumnHeaderData'
    PostHolidaysHolidayIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostHolidaysHolidayIdRequest:
      type: object
    PostHolidaysResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostHolidaysRequest:
      type: object
      properties:
        name:
          type: string
          example: Good Friday
        description:
          type: string
          example: Good Friday
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        repaymentsRescheduledTo:
          type: string
          format: date
        offices:
          type: array
          items:
            $ref: '#/components/schemas/PostHolidaysRequestOffices'
    PostHolidaysRequestOffices:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
    GetHolidaysResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Good Friday
        fromDate:
          type: string
          format: date
        toDate:
          type: string
          format: date
        repaymentsRescheduledTo:
          type: string
          format: date
        officeId:
          type: integer
          format: int64
          example: 1
        status:
          $ref: '#/components/schemas/EnumOptionData'
    PutHolidaysHolidayIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutHolidaysHolidayIdResponseChanges'
    PutHolidaysHolidayIdResponseChanges:
      type: object
      properties:
        name:
          type: string
          example: Independence day
        description:
          type: string
          example: Holiday for Independence day celebration
    PutHolidaysHolidayIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Independence day
        description:
          type: string
          example: Holiday for Independence day celebration
    DeleteHolidaysHolidayIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    GetCurrenciesResponse:
      type: object
      properties:
        selectedCurrencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
    PutCurrenciesResponse:
      type: object
      properties:
        currencies:
          type: string
          example: |-
            ["KES",
                    "BND",
                    "LBP",
                    "GHC",
                    "USD",
                    "XOF",
                    "AED",
                    "AMD"]
    PutCurrenciesRequest:
      type: object
      properties:
        currencies:
          type: string
          example: |-
            ["KES",
                    "BND",
                    "LBP",
                    "GHC",
                    "USD",
                    "XOF",
                    "AED",
                    "AMD"]
    GetOfficesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Head Office
        nameDecorated:
          type: string
          example: Head Office
        externalId:
          type: string
          example: "1"
        openingDate:
          type: string
          format: date
        hierarchy:
          type: string
          example: "."
    GetOfficesTemplateResponse:
      type: object
      properties:
        openingDate:
          type: string
          format: date
        allowedParents:
          type: array
          items:
            $ref: '#/components/schemas/GetOfficesResponse'
    PostOfficesResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 3
        resourceId:
          type: integer
          format: int64
          example: 3
    PostOfficesRequest:
      type: object
      properties:
        name:
          type: string
          example: Good Friday
        dateFormat:
          type: string
          example: dd MMMM yyyy
        locale:
          type: string
          example: en
        openingDate:
          type: string
          format: date
        parentId:
          type: integer
          format: int64
          example: 2
        externalId:
          type: string
          example: SYS54-88
    PutOfficesOfficeIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 3
        resourceId:
          type: integer
          format: int64
          example: 3
        changes:
          $ref: '#/components/schemas/PutOfficesOfficeIdResponseChanges'
    PutOfficesOfficeIdResponseChanges:
      type: object
      properties:
        name:
          type: string
          example: Name is updated
    PutOfficesOfficeIdRequest:
      type: object
      properties:
        name:
          type: string
          example: Name is updated
    GetProvisioningCriteriaCriteriaIdResponse:
      type: object
      properties:
        criteriaId:
          type: integer
          format: int64
          example: 1
        criteriaName:
          type: string
          example: High Risk Products Criteria
        createdBy:
          type: string
          example: mifos
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
    ProvisioningCriteriaDefinitionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        categoryId:
          type: integer
          format: int64
        categoryName:
          type: string
        minAge:
          type: integer
          format: int64
        maxAge:
          type: integer
          format: int64
        provisioningPercentage:
          type: number
        liabilityAccount:
          type: integer
          format: int64
        liabilityCode:
          type: string
        expenseAccount:
          type: integer
          format: int64
        expenseCode:
          type: string
    GetProvisioningCriteriaResponse:
      type: object
      properties:
        criteriaId:
          type: integer
          format: int64
          example: 1
        criteriaName:
          type: string
          example: High Risk Products Criteria
        createdBy:
          type: string
          example: mifos
    PostProvisioningCriteriaResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostProvisioningCriteriaRequest:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
    PutProvisioningCriteriaResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutProvisioningCriteriaResponseChanges'
    PutProvisioningCriteriaResponseChanges:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
    PutProvisioningCriteriaRequest:
      type: object
      properties:
        criteriaName:
          type: string
          example: High Risk Products Criteria
        loanProducts:
          type: array
          items:
            $ref: '#/components/schemas/LoanProductData'
        provisioningcriteria:
          type: array
          items:
            $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
    DeleteProvisioningCriteriaResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    GetStaffResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        displayName:
          type: string
          example: Doe, John
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        isLoanOfficer:
          type: boolean
          example: true
        externalId:
          type: string
          example: 17H
        isActive:
          type: boolean
          example: false
        joiningDate:
          type: string
          format: date
    PostStaffResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PostStaffRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        firstname:
          type: string
          example: John
        lastname:
          type: string
          example: Doe
        isLoanOfficer:
          type: boolean
          example: true
        externalId:
          type: string
          example: 17H
        mobileNo:
          type: string
          example: +353851239876
        isActive:
          type: boolean
          example: true
        joiningDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd MMMM yyyy
    PutStaffResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 1
    PutStaffRequest:
      type: object
      properties:
        isLoanOfficer:
          type: boolean
          example: false
        externalId:
          type: string
          example: 17Hbb
    GetTellersResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 3
        officeId:
          type: integer
          format: int64
          example: 1
        debitAccountId:
          type: integer
          format: int64
          example: 0
        creditAccountId:
          type: integer
          format: int64
          example: 0
        name:
          type: string
          example: Teller3
        startDate:
          type: string
          format: date
        status:
          type: string
          example: ACTIVE
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
        officeName:
          type: string
          example: Head Office
    PostTellersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 5
    PostTellersRequest:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Teller3
        description:
          type: string
          example: cash handling
        status:
          type: string
          example: ACTIVE
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        startDate:
          type: string
          format: date
    PutTellersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 5
        changes:
          $ref: '#/components/schemas/PutTellersResponseChanges'
    PutTellersResponseChanges:
      type: object
      properties:
        description:
          type: string
          example: teller cash handling
        endDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
    PutTellersRequest:
      type: object
      properties:
        name:
          type: string
          example: Teller3
        officeId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: teller cash handling
        status:
          type: string
          example: ACTIVE
          enum:
          - INVALID
          - PENDING
          - ACTIVE
          - INACTIVE
          - CLOSED
        endDate:
          type: string
          format: date
        startDate:
          type: string
          format: date
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
    CashierData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        tellerId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        staffId:
          type: integer
          format: int64
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string
        officeName:
          type: string
        tellerName:
          type: string
        staffName:
          type: string
        fullDay:
          type: boolean
    GetTellersTellerIdCashiersResponse:
      type: object
      properties:
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        cashiers:
          type: array
          items:
            $ref: '#/components/schemas/CashierData'
    GetTellersTellerIdCashiersCashierIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        tellerId:
          type: integer
          format: int64
          example: 1
        staffId:
          type: integer
          format: int64
          example: 1
        description:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        isFullDay:
          type: boolean
          example: true
        startTime:
          type: string
        endTime:
          type: string
        tellerName:
          type: string
          example: Teller1
        staffName:
          type: string
          example: Staff1, Test
    GetTellersTellerIdCashiersTemplateResponse:
      type: object
      properties:
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        staffOptions:
          type: array
          items:
            $ref: '#/components/schemas/StaffData'
    StaffData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstname:
          type: string
        lastname:
          type: string
        displayName:
          type: string
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        joiningDate:
          type: string
          format: date
    PostTellersTellerIdCashiersResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 2
    PostTellersTellerIdCashiersRequest:
      type: object
      properties:
        endDate:
          type: string
          format: date
        description:
          type: string
          example: teller cash handling
        isFullDay:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 3
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        startDate:
          type: string
          format: date
    PutTellersTellerIdCashiersCashierIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 2
        changes:
          $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponseChanges'
    PutTellersTellerIdCashiersCashierIdResponseChanges:
      type: object
      properties:
        endDate:
          type: string
          format: date
        description:
          type: string
          example: Cashier updated.
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
    PutTellersTellerIdCashiersCashierIdRequest:
      type: object
      properties:
        endDate:
          type: string
          format: date
        description:
          type: string
          example: Cashier updated.
        isFullDay:
          type: boolean
          example: true
        staffId:
          type: integer
          format: int64
          example: 1
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        startDate:
          type: string
          format: date
    DeleteTellersTellerIdCashiersCashierIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostTellersTellerIdCashiersCashierIdAllocateResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 4
    PostTellersTellerIdCashiersCashierIdAllocateRequest:
      type: object
      properties:
        currencyCode:
          type: string
          example: USD
        txnAmount:
          type: number
          example: 5000.0
        txnNote:
          type: string
          example: allocating cash
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        txnDate:
          type: string
          format: date-time
    PostTellersTellerIdCashiersCashierIdSettleResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        subResourceId:
          type: integer
          format: int64
          example: 5
    PostTellersTellerIdCashiersCashierIdSettleRequest:
      type: object
      properties:
        currencyCode:
          type: string
          example: USD
        txnAmount:
          type: number
          example: 2000.0
        txnNote:
          type: string
          example: cash settlement
        locale:
          type: string
          example: en
        dateFormat:
          type: string
          example: dd-MM-yyyy
        txnDate:
          type: string
          format: date-time
    CashierTxnType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        value:
          type: string
    GetTellersTellerIdCashiersCashiersIdTransactionsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 8
        cashierId:
          type: integer
          format: int64
          example: 15
        txnType:
          $ref: '#/components/schemas/CashierTxnType'
        txnAmount:
          type: number
          example: 1000.0
        txnDate:
          type: string
          format: date-time
        entityId:
          type: integer
          format: int64
          example: 2
        entityType:
          type: string
          example: loans
        txnNote:
          type: string
          example: Disbursement, Loan:2-000000002,Client:1-Test 1
        createdDate:
          type: string
          format: date-time
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 0
        cashierName:
          type: string
          example: B, Ramesh
    CashierTransactionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cashierId:
          type: integer
          format: int64
        txnType:
          $ref: '#/components/schemas/CashierTxnType'
        txnAmount:
          type: number
        txnDate:
          type: string
          format: date-time
        entityId:
          type: integer
          format: int64
        entityType:
          type: string
        txnNote:
          type: string
        createdDate:
          type: string
          format: date-time
        officeId:
          type: integer
          format: int64
        officeName:
          type: string
        tellerId:
          type: integer
          format: int64
        tellerName:
          type: string
        cashierName:
          type: string
        cashierData:
          $ref: '#/components/schemas/CashierData'
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
    GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse:
      type: object
      properties:
        sumCashAllocation:
          type: number
          example: 7000.0
        sumInwardCash:
          type: number
          example: 0.0
        sumOutwardCash:
          type: number
          example: 0.0
        sumCashSettlement:
          type: number
          example: 50.0
        netCash:
          type: number
          example: 6950.0
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 1
        tellerName:
          type: string
          example: Teller1
        cashierId:
          type: integer
          format: int64
          example: 1
        cashierName:
          type: string
          example: Staff1, Test
        cashierTransactions:
          $ref: '#/components/schemas/PageCashierTransactionData'
    Page:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
        pageItems:
          type: array
          items:
            type: object
            properties: {}
    PageCashierTransactionData:
      type: object
      properties:
        totalFilteredRecords:
          type: integer
          format: int32
        pageItems:
          type: array
          items:
            $ref: '#/components/schemas/CashierTransactionData'
    GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse:
      type: object
      properties:
        cashierId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        tellerId:
          type: integer
          format: int64
          example: 0
        tellerName:
          type: string
          example: Teller1
        cashierName:
          type: string
          example: Staff1, Test
        cashierData:
          $ref: '#/components/schemas/CashierData'
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        currencyOptions:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyData'
    GetWorkingDaysTemplateResponse:
      type: object
      properties:
        repaymentRescheduleOptions:
          type: array
          items:
            $ref: '#/components/schemas/EnumOptionData'
    GetWorkingDaysResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        recurrence:
          type: string
          example: FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR
        repaymentRescheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        extendTermForDailyRepayments:
          type: boolean
          example: true
    PutWorkingDaysResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutWorkingDaysRequest:
      type: object
      properties:
        recurrence:
          type: string
          example: FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR
        locale:
          type: string
          example: en
        repaymentRescheduleType:
          $ref: '#/components/schemas/EnumOptionData'
        extendTermForDailyRepayments:
          type: boolean
          example: true
    AddressData:
      type: object
    CommandProcessingResult:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        loanId:
          type: integer
          format: int64
        savingsId:
          type: integer
          format: int64
        subResourceId:
          type: integer
          format: int64
        transactionId:
          type: string
        changes:
          type: object
          additionalProperties:
            type: object
            properties: {}
        productId:
          type: integer
          format: int64
        rollbackTransaction:
          type: boolean
    ClientChargeData:
      type: object
    ClientCharge:
      type: object
      properties:
        id:
          type: integer
          format: int64
        client:
          $ref: '#/components/schemas/Client'
        charge:
          $ref: '#/components/schemas/Charge'
        chargeTime:
          type: integer
          format: int32
        dueDate:
          type: string
          format: date-time
        chargeCalculation:
          type: integer
          format: int32
        amount:
          $ref: '#/components/schemas/Money'
        amountPaid:
          $ref: '#/components/schemas/Money'
        amountWaived:
          $ref: '#/components/schemas/Money'
        amountWrittenOff:
          $ref: '#/components/schemas/Money'
        amountOutstanding:
          $ref: '#/components/schemas/Money'
        penaltyCharge:
          type: boolean
        paid:
          type: boolean
        waived:
          type: boolean
        inactivationDate:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/MonetaryCurrency'
        active:
          type: boolean
        notActive:
          type: boolean
        clientId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        onSpecifiedDueDate:
          type: boolean
        dueLocalDate:
          type: string
          format: date
        new:
          type: boolean
    ClientIdentifierData:
      type: object
    ClientTransactionData:
      type: object
    AccountSummaryCollectionData:
      type: object
    ClientData:
      required:
      - active
      - address
      - addressEnabled
      - middlename
      - officeId
      type: object
      properties:
        id:
          type: integer
          format: int64
        accountNo:
          type: string
        externalId:
          type: string
        active:
          type: boolean
        activationDate:
          type: string
          format: date
        firstname:
          type: string
        middlename:
          type: string
        lastname:
          type: string
        fullname:
          type: string
        gender:
          $ref: '#/components/schemas/CodeValueData'
        officeId:
          type: integer
          format: int64
        address:
          $ref: '#/components/schemas/AddressData'
        isAddressEnabled:
          type: boolean
        addressEnabled:
          type: boolean
        staff:
          type: boolean
    LookupTableData:
      type: object
      properties:
        key:
          type: string
        description:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/LookupTableEntry'
    LookupTableEntry:
      type: object
      properties:
        valueFrom:
          type: integer
          format: int32
        valueTo:
          type: integer
          format: int32
        score:
          type: number
          format: double
    ScorecardData:
      type: object
      properties:
        userId:
          type: integer
          format: int64
        clientId:
          type: integer
          format: int64
        createdOn:
          type: string
          format: date-time
        scorecardValues:
          type: array
          items:
            $ref: '#/components/schemas/ScorecardValue'
    ScorecardValue:
      type: object
      properties:
        questionId:
          type: integer
          format: int64
        responseId:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
    Component:
      type: object
      properties:
        id:
          type: integer
          format: int64
        survey:
          $ref: '#/components/schemas/Survey'
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
        new:
          type: boolean
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int64
        survey:
          $ref: '#/components/schemas/Survey'
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Response'
        componentKey:
          type: string
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
        new:
          type: boolean
    Response:
      type: object
      properties:
        id:
          type: integer
          format: int64
        question:
          $ref: '#/components/schemas/Question'
        text:
          type: string
        value:
          type: integer
          format: int32
        sequenceNo:
          type: integer
          format: int32
        new:
          type: boolean
    Scorecard:
      type: object
      properties:
        id:
          type: integer
          format: int64
        survey:
          $ref: '#/components/schemas/Survey'
        question:
          $ref: '#/components/schemas/Question'
        response:
          $ref: '#/components/schemas/Response'
        appUser:
          $ref: '#/components/schemas/AppUser'
        client:
          $ref: '#/components/schemas/Client'
        createdOn:
          type: string
          format: date-time
        value:
          type: integer
          format: int32
        new:
          type: boolean
    Survey:
      type: object
      properties:
        id:
          type: integer
          format: int64
        components:
          type: array
          items:
            $ref: '#/components/schemas/Component'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        key:
          type: string
        name:
          type: string
        description:
          type: string
        countryCode:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        new:
          type: boolean
    ComponentData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
    QuestionData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        responseDatas:
          type: array
          items:
            $ref: '#/components/schemas/ResponseData'
        componentKey:
          type: string
        key:
          type: string
        text:
          type: string
        description:
          type: string
        sequenceNo:
          type: integer
          format: int32
    ResponseData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        text:
          type: string
        value:
          type: integer
          format: int32
        sequenceNo:
          type: integer
          format: int32
    SurveyData:
      type: object
      properties:
        id:
          type: integer
          format: int64
        componentDatas:
          type: array
          items:
            $ref: '#/components/schemas/ComponentData'
        questionDatas:
          type: array
          items:
            $ref: '#/components/schemas/QuestionData'
        key:
          type: string
        name:
          type: string
        description:
          type: string
        countryCode:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
    PutTemplatesTemplateIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutTemplatesTemplateIdRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: This is a loan for {{loan.clientName}}
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
    TemplateMapper:
      type: object
      properties:
        id:
          type: integer
          format: int64
        mapperorder:
          type: integer
          format: int32
        mapperkey:
          type: string
        mappervalue:
          type: string
        new:
          type: boolean
    DeleteTemplatesTemplateIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    GetTemplatesTemplateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: This is a loan for {{loan.clientName}}
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
    GetTemplatesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: This is a loan for {{loan.clientName}}
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
    GetTemplatesTemplateIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: This is a loan for {{loan.clientName}}
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
    PostTemplatesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostTemplatesRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Text
        entity:
          type: integer
          format: int64
          example: 1
        type:
          type: integer
          format: int64
          example: 0
        text:
          type: string
          example: This is a loan for {{loan.clientName}}
        mappers:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMapper'
    GetPasswordPreferencesTemplateResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        description:
          type: string
          example: Password must be at least 1 character and not more that 50 characters
            long
        active:
          type: boolean
          example: true
        key:
          type: string
          example: simple
    PutPasswordPreferencesTemplateRequest:
      type: object
      properties:
        validationPolicyId:
          type: integer
          format: int64
          example: 1
    GetPermissionsResponse:
      type: object
      properties:
        grouping:
          type: string
          example: authorisation
        code:
          type: string
          example: READ_PERMISSION
        entityName:
          type: string
          example: PERMISSION
        actionName:
          type: string
          example: READ
        selected:
          type: boolean
          example: true
    PutPermissionsRequest:
      type: object
      properties:
        permissions:
          type: string
          example: |-
            "CREATE_GUARANTOR":true,
                "CREATE_CLIENT":true
    GetRolesResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        description:
          type: string
          example: This role provides all application permissions.
    PostRolesResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PostRolesRequest:
      type: object
      properties:
        name:
          type: string
          example: Another Role Name
        description:
          type: string
          example: A description outlining the purpose of this role in relation to
            the application.
    GetRolesRoleIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        description:
          type: string
          example: This role provides all application permissions.
    PostRolesRoleIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    GetRolesRoleIdPermissionsResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Super Users
        description:
          type: string
          example: This role provides all application permissions.
        permissionUsageData:
          type: array
          items:
            $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponsePermissionData'
    GetRolesRoleIdPermissionsResponsePermissionData:
      type: object
      properties:
        grouping:
          type: string
          example: authorisation
        code:
          type: string
          example: READ_PERMISSION
        entityName:
          type: string
          example: PERMISSION
        actionName:
          type: string
          example: READ
        selected:
          type: boolean
          example: false
    PostRolesRoleIdPermissionsResponsePermissions:
      type: object
      properties:
        ALL_FUNCTIONS_READ:
          type: string
          example: "true"
    PutRolesRoleIdPermissionsResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 8
        permissions:
          $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'
    PutRolesRoleIdPermissionsRequest:
      type: object
      properties:
        permissions:
          $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'
    DeleteRolesRoleIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
    PutRolesRoleIdResponse:
      type: object
      properties:
        resourceId:
          type: integer
          format: int64
          example: 1
        changes:
          $ref: '#/components/schemas/PutRolesRoleIdResponseChanges'
    PutRolesRoleIdResponseChanges:
      type: object
      properties:
        description:
          type: string
          example: some description(changed)
    PutRolesRoleIdRequest:
      type: object
      properties:
        description:
          type: string
          example: some description(changed)
    GetUsersTemplateResponse:
      type: object
      properties:
        allowedOffices:
          type: array
          items:
            $ref: '#/components/schemas/OfficeData'
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
    GetUsersResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        firstname:
          type: string
          example: App
        lastname:
          type: string
          example: Administrator
        email:
          type: string
          example: demomfi@mifos.org
        passwordNeverExpires:
          type: boolean
          example: false
        staff:
          $ref: '#/components/schemas/StaffData'
        selectedRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
    GetUsersUserIdResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        username:
          type: string
          example: mifos
        officeId:
          type: integer
          format: int64
          example: 1
        officeName:
          type: string
          example: Head Office
        firstname:
          type: string
          example: App
        lastname:
          type: string
          example: Administrator
        email:
          type: string
          example: demomfi@mifos.org
        passwordNeverExpires:
          type: boolean
          example: false
        staff:
          $ref: '#/components/schemas/StaffData'
        availableRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
        selectedRoles:
          type: array
          items:
            $ref: '#/components/schemas/RoleData'
    PutUsersUserIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
        changes:
          $ref: '#/components/schemas/PutUsersUserIdResponseChanges'
    PutUsersUserIdResponseChanges:
      type: object
      properties:
        firstname:
          type: string
          example: Test
        passwordEncoded:
          type: string
          example: abc3326b1bb376351c7baeb4175f5e0504e33aadf6a158474a6d71de1befae51
    PutUsersUserIdRequest:
      type: object
      properties:
        firstname:
          type: string
          example: Test
        password:
          type: string
          example: window75
        repeatPassword:
          type: string
          example: window75
    DeleteUsersUserIdResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
        changes:
          $ref: '#/components/schemas/DeleteUsersUserIdResponseChanges'
    DeleteUsersUserIdResponseChanges:
      type: object
    PostUsersResponse:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
          example: 1
        resourceId:
          type: integer
          format: int64
          example: 11
    PostUsersRequest:
      type: object
      properties:
        username:
          type: string
          example: newuser
        firstname:
          type: string
          example: Test
        lastname:
          type: string
          example: User
        email:
          type: string
          example: whatever@mifos.org
        officeId:
          type: integer
          format: int64
          example: 1
        staffId:
          type: integer
          format: int64
          example: 1
        Roles:
          type: string
          example: '[2,3]'
        sendPasswordToEmail:
          type: boolean
          example: true
        isSelfServiceUser:
          type: boolean
          example: true
