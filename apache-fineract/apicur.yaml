openapi: 3.0.1
info:
    title: Fineract by Skalena
    version: 1.0.0
    description: 'Apache Fineract is a secure, multi-tenanted microfinance platform. '
    termsOfService: 'https://demo.openmf.org/api-docs/apiLive.htm'
    contact:
        name: 'https://skalena.finance'
servers:
    -
        url: 'https://skalena.finance'
paths:
    /runaccruals:
        post:
            requestBody:
                description: |-
                    Request Body

                    Field Descriptions: 
                    tillDate: 
                    which specifies periodic accruals should happen till the given Date
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/runaccrualsRequest'
                required: true
            tags:
                - Periodic Accrual Accounting
            responses:
                '200':
                    description: OK
            operationId: executePeriodicAccrualAccounting
            summary: Executes Periodic Accrual Accounting
            description: |
                Mandatory Fields

                tillDate
            x-codegen-request-body-name: body
    /glclosures:
        get:
            tags:
                - Accounting Closure
            parameters:
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetGLClosureResponse'
                    description: ''
            operationId: retrieveAllClosures
            summary: List Accounting closures
            description: |-
                Example Requests:

                glclosures
        post:
            requestBody:
                description: Request Body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostGLCLosuresRequest'
                required: true
            tags:
                - Accounting Closure
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostGlClosuresResponse'
                    description: ''
            operationId: createGLClosure
            summary: Create an Accounting Closure
            description: |-
                Mandatory Fields
                officeId,closingDate
            x-codegen-request-body-name: body
    '/glclosures/{glClosureId}':
        get:
            tags:
                - Accounting Closure
            parameters:
                -
                    name: glClosureId
                    description: glClosureId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGLClosureResponse'
                    description: ''
            operationId: retreiveClosure
            summary: Retrieve an Accounting Closure
            description: |-
                Example Requests:

                glclosures/1


                /glclosures/1?fields=officeName,closingDate
        put:
            requestBody:
                description: Request body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutGlClosuresRequest'
                required: true
            tags:
                - Accounting Closure
            parameters:
                -
                    name: glClosureId
                    description: glClosureId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutGlClosuresResponse'
                    description: ''
            operationId: updateGLClosure
            summary: Update an Accounting closure
            description: 'Once an accounting closure is created, only the comments associated with it may be edited'
            x-codegen-request-body-name: body
        delete:
            tags:
                - Accounting Closure
            parameters:
                -
                    name: glClosureId
                    description: glclosureId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGlClosuresResponse'
                    description: ''
            operationId: deleteGLClosure
            summary: Delete an accounting closure
            description: 'Note: Only the latest accounting closure associated with a branch may be deleted.'
    /financialactivityaccounts:
        get:
            tags:
                - Mapping Financial Activities to Accounts
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
                    description: ''
            operationId: retrieveAll
            summary: List Financial Activities to Accounts Mappings
            description: |-
                Example Requests:

                financialactivityaccounts
        post:
            requestBody:
                description: Request body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
                required: false
            tags:
                - Mapping Financial Activities to Accounts
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostFinancialActivityAccountsResponse'
                    description: ''
            operationId: createGLAccount
            summary: Create a new Financial Activity to Accounts Mapping
            description: |-
                Mandatory Fields
                financialActivityId, glAccountId
            x-codegen-request-body-name: body
    '/financialactivityaccounts/{mappingId}':
        get:
            tags:
                - Mapping Financial Activities to Accounts
            parameters:
                -
                    name: mappingId
                    description: mappingId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetFinancialActivityAccountsResponse'
                    description: ''
            operationId: retreive
            summary: |
                Retrieve a Financial Activity to Account Mapping
            description: |-
                Example Requests:

                financialactivityaccounts/1
        put:
            requestBody:
                description: Request body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostFinancialActivityAccountsRequest'
                required: false
            tags:
                - Mapping Financial Activities to Accounts
            parameters:
                -
                    name: mappingId
                    description: mappingId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutFinancialActivityAccountsResponse'
                    description: ''
            operationId: updateGLAccount
            summary: Update a Financial Activity to Account Mapping
            description: |
                the API updates the Ledger account linked to a Financial Activity 
            x-codegen-request-body-name: body
        delete:
            tags:
                - Mapping Financial Activities to Accounts
            parameters:
                -
                    name: mappingId
                    description: mappingId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteFinancialActivityAccountsResponse'
                    description: OK
            operationId: deleteGLAccount
            summary: Delete a Financial Activity to Account Mapping
    /financialactivityaccounts/template:
        get:
            tags:
                - Mapping Financial Activities to Accounts
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveTemplate
    /glaccounts/template:
        get:
            tags:
                - General Ledger Account
            parameters:
                -
                    name: type
                    description: type
                    schema:
                        format: int32
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGLAccountsTemplateResponse'
                    description: ''
            operationId: retrieveNewAccountDetails
            summary: Retrieve GL Accounts Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists

                Example Request:


                glaccounts/template

                glaccounts/template?type=1


                type is optional and integer value from 1 to 5.


                1.Assets 

                2.Liabilities 

                3.Equity 

                4.Income 

                5.Expenses
    /glaccounts:
        get:
            tags:
                - General Ledger Account
            parameters:
                -
                    name: type
                    description: type
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: searchParam
                    description: searchParam
                    schema:
                        type: string
                    in: query
                -
                    name: usage
                    description: usage
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: manualEntriesAllowed
                    description: manualEntriesAllowed
                    schema:
                        type: boolean
                    in: query
                -
                    name: disabled
                    description: disabled
                    schema:
                        type: boolean
                    in: query
                -
                    name: fetchRunningBalance
                    description: fetchRunningBalance
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetGLAccountsResponse'
                    description: ''
            operationId: retrieveAllAccounts
            summary: List General Ledger Accounts
            description: >-
                ARGUMENTS

                type Integer optional manualEntriesAllowed boolean optional usage Integer optional disabled
                boolean optional parentId Long optional tagId Long optional

                Example Requests:


                glaccounts



                glaccounts?type=1&manualEntriesAllowed=true&usage=1&disabled=false


                glaccounts?fetchRunningBalance=true
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostGLAccountsRequest'
                required: false
            tags:
                - General Ledger Account
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostGLAccountsResponse'
                    description: ''
            operationId: createGLAccountPost
            summary: Create a General Ledger Account
            description: >-
                Note: You may optionally create Hierarchical Chart of Accounts by using the "parentId"
                property of an Account

                Mandatory Fields: 

                name, glCode, type, usage and manualEntriesAllowed
            x-codegen-request-body-name: body
    '/glaccounts/{glAccountId}':
        get:
            tags:
                - General Ledger Account
            parameters:
                -
                    name: glAccountId
                    description: glAccountId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: fetchRunningBalance
                    description: fetchRunningBalance
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGLAccountsResponse'
                    description: ''
            operationId: retreiveAccount
            summary: Retrieve a General Ledger Account
            description: |-
                Example Requests:

                glaccounts/1


                glaccounts/1?template=true


                glaccounts/1?fields=name,glCode


                glaccounts/1?fetchRunningBalance=true
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutGLAccountsRequest'
                required: false
            tags:
                - General Ledger Account
            parameters:
                -
                    name: glAccountId
                    description: glAccountId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutGLAccountsResponse'
                    description: ''
            operationId: updateGLAccountPut
            summary: Update an Accounting closure
            description: |+
                Once an accounting closure is created, only the comments associated with it may be edited

            x-codegen-request-body-name: body
        delete:
            tags:
                - General Ledger Account
            parameters:
                -
                    name: glAccountId
                    description: glAccountId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteGLAccountsRequest'
                    description: ''
            operationId: deleteGLAccountDelete
            summary: Delete an accounting closure
            description: 'Note: Only the latest accounting closure associated with a branch may be deleted.'
    '/journalentries/{journalEntryId}':
        get:
            tags:
                - Journal Entries
            parameters:
                -
                    name: journalEntryId
                    description: journalEntryId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: runningBalance
                    description: runningBalance
                    schema:
                        type: boolean
                    in: query
                -
                    name: transactionDetails
                    description: transactionDetails
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JournalEntryData'
                    description: ''
            operationId: retreiveJournalEntryById
            summary: Retrieve a single Entry
            description: |-
                Example Requests:

                journalentries/1



                journalentries/1?fields=officeName,glAccountId,entryType,amount

                journalentries/1?runningBalance=true

                journalentries/1?transactionDetails=true
    /journalentries:
        get:
            tags:
                - Journal Entries
            parameters:
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: glAccountId
                    description: glAccountId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: manualEntriesOnly
                    description: manualEntriesOnly
                    schema:
                        type: boolean
                    in: query
                -
                    name: fromDate
                    description: fromDate
                    schema:
                        type: string
                    in: query
                -
                    name: toDate
                    description: toDate
                    schema:
                        type: string
                    in: query
                -
                    name: transactionId
                    description: transactionId
                    schema:
                        type: string
                    in: query
                -
                    name: entityType
                    description: entityType
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
                -
                    name: locale
                    description: locale
                    schema:
                        type: string
                    in: query
                -
                    name: dateFormat
                    description: dateFormat
                    schema:
                        type: string
                    in: query
                -
                    name: loanId
                    description: loanId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: savingsId
                    description: savingsId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: runningBalance
                    description: runningBalance
                    schema:
                        type: boolean
                    in: query
                -
                    name: transactionDetails
                    description: transactionDetails
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/JournalEntryData'
                    description: ''
            operationId: retrieveAllGet
            summary: List Journal Entries
            description: >-
                The list capability of journal entries can support pagination and sorting.


                Example Requests:


                journalentries


                journalentries?transactionId=PB37X8Y21EQUY4S


                journalentries?officeId=1&manualEntriesOnly=true&fromDate=1 July 2013&toDate=15 July
                2013&dateFormat=dd MMMM yyyy&locale=en


                journalentries?fields=officeName,glAccountName,transactionDate


                journalentries?offset=10&limit=50


                journalentries?orderBy=transactionId&sortOrder=DESC


                journalentries?runningBalance=true


                journalentries?transactionDetails=true


                journalentries?loanId=12


                journalentries?savingsId=24
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/JournalEntryCommand'
                required: false
            tags:
                - Journal Entries
            parameters:
                -
                    name: command
                    description: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostJournalEntriesResponse'
                    description: ''
            operationId: createGLJournalEntry
            summary: Create "Balanced" Journal Entries
            description: >-
                Note: A Balanced (simple) Journal entry would have atleast one "Debit" and one "Credit" entry
                whose amounts are equal 

                Compound Journal entries may have "n" debits and "m" credits where both "m" and "n" are
                greater than 0 and the net sum or all debits and credits are equal 



                Mandatory Fields

                officeId, transactionDate



                credits- glAccountId, amount, comments

                 
                debits-  glAccountId, amount, comments

                 
                Optional Fields

                paymentTypeId, accountNumber, checkNumber, routingCode, receiptNumber, bankNumber
            x-codegen-request-body-name: body
    /journalentries/provisioning:
        get:
            tags:
                - Journal Entries
            parameters:
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: entryId
                    schema:
                        format: int64
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveJournalEntries
    /journalentries/openingbalance:
        get:
            tags:
                - Journal Entries
            parameters:
                -
                    name: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: currencyCode
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveOpeningBalance
    /provisioningentries:
        get:
            tags:
                - Provisioning Entries
            parameters:
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ProvisioningEntryData'
                    description: ''
            operationId: retrieveAllProvisioningEntries
            summary: List all Provisioning Entries
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostProvisioningEntriesRequest'
                required: false
            tags:
                - Provisioning Entries
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostProvisioningEntriesResponse'
                    description: ''
            operationId: createProvisioningEntries
            summary: Create new Provisioning Entries
            description: |-
                Creates a new Provisioning Entries

                Mandatory Fields
                date
                dateFormat
                locale
                Optional Fields
                createjournalentries
            x-codegen-request-body-name: body
    '/provisioningentries/{entryId}':
        get:
            tags:
                - Provisioning Entries
            parameters:
                -
                    name: entryId
                    description: entryId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProvisioningEntryData'
                    description: ''
            operationId: retrieveProvisioningEntry
            summary: Retrieves a Provisioning Entry
            description: Returns the details of a generated Provisioning Entry.
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutProvisioningEntriesRequest'
                required: false
            tags:
                - Provisioning Entries
            parameters:
                -
                    name: entryId
                    description: entryId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    description: |-
                        command=createjournalentry
                        command=recreateprovisioningentry
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutProvisioningEntriesResponse'
                    description: ''
            operationId: modifyProvisioningEntry
            summary: Recreates Provisioning Entry
            description: Recreates Provisioning Entry | createjournalentry.
            x-codegen-request-body-name: body
    /provisioningentries/entries:
        get:
            tags:
                - Provisioning Entries
            parameters:
                -
                    name: entryId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: productId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: categoryId
                    schema:
                        format: int64
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoanProductProvisioningEntryData'
                    description: ''
            operationId: retrieveProviioningEntries
    /accountingrules:
        get:
            tags:
                - Accounting Rules
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetAccountRulesResponse'
                    description: ''
            operationId: retrieveAllAccountingRules
            summary: Retrieve Accounting Rules
            description: |-
                Returns the list of defined accounting rules.

                Example Requests:

                accountingrules
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostAccountingRulesRequest'
                required: false
            tags:
                - Accounting Rules
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostAccountingRulesResponse'
                    description: ''
            operationId: createAccountingRule
            summary: Create/Define a Accounting rule
            description: |-
                Define a new Accounting rule.

                Mandatory Fields
                name, officeId,
                accountToDebit OR debitTags,
                accountToCredit OR creditTags.

                Optional Fields
                description
            x-codegen-request-body-name: body
    '/accountingrules/{accountingRuleId}':
        get:
            tags:
                - Accounting Rules
            parameters:
                -
                    name: accountingRuleId
                    description: accountingRuleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccountingRuleData'
                    description: ''
            operationId: retreiveAccountingRule
            summary: Retrieve a Accounting rule
            description: |-
                Returns the details of a defined Accounting rule.

                Example Requests:

                accountingrules/1
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutAccountingRulesRequest'
                required: false
            tags:
                - Accounting Rules
            parameters:
                -
                    name: accountingRuleId
                    description: accountingRuleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutAccountingRulesResponse'
                    description: ''
            operationId: updateAccountingRule
            summary: Update a Accounting Rule
            description: Updates the details of a Accounting rule.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Accounting Rules
            parameters:
                -
                    name: accountingRuleId
                    description: accountingRuleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAccountingRulesResponse'
                    description: ''
            operationId: deleteAccountingRule
            summary: Delete a Accounting Rule
            description: Deletes a Accounting rule.
    /accountingrules/template:
        get:
            tags:
                - Accounting Rules
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountRulesTemplateResponse'
                    description: ''
            operationId: retrieveTemplateGet
            summary: Retrieve Accounting Rule Details Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists

                Example Request:


                accountingrules/template
    /batches:
        post:
            requestBody:
                description: request body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostBatchesRequest'
                required: true
            tags:
                - Batch API
            parameters:
                -
                    name: enclosingTransaction
                    description: enclosingTransaction
                    schema:
                        default: false
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BatchResponse'
                    description: Success
            operationId: handleBatchRequests
            summary: Batch requests in a single transaction
            description: >-
                The Apache Fineract Batch API is also capable of executing all the requests in a single
                transaction, by setting a Query Parameter, "enclosingTransaction=true". So, if one or more of
                the requests in a batch returns an erroneous response all of the Data base transactions made
                by other successful requests will be rolled back.


                If there has been a rollback in a transaction then a single response will be provided, with a
                '400' status code and a body consisting of the error details of the first failed request.
            x-codegen-request-body-name: body
    '/audits/{auditId}':
        get:
            tags:
                - Audits
            parameters:
                -
                    name: auditId
                    description: auditId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMakerCheckerResponse'
                    description: ''
            operationId: retrieveAuditEntry
            summary: Retrieve an Audit Entry
            description: |-
                Example Requests:

                audits/20
                audits/20?fields=madeOnDate,maker,processingResult
    /audits/searchtemplate:
        get:
            tags:
                - Audits
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
                    description: ''
            operationId: retrieveAuditSearchTemplate
            summary: Audit Search Template
            description: >-
                This is a convenience resource. It can be useful when building an Audit Search UI. "appUsers"
                are data scoped to the office/branch the requestor is associated with.


                Example Requests:


                audits/searchtemplate

                audits/searchtemplate?fields=actionNames
    /audits:
        get:
            tags:
                - Audits
            parameters:
                -
                    name: actionName
                    description: actionName
                    schema:
                        type: string
                    in: query
                -
                    name: entityName
                    description: entityName
                    schema:
                        type: string
                    in: query
                -
                    name: resourceId
                    description: resourceId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: makerId
                    description: makerId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: makerDateTimeFrom
                    description: makerDateTimeFrom
                    schema:
                        type: string
                    in: query
                -
                    name: makerDateTimeTo
                    description: makerDateTimeTo
                    schema:
                        type: string
                    in: query
                -
                    name: checkerId
                    description: checkerId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: checkerDateTimeFrom
                    description: checkerDateTimeFrom
                    schema:
                        type: string
                    in: query
                -
                    name: checkerDateTimeTo
                    description: checkerDateTimeTo
                    schema:
                        type: string
                    in: query
                -
                    name: processingResult
                    description: processingResult
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: groupId
                    description: groupId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: clientId
                    description: clientId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: loanid
                    description: loanid
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: savingsAccountId
                    description: savingsAccountId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: paged
                    description: paged
                    schema:
                        type: boolean
                    in: query
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetMakerCheckerResponse'
                    description: ''
            operationId: retrieveAuditEntries
            summary: List Audits
            description: >-
                Get a 200 list of audits that match the criteria supplied and sorted by audit id in descending
                order, and are within the requestors' data scope. Also it supports pagination and sorting


                Example Requests:


                audits


                audits?fields=madeOnDate,maker,processingResult


                audits?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00


                audits?officeId=1


                audits?officeId=1&includeJson=true
    /makercheckers/searchtemplate:
        get:
            tags:
                - Maker Checker (or 4-eye) functionality
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetMakerCheckersSearchTemplateResponse'
                    description: ''
            operationId: retrieveAuditSearchTemplateGet
            summary: Maker Checker Search Template
            description: >-
                This is a convenience resource. It can be useful when building a Checker Inbox UI. "appUsers"
                are data scoped to the office/branch the requestor is associated with. "actionNames" and
                "entityNames" returned are those that the requestor has Checker approval permissions for.


                Example Requests:


                makercheckers/searchtemplate

                makercheckers/searchtemplate?fields=entityNames
    /makercheckers:
        get:
            tags:
                - Maker Checker (or 4-eye) functionality
            parameters:
                -
                    name: actionName
                    description: actionName
                    schema:
                        type: string
                    in: query
                -
                    name: entityName
                    description: entityName
                    schema:
                        type: string
                    in: query
                -
                    name: resourceId
                    description: resourceId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: makerId
                    description: makerId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: makerDateTimeFrom
                    description: makerDateTimeFrom
                    schema:
                        type: string
                    in: query
                -
                    name: makerDateTimeTo
                    description: makerDateTimeTo
                    schema:
                        type: string
                    in: query
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: groupId
                    description: groupId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: clientId
                    description: clientId
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: loanid
                    description: loanid
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: savingsAccountId
                    description: savingsAccountId
                    schema:
                        format: int32
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetMakerCheckerResponse'
                    description: ''
            operationId: retrieveCommands
            summary: List Maker Checker Entries
            description: |-
                Get a list of entries that can be checked by the requestor that match the criteria supplied.

                Example Requests:

                makercheckers

                makercheckers?fields=madeOnDate,maker,processingResult

                makercheckers?makerDateTimeFrom=2013-03-25 08:00:00&makerDateTimeTo=2013-04-04 18:00:00

                makercheckers?officeId=1

                makercheckers?officeId=1&includeJson=true
    '/makercheckers/{auditId}':
        post:
            tags:
                - Maker Checker (or 4-eye) functionality
            parameters:
                -
                    name: auditId
                    description: auditId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    description: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostMakerCheckersResponse'
                    description: ''
            operationId: approveMakerCheckerEntry
            summary: Approve Maker Checker Entry | Reject Maker Checker Entry
        delete:
            tags:
                - Maker Checker (or 4-eye) functionality
            parameters:
                -
                    name: auditId
                    description: auditId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostMakerCheckersResponse'
                    description: ''
            operationId: deleteMakerCheckerEntry
            summary: Delete Maker Checker Entry
    /accountnumberformats:
        get:
            tags:
                - Account number format
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
                    description: ''
            operationId: retrieveAllGetNumberFormats
            summary: List Account number formats
            description: |-
                Example Requests:

                accountnumberformats


                accountnumberformats?fields=accountType,prefixType
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostAccountNumberFormatsRequest'
                required: false
            tags:
                - Account number format
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostAccountNumberFormatsResponse'
                    description: ''
            operationId: create
            summary: Create an Account number format
            description: |-
                Note: You may associate a single Account number format for a given account type
                Mandatory Fields for Account number formats
                accountType
            x-codegen-request-body-name: body
    '/accountnumberformats/{accountNumberFormatId}':
        get:
            tags:
                - Account number format
            parameters:
                -
                    name: accountNumberFormatId
                    description: accountNumberFormatId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountNumberFormatsIdResponse'
                    description: ''
            operationId: retrieveOne
            summary: Retrieve an Account number format
            description: |-
                Example Requests:

                accountnumberformats/1


                accountnumberformats/1?template=true


                accountnumberformats/1?fields=accountType,prefixType
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutAccountNumberFormatsRequest'
                required: true
            tags:
                - Account number format
            parameters:
                -
                    name: accountNumberFormatId
                    description: accountNumberFormatId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutAccountNumberFormatsResponse'
                    description: ''
            operationId: update
            summary: Update an Account number format
            x-codegen-request-body-name: body
        delete:
            tags:
                - Account number format
            parameters:
                -
                    name: accountNumberFormatId
                    description: accountNumberFormatId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteAccountNumberFormatsResponse'
                    description: ''
            operationId: delete
            summary: Delete an Account number format
            description: 'Note: Account numbers created while this format was active would remain unchanged.'
    /accountnumberformats/template:
        get:
            tags:
                - Account number format
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAccountNumberFormatsResponseTemplate'
                    description: ''
            operationId: retrieveTemplateGetFormat
            summary: Retrieve Account number format Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists


                Example Request:


                accountnumberformats/template
    /caches:
        get:
            tags:
                - Cache
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetCachesResponse'
                    description: ''
            operationId: retrieveAllCaches
            summary: Retrieve Cache Types
            description: |-
                Returns the list of caches.

                Example Requests:

                caches
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutCachesRequest'
                required: true
            tags:
                - Cache
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutCachesResponse'
                    description: ''
            operationId: switchCache
            summary: Switch Cache
            description: Switches the cache to chosen one.
            x-codegen-request-body-name: body
    /smscampaigns:
        get:
            tags:
                - SMS Campaigns
            parameters:
                -
                    name: sqlSearch
                    schema:
                        type: string
                    in: query
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllCampaigns
            summary: List SMS Campaigns
            description: |-
                Example Requests:

                smscampaigns
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CommandWrapper'
                required: true
            tags:
                - SMS Campaigns
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: createCampaign
            summary: Create a SMS Campaign
            description: |-
                Mandatory Fields
                campaignName, campaignType, triggerType, providerId, runReportId, message

                Mandatory Fields for Cash based on selected report id
                paramValue in json format
            x-codegen-request-body-name: body
    '/smscampaigns/{campaignId}':
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CommandWrapper'
                required: true
            tags:
                - SMS Campaigns
            parameters:
                -
                    name: campaignId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateCampaign
            summary: Update a Campaign
            x-codegen-request-body-name: body
        post:
            tags:
                - SMS Campaigns
            parameters:
                -
                    name: campaignId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: handleCommands
            summary: SMS Campaign
            description: Activates | Deactivates | Reactivates
        delete:
            tags:
                - SMS Campaigns
            parameters:
                -
                    name: campaignId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: successful operation
            operationId: deleteSMS
            summary: Delete a SMS Campaign
            description: 'Note: Only closed SMS Campaigns can be deleted'
    /smscampaigns/template:
        get:
            tags:
                - SMS Campaigns
            responses:
                '200':
                    content:
                        '*/*':
                            schema:
                                type: string
                    description: successful operation
            operationId: template
            summary: Retrieve a SMS Campaign
            description: |-
                Example Requests:

                smscampaigns/1


                smscampaigns/1?template=true


                smscampaigns/template
    /smscampaigns/preview:
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - SMS Campaigns
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: preview
            x-codegen-request-body-name: body
    '/codes/{codeId}/codevalues':
        get:
            tags:
                - Code Values
            parameters:
                -
                    name: codeId
                    description: codeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetCodeValuesDataResponse'
                    description: A List of Given response
            operationId: retrieveAllCodeValues
            summary: List Code Values
            description: |-
                Returns the list of Code Values for a given Code

                Example Requests:

                codes/1/codevalues
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostCodeValuesDataRequest'
                required: true
            tags:
                - Code Values
            parameters:
                -
                    name: codeId
                    description: codeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostCodeValueDataResponse'
                    description: ''
            operationId: createCodeValue
            summary: Create a Code Value
            x-codegen-request-body-name: body
    '/codes/{codeId}':
        get:
            tags:
                - Codes
            parameters:
                -
                    name: codeId
                    description: codeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCodesResponse'
                    description: ''
            operationId: retrieveCode
            summary: Retrieve a Code
            description: |-
                Returns the details of a Code.

                Example Requests:

                codes/1
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutCodesRequest'
                required: true
            tags:
                - Codes
            parameters:
                -
                    name: codeId
                    description: codeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutCodesResponse'
                    description: ''
            operationId: updateCode
            summary: Update a Code
            description: Updates the details of a code if it is not system defined.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Codes
            parameters:
                -
                    name: codeId
                    description: codeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteCodesResponse'
                    description: ''
            operationId: deleteCode
            summary: Delete a Code
            description: Deletes a code if it is not system defined.
    '/externalservice/{servicename}':
        get:
            tags:
                - External Services
            parameters:
                -
                    name: servicename
                    description: servicename
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExternalServicesPropertiesData'
                    description: ''
            operationId: retrieveOneSMS
            summary: Retrieve External Services Configuration
            description: |-
                Returns a external Service configurations based on the Service Name.

                Service Names supported are S3 and SMTP.

                Example Requests:

                externalservice/SMTP
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutExternalServiceRequest'
                required: true
            tags:
                - External Services
            parameters:
                -
                    name: servicename
                    description: servicename
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    description: ''
            operationId: updateExternalServiceProperties
            summary: Update External Service
            description: |-
                Updates the external Service Configuration for a Service Name.

                Example: 

                externalservice/S3
            x-codegen-request-body-name: body
    /configurations:
        get:
            tags:
                - Global Configuration
            parameters:
                -
                    name: survey
                    description: survey
                    schema:
                        default: false
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
                    description: |-
                        List of example 
                         response 
                        surveys response   
                        given below
            operationId: retrieveConfiguration
            summary: Retrieve Global Configuration | Retrieve Global Configuration for surveys
            description: |-
                Returns the list global enable/disable configurations.

                Example Requests:

                configurations


                Returns the list global enable/disable survey configurations.

                Example Requests:

                configurations/survey
    '/configurations/{configId}':
        get:
            tags:
                - Global Configuration
            parameters:
                -
                    name: configId
                    description: configId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetGlobalConfigurationsResponse'
                    description: ''
            operationId: retrieveOneConf
            summary: Retrieve Global Configuration
            description: |-
                Returns a global enable/disable configurations.

                Example Requests:

                configurations/1
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutGlobalConfigurationsRequest'
                required: true
            tags:
                - Global Configuration
            parameters:
                -
                    name: configId
                    description: configId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutGlobalConfigurationsResponse'
                    description: ''
            operationId: updateConfiguration
            summary: Update Global Configuration
            description: Updates an enable/disable global configuration item.
            x-codegen-request-body-name: body
    /CreditBureauConfiguration/organisationCreditBureau:
        get:
            tags:
                - CreditBureau Configuration
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getOrganisationCreditBureau
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - CreditBureau Configuration
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateCreditBureau
            x-codegen-request-body-name: body
    /CreditBureauConfiguration/loanProduct:
        get:
            tags:
                - CreditBureau Configuration
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: fetchLoanProducts
    /CreditBureauConfiguration/mappings:
        get:
            tags:
                - CreditBureau Configuration
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getCreditBureauLoanProductMapping
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - CreditBureau Configuration
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateCreditBureauLoanProductMapping
            x-codegen-request-body-name: body
    '/CreditBureauConfiguration/organisationCreditBureau/{organisationCreditBureauId}':
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - CreditBureau Configuration
            parameters:
                -
                    name: organisationCreditBureauId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: addOrganisationCreditBureau
            x-codegen-request-body-name: body
    '/CreditBureauConfiguration/mappings/{CreditBureauId}':
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - CreditBureau Configuration
            parameters:
                -
                    name: CreditBureauId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: createCreditBureauLoanProductMapping
            x-codegen-request-body-name: body
    '/CreditBureauConfiguration/config/{organisationCreditBureauId}':
        get:
            tags:
                - CreditBureau Configuration
            parameters:
                -
                    name: organisationCreditBureauId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getConfiguration
    /CreditBureauConfiguration:
        get:
            tags:
                - CreditBureau Configuration
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getCreditBureau
    /datatables:
        get:
            tags:
                - Data Tables
            parameters:
                -
                    name: apptable
                    description: apptable
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetDataTablesResponse'
                    description: ''
            operationId: getDatatables
            summary: List Data Tables
            description: >-
                Lists registered data tables and the Apache Fineract Core application table they are
                registered to.


                ARGUMENTS


                apptable  - optional

                The Apache Fineract core application table.


                Example Requests:


                datatables?apptable=m_client



                datatables
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostDataTablesRequest'
                required: true
            tags:
                - Data Tables
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostDataTablesResponse'
                    description: ''
            operationId: createDatatable
            summary: Create Data Table
            description: >-
                Create a new data table and registers it with the Apache Fineract Core application table.


                Field Descriptions


                Mandatory - datatableName : 


                The name of the Data Table.


                Mandatory - apptableName


                Application table name. Must be one of the following:


                m_client


                m_group


                m_loan


                m_office


                m_saving_account


                m_product_loan


                m_savings_product


                Mandatory - columns  

                An array of columns in the new Data Table.


                Optional - multiRow


                Allows to create multiple entries in the Data Table. Optional, defaults to false. If this
                property is not provided Data Table will allow only one entry.


                Field Descriptions - columns


                Mandatory - name


                Name of the created column. Can contain only alphanumeric characters, underscores and spaces,
                but cannot start with a number. Cannot start or end with an underscore or space.


                Mandatory - type


                Column type. Must be one of the following:


                Boolean


                Date


                DateTime


                Decimal


                Dropdown



                Number


                String


                Text


                Mandatory [type = Dropdown] - code


                Used in Code Value fields. Column name becomes: code_cd_name. Mandatory if using type
                Dropdown, otherwise an error is returned.


                Optional - mandatory


                Determines whether this column must have a value in every entry. Optional, defaults to false.


                Mandatory [type = String] - length


                Length of the text field. Mandatory if type String is used, otherwise an error is returned.
            x-codegen-request-body-name: body
    '/datatables/register/{datatable}/{apptable}':
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostDataTablesRegisterDatatableAppTable'
                required: false
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptable
                    description: apptable
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutDataTablesResponse'
                    description: ''
            operationId: registerDatatable
            summary: Register Data Table
            description: >-
                Registers a data table with the Apache Fineract Core application table. This allows the data
                table to be maintained through the API. In case the datatable is a PPI (survey table), a
                parameter category should be pass along with the request. The API currently support one
                category (200)
            x-codegen-request-body-name: body
    '/datatables/deregister/{datatable}':
        post:
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutDataTablesResponse'
                    description: ''
            operationId: deregisterDatatable
            summary: Deregister Data Table
            description: Deregisters a data table. It will no longer be available through the API.
    '/datatables/{datatable}':
        get:
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDataTablesResponse'
                    description: ''
            operationId: getDatatable
            summary: Retrieve Data Table Details
            description: >-
                Lists a registered data table details and the Apache Fineract Core application table they are
                registered to.
    '/datatables/{datatable}/{apptableId}':
        get:
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptableId
                    description: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: order
                    description: order
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetDataTablesAppTableIdResponse'
                    description: ''
            operationId: getDatatableGet
            summary: Retrieve Entry(s) from Data Table
            description: >-
                Gets the entry (if it exists) for data tables that are one to one with the application table. 

                Gets the entries (if they exist) for data tables that are one to many with the application
                table.


                Note: The 'fields' parameter is not available for datatables.


                ARGUMENTS

                orderoptional Specifies the order in which data is returned.genericResultSetoptional, defaults
                to false If 'true' an optimised JSON format is returned suitable for tabular display of data.
                This format is used by the default data tables UI functionality.

                Example Requests:


                datatables/extra_client_details/1



                datatables/extra_family_details/1?order=`Date of Birth` desc



                datatables/extra_client_details/1?genericResultSet=true
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutDataTablesAppTableIdRequest'
                required: true
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptableId
                    description: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutDataTablesAppTableIdResponse'
                    description: ''
            operationId: updateDatatableEntryOnetoOne
            summary: Update Entry in Data Table (One to One)
            description: Updates the row (if it exists) of the data table.
            x-codegen-request-body-name: body
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostDataTablesAppTableIdRequest'
                required: true
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptableId
                    description: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostDataTablesAppTableIdResponse'
                    description: ''
            operationId: createDatatableEntry
            summary: Create Entry in Data Table
            description: >-
                Adds a row to the data table.


                Note that the default datatable UI functionality converts any field name containing spaces to
                underscores when using the API. This means the field name "Business Description" is considered
                the same as "Business_Description". So you shouldn't have both "versions" in any data table.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptableId
                    description: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteDataTablesDatatableAppTableIdResponse'
                    description: ''
            operationId: deleteDatatableEntries
            summary: Delete Entry(s) in Data Table
            description: >-
                Deletes the entry (if it exists) for data tables that are one-to-one with the application
                table. 

                Deletes the entries (if they exist) for data tables that are one-to-many with the application
                table.
    '/datatables/{datatable}/{apptableId}/{datatableId}':
        get:
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: datatableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: order
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getDatatableManyEntry
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdRequest'
                required: true
            tags:
                - Data Tables
            parameters:
                -
                    name: datatable
                    description: datatable
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptableId
                    description: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: datatableId
                    description: datatableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutDataTablesAppTableIdDatatableIdResponse'
                    description: ''
            operationId: updateDatatableEntryOneToMany
            summary: Update Entry in Data Table (One to Many)
            description: Updates the row (if it exists) of the data table.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Data Tables
            parameters:
                -
                    example: '{}'
                    name: datatable
                    description: datatable
                    schema: {}
                    in: path
                    required: true
                -
                    name: apptableId
                    description: apptableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: datatableId
                    description: datatableId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: >-
                                    #/components/schemas/DeleteDataTablesDatatableAppTableIdDatatableIdResponse
                    description: ''
            operationId: deleteDatatableEntriesDel
            summary: Delete Entry in Datatable (One to Many)
            description: >+
                Deletes the entry (if it exists) for data tables that are one to many with the application
                table.

    /entityDatatableChecks:
        get:
            tags:
                - Entity-Datatable Checks
            parameters:
                -
                    name: status
                    description: status
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: entity
                    description: entity
                    schema:
                        type: string
                    in: query
                -
                    name: productId
                    description: productId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetEntityDatatableChecksResponse'
                    description: ''
            operationId: retrieveAllChecks
            summary: List Entity-Datatable Checks
            description: >-
                The list capability of Entity-Datatable Checks can support pagination.


                OPTIONAL ARGUMENTS

                offset Integer optional, defaults to 0 Indicates the result from which pagination startslimit
                Integer optional, defaults to 200 Restricts the size of results returned. To override the
                default and return all entries you must explicitly pass a non-positive integer value for limit
                e.g. limit=0, or limit=-1

                Example Request:


                entityDatatableChecks?offset=0&limit=15
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostEntityDatatableChecksTemplateRequest'
                required: true
            tags:
                - Entity-Datatable Checks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostEntityDatatableChecksTemplateResponse'
                    description: ''
            operationId: createEntityDatatableCheck
            summary: Create Entity-Datatable Checks
            description: |-
                Mandatory Fields : 
                entity, status, datatableName

                Non-Mandatory Fields : 
                productId
            x-codegen-request-body-name: body
    /entityDatatableChecks/template:
        get:
            tags:
                - Entity-Datatable Checks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEntityDatatableChecksTemplateResponse'
                    description: ''
            operationId: getTemplate
            summary: Retrieve Entity-Datatable Checks Template
            description: >-
                This is a convenience resource useful for building maintenance user interface screens for
                Entity-Datatable Checks applications. The template data returned consists of:


                Allowed Value Lists

                Example Request:


                entityDatatableChecks/template
    '/reports/{id}':
        get:
            tags:
                - Reports
            parameters:
                -
                    name: id
                    description: id
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReportsResponse'
                    description: ''
            operationId: retrieveReport
            summary: |
                Retrieve a Report
            description: |-
                Example Requests:

                reports/1


                reports/1?template=true
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutReportRequest'
                required: true
            tags:
                - Reports
            parameters:
                -
                    name: id
                    description: id
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutReportResponse'
                    description: ''
            operationId: updateReport
            summary: Update a Report
            description: Only the useReport value can be updated for core reports.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Reports
            parameters:
                -
                    name: id
                    description: id
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteReportsResponse'
                    description: ''
            operationId: deleteReport
            summary: Delete a Report
            description: Only non-core reports can be deleted.
    /reports:
        get:
            tags:
                - Reports
            responses:
                '200':
                    description: ''
            operationId: retrieveReportList
            summary: List Reports
            description: |-
                Lists all reports and their parameters.

                Example Request:

                reports
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostRepostRequest'
                required: true
            tags:
                - Reports
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostReportsResponse'
                    description: ''
            operationId: createReport
            summary: Create a Report
            x-codegen-request-body-name: body
    /reports/template:
        get:
            tags:
                - Reports
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReportsTemplateResponse'
                    description: ''
            operationId: retrieveOfficeTemplate
            summary: Retrieve Report Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists


                Example Request : 


                reports/template
    '/runreports/{reportName}':
        get:
            tags:
                - Run Reports
            parameters:
                -
                    name: reportName
                    description: reportName
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReportNameResponse'
                        text/csv:
                            schema:
                                $ref: '#/components/schemas/GetReportNameResponse'
                        application/vnd.ms-excel:
                            schema:
                                $ref: '#/components/schemas/GetReportNameResponse'
                        application/pdf:
                            schema:
                                $ref: '#/components/schemas/GetReportNameResponse'
                        text/html:
                            schema:
                                $ref: '#/components/schemas/GetReportNameResponse'
                    description: ''
            operationId: runReport
            summary: Running a Report
            description: >-
                This resource allows you to run and receive output from pre-defined Apache Fineract reports.


                Reports can also be used to provide data for searching and workflow functionality.


                The default output is a JSON formatted "Generic Resultset". The Generic Resultset contains
                Column Heading as well as Data information. However, you can export to CSV format by simply
                adding "&exportCSV=true" to the end of your URL.


                If Pentaho reports have been pre-defined, they can also be run through this resource. Pentaho
                reports can return HTML, PDF or CSV formats.


                The Apache Fineract reference application uses a JQuery plugin called stretchy reporting
                which, itself, uses this reports resource to provide a pretty flexible reporting User
                Interface (UI).




                Example Requests:


                runreports/Client%20Listing?R_officeId=1



                runreports/Client%20Listing?R_officeId=1&exportCSV=true



                runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true



                runreports/OfficeIdSelectOne?R_officeId=1&parameterType=true&exportCSV=true



                runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=HTML&R_officeId=1



                runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=XLS&R_officeId=1



                runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=CSV&R_officeId=1



                runreports/Expected%20Payments%20By%20Date%20-%20Formatted?R_endDate=2013-04-30&R_loanOfficerId=-1&R_officeId=1&R_startDate=2013-04-16&output-type=PDF&R_officeId=1
    '/{entityType}/{entityId}/documents':
        get:
            tags:
                - Documents
            parameters:
                -
                    name: entityType
                    description: entityType
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
                    description: ''
            operationId: retreiveAllDocuments
            summary: List documents
            description: |-
                Example Requests:

                clients/1/documents

                client_identifiers/1/documents

                loans/1/documents?fields=name,description
        post:
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    description: file
                                    type: string
                                name:
                                    description: name
                                    type: string
                                description:
                                    description: description
                                    type: string
            tags:
                - Documents
            parameters:
                -
                    name: entityType
                    description: entityType
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: Content-Length
                    description: Content-Length
                    schema:
                        format: int64
                        type: integer
                    in: header
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostEntityTypeEntityIdDocumentsResponse'
                    description: Not Shown (multi-part form data)
            operationId: createDocument
            summary: Create a Document
            description: |-
                Note: A document is created using a Multi-part form upload 

                Body Parts

                name : 
                Name or summary of the document

                description : 
                Description of the document

                file : 
                The file to be uploaded

                Mandatory Fields : 
                file and description
    '/{entityType}/{entityId}/documents/{documentId}':
        get:
            tags:
                - Documents
            parameters:
                -
                    name: entityType
                    description: entityType
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: documentId
                    description: documentId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetEntityTypeEntityIdDocumentsResponse'
                    description: ''
            operationId: getDocument
            summary: Retrieve a Document
            description: |-
                Example Requests:

                clients/1/documents/1


                loans/1/documents/1


                client_identifiers/1/documents/1?fields=name,description
        put:
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    description: file
                                    type: string
                                name:
                                    description: name
                                    type: string
                                description:
                                    description: description
                                    type: string
            tags:
                - Documents
            parameters:
                -
                    name: entityType
                    description: entityType
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: documentId
                    description: documentId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: Content-Length
                    description: Content-Length
                    schema:
                        format: int64
                        type: integer
                    in: header
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponse'
                    description: Not Shown (multi-part form data)
            operationId: updateDocument
            summary: Update a Document
            description: |-
                Note: A document is updated using a Multi-part form upload 
                Body Parts
                name
                Name or summary of the document
                description
                Description of the document
                file
                The file to be uploaded
        delete:
            tags:
                - Documents
            parameters:
                -
                    name: entityType
                    description: entityType
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: documentId
                    description: documentId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteEntityTypeEntityIdDocumentsResponse'
                    description: ''
            operationId: deleteDocument
            summary: Remove a Document
    '/{entityType}/{entityId}/documents/{documentId}/attachment':
        get:
            tags:
                - Documents
            parameters:
                -
                    name: entityType
                    description: entityType
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: documentId
                    description: documentId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    description: 'Not Shown: The corresponding Binary file'
            operationId: downloadFile
            summary: Retrieve Binary File associated with Document
            description: |-
                Request used to download the file associated with the document

                Example Requests:

                clients/1/documents/1/attachment


                loans/1/documents/1/attachment
    '/{entity}/{entityId}/images':
        get:
            tags:
                - 'DomainNameapiv1{entity}{entityId}images'
            parameters:
                -
                    name: entity
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: maxWidth
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: maxHeight
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: output
                    schema:
                        type: string
                    in: query
            responses:
                default:
                    description: successful operation
            operationId: downloadClientImage
        put:
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            properties:
                                file:
                                    format: binary
                                    type: string
            tags:
                - 'DomainNameapiv1{entity}{entityId}images'
            parameters:
                -
                    name: entity
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: Content-Length
                    schema:
                        format: int64
                        type: integer
                    in: header
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateClientImage
        post:
            requestBody:
                content:
                    text/plain:
                        schema:
                            type: string
                    text/html:
                        schema:
                            type: string
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - 'DomainNameapiv1{entity}{entityId}images'
            parameters:
                -
                    name: entity
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: addNewClientImage
            x-codegen-request-body-name: body
        delete:
            tags:
                - 'DomainNameapiv1{entity}{entityId}images'
            parameters:
                -
                    name: entity
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: deleteClientImage
    '/entitytoentitymapping/{mapId}/{fromId}/{toId}':
        get:
            tags:
                - DomainNameapiv1entitytoentitymapping
            parameters:
                -
                    name: mapId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: fromId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: toId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getEntityToEntityMappings
    /entitytoentitymapping:
        get:
            tags:
                - DomainNameapiv1entitytoentitymapping
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllEntityMapping
    '/entitytoentitymapping/{relId}':
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - DomainNameapiv1entitytoentitymapping
            parameters:
                -
                    name: relId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: createMap
            x-codegen-request-body-name: body
    /hooks:
        get:
            tags:
                - Hooks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetHookResponse'
                    description: ''
            operationId: retrieveHooks
            summary: Retrieve Hooks
            description: |-
                Returns the list of hooks.

                Example Requests:

                hooks
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostHookRequest'
                required: true
            tags:
                - Hooks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostHookResponse'
                    description: ''
            operationId: createHook
            summary: Create a Hook
            description: >-
                The following parameters can be passed for the creation of a hook :-


                name - string - Required. The name of the template that is being called. (See /hooks/template
                for the list of valid hook names.)


                isActive - boolean - Determines whether the hook is actually triggered.


                events - array - Determines what events the hook is triggered for.


                config - hash - Required. Key/value pairs to provide settings for this hook. These settings
                vary between the templates.


                templateId - Optional. The UGD template ID associated with the same entity (client or loan).
            x-codegen-request-body-name: body
    '/hooks/{hookId}':
        get:
            tags:
                - Hooks
            parameters:
                -
                    name: hookId
                    description: hookId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHookResponse'
                    description: ''
            operationId: retrieveHook
            summary: Retrieve a Hook
            description: |-
                Returns the details of a Hook.

                Example Requests:

                hooks/1
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutHookRequest'
                required: true
            tags:
                - Hooks
            parameters:
                -
                    name: hookId
                    description: hookId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutHookResponse'
                    description: ''
            operationId: updateHook
            summary: Update a Hook
            description: Updates the details of a hook.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Hooks
            parameters:
                -
                    name: hookId
                    description: hookId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteHookResponse'
                    description: ''
            operationId: deleteHook
            summary: Delete a Hook
            description: Deletes a hook.
    /hooks/template:
        get:
            tags:
                - Hooks
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHookTemplateResponse'
                    description: ''
            operationId: templateGetAll
            summary: Retrieve Hooks Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists

                Example Request:


                hooks/template
    /scheduler:
        get:
            tags:
                - Scheduler
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSchedulerResponse'
                    description: ''
            operationId: retrieveStatus
            summary: Retrieve Scheduler Status
            description: |-
                Returns the scheduler status.

                Example Requests:

                scheduler
        post:
            tags:
                - Scheduler
            parameters:
                -
                    name: command
                    description: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    description: |-
                        POST :  scheduler?command=start


                        POST : scheduler?command=stop
            operationId: changeSchedulerStatus
            summary: Activate Scheduler Jobs | Suspend Scheduler Jobs
            description: Activates the scheduler job service. | Suspends the scheduler job service.
    '/jobs/{jobId}/runhistory':
        get:
            tags:
                - MIFOSX-BATCH JOBS
            parameters:
                -
                    name: jobId
                    description: jobId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetJobsJobIDJobRunHistoryResponse'
                    description: ''
            operationId: retrieveHistory
            summary: Retrieve Job Run History
            description: |-
                Example Requests:

                jobs/5/runhistory?offset=0&limit=200
    '/jobs/{jobId}':
        get:
            tags:
                - MIFOSX-BATCH JOBS
            parameters:
                -
                    name: jobId
                    description: jobId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetJobsResponse'
                    description: ''
            operationId: retrieveOneJob
            summary: Retrieve a Job
            description: |-
                Returns the details of a Job.

                Example Requests:

                jobs/5
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutJobsJobsIDRequest'
                required: true
            tags:
                - MIFOSX-BATCH JOBS
            parameters:
                -
                    name: jobId
                    description: jobId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    description: ''
            operationId: updateJobDetail
            summary: Update a Job
            description: Updates the details of a job.
            x-codegen-request-body-name: body
        post:
            tags:
                - MIFOSX-BATCH JOBS
            parameters:
                -
                    name: jobId
                    description: jobId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    description: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    description: 'POST: jobs/1?command=executeJob'
            operationId: executeJob
            summary: Run a Job
            description: Manually Execute Specific Job.
    /jobs:
        get:
            tags:
                - MIFOSX-BATCH JOBS
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetJobsResponse'
                    description: ''
            operationId: retrieveAllJobs
            summary: Retrieve Scheduler Jobs
            description: |-
                Returns the list of jobs.

                Example Requests:

                jobs
    /reportmailingjobs:
        get:
            tags:
                - Report Mailing Jobs
            parameters:
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetReportMailingJobsResponse'
                    description: ''
            operationId: retrieveAllReportMailingJobs
            summary: List Report Mailing Jobs
            description: |-
                Example Requests:

                reportmailingjobs
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostReportMailingJobsRequest'
                required: true
            tags:
                - Report Mailing Jobs
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostReportMailingJobsResponse'
                    description: ''
            operationId: createReportMailingJob
            summary: Create a Report Mailing Job
            description: >-
                Mandatory Fields: name, startDateTime, stretchyReportId, emailRecipients, emailSubject,
                emailMessage, emailAttachmentFileFormatId, recurrence, isActive


                Optional Fields: description, stretchyReportParamMap
            x-codegen-request-body-name: body
    '/reportmailingjobs/{entityId}':
        get:
            tags:
                - Report Mailing Jobs
            parameters:
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReportMailingJobsResponse'
                    description: ''
            operationId: retrieveReportMailingJob
            summary: Retrieve a Report Mailing Job
            description: |-
                Example Requests:

                reportmailingjobs/1


                reportmailingjobs/1?template=true
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutReportMailingJobsRequest'
                required: true
            tags:
                - Report Mailing Jobs
            parameters:
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutReportMailingJobsResponse'
                    description: ''
            operationId: updateReportMailingJob
            summary: |
                Update a Report Mailing Job
            x-codegen-request-body-name: body
    /reportmailingjobs/template:
        get:
            tags:
                - Report Mailing Jobs
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetReportMailingJobsTemplate'
                    description: ''
            operationId: retrieveReportMailingJobTemplate
            summary: Retrieve Report Mailing Job Details Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for report mailing job applications. The template data returned consists of any or all
                of:


                Field Defaults

                Allowed Value Lists

                Example Request:


                reportmailingjobs/template
    /reportmailingjobrunhistory:
        get:
            tags:
                - List Report Mailing Job History
            parameters:
                -
                    name: reportMailingJobId
                    description: reportMailingJobId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ReportMailingJobRunHistoryData'
                    description: ''
            operationId: retrieveAllByReportMailingJobId
            summary: List Report Mailing Job History
            description: |-
                The list capability of report mailing job history can support pagination and sorting.

                Example Requests:

                reportmailingjobrunhistory/1
    /authentication:
        post:
            tags:
                - Authentication HTTP Basic
            parameters:
                -
                    name: username
                    description: username
                    schema:
                        type: string
                    in: query
                -
                    name: password
                    description: password
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostAuthenticationResponse'
                    description: ''
                '400':
                    description: Unauthenticated. Please login
            operationId: authenticate
            summary: Verify authentication
            description: Authenticates the credentials provided and returns the set roles and permissions allowed.
    /userdetails:
        get:
            tags:
                - Fetch authenticated user details
            parameters:
                -
                    name: access_token
                    description: access_token
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserDetailsResponse'
                    description: ''
            operationId: fetchAuthenticatedUserData
            summary: |
                Fetch authenticated user details
            description: checks the Authentication and returns the set roles and permissions allowed.
    '/sms/{campaignId}/messageByStatus':
        get:
            tags:
                - SMS
            parameters:
                -
                    name: campaignId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: status
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: fromDate
                    schema:
                        type: string
                    in: query
                -
                    name: toDate
                    schema:
                        type: string
                    in: query
                -
                    name: locale
                    schema:
                        type: string
                    in: query
                -
                    name: dateFormat
                    schema:
                        type: string
                    in: query
                -
                    name: sqlSearch
                    schema:
                        type: string
                    in: query
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllSmsByStatus
    /sms:
        get:
            tags:
                - SMS
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllSMS
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - SMS
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: createSMS
            x-codegen-request-body-name: body
    '/sms/{resourceId}':
        get:
            tags:
                - SMS
            parameters:
                -
                    name: resourceId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveOneSMSID
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - SMS
            parameters:
                -
                    name: resourceId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateSMS
            x-codegen-request-body-name: body
        delete:
            tags:
                - SMS
            parameters:
                -
                    name: resourceId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: deleteSMSID
    '/povertyLine/{ppiName}':
        get:
            tags:
                - Poverty Line
            parameters:
                -
                    name: ppiName
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllpovertyLine
    '/povertyLine/{ppiName}/{likelihoodId}':
        get:
            tags:
                - Poverty Line
            parameters:
                -
                    name: ppiName
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: likelihoodId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllpovertyLineGet
    /survey:
        get:
            tags:
                - Survey
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetSurveyResponse'
                    description: ''
            operationId: retrieveSurveys
            summary: Retrieve surveys
            description: Retrieve surveys. This allows to retrieve the list of survey tables registered .
    '/survey/{surveyName}':
        get:
            tags:
                - Survey
            parameters:
                -
                    name: surveyName
                    description: surveyName
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetSurveyResponse'
                    description: ''
            operationId: retrieveSurvey
            summary: Retrieve survey
            description: >-
                Lists a registered survey table details and the Apache Fineract Core application table they
                are registered to.
    '/survey/{surveyName}/{clientId}':
        get:
            tags:
                - Survey
            parameters:
                -
                    name: surveyName
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getClientSurveyOverview
    '/survey/{surveyName}/{clientId}/{entryId}':
        get:
            tags:
                - Survey
            parameters:
                -
                    name: surveyName
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: entryId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getSurveyEntry
    '/survey/register/{surveyName}/{apptable}':
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - Survey
            parameters:
                -
                    name: surveyName
                    schema:
                        type: string
                    in: path
                    required: true
                -
                    name: apptable
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: register
            x-codegen-request-body-name: body
    /mixreport:
        get:
            tags:
                - Mix Report
            parameters:
                -
                    name: startDate
                    schema:
                        format: date-time
                        type: string
                    in: query
                -
                    name: endDate
                    schema:
                        format: date-time
                        type: string
                    in: query
                -
                    name: currency
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/xml:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveXBRLReport
    /mixtaxonomy:
        get:
            tags:
                - Mix Taxonomy
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllMixTaxonomy
    /mixmapping:
        get:
            tags:
                - Mix Mapping
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveTaxonomyMapping
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - Mix Mapping
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateTaxonomyMapping
            x-codegen-request-body-name: body
    '/holidays/{holidayId}':
        get:
            tags:
                - Holidays
            parameters:
                -
                    name: holidayId
                    description: holidayId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetHolidaysResponse'
                    description: ''
            operationId: retrieveOneHoliday
            summary: Retrieve a Holiday
            description: |-
                Example Requests:

                holidays/1
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutHolidaysHolidayIdRequest'
                required: true
            tags:
                - Holidays
            parameters:
                -
                    name: holidayId
                    description: holidayId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutHolidaysHolidayIdResponse'
                    description: ''
            operationId: updateHoliday
            summary: Update a Holiday
            description: >-
                If a holiday is in pending state (created and not activated) then all fields are allowed to
                modify. Once holidays become active only name and descriptions are allowed to modify.
            x-codegen-request-body-name: body
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostHolidaysHolidayIdRequest'
                required: true
            tags:
                - Holidays
            parameters:
                -
                    name: holidayId
                    description: holidayId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    description: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostHolidaysHolidayIdResponse'
                    description: ''
            operationId: handleCommandsHoliday
            summary: Activate a Holiday
            description: |-
                Always Holidays are created in pending state. This API allows to activate a holiday.

                Only the active holidays are considered for rescheduling the loan repayment.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Holidays
            parameters:
                -
                    name: holidayId
                    description: holidayId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteHolidaysHolidayIdResponse'
                    description: ''
            operationId: deleteHoliday
            summary: Delete a Holiday
            description: >-
                This API allows to delete a holiday. This is a soft delete the deleted holiday status is
                marked as deleted.
    /holidays:
        get:
            tags:
                - Holidays
            parameters:
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: fromDate
                    description: fromDate
                    schema:
                        type: string
                    in: query
                -
                    name: toDate
                    description: toDate
                    schema:
                        type: string
                    in: query
                -
                    name: locale
                    description: locale
                    schema:
                        type: string
                    in: query
                -
                    name: dateFormat
                    description: dateFormat
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetHolidaysResponse'
                    description: ''
            operationId: retrieveAllHolidays
            summary: List Holidays
            description: |-
                Example Requests:

                holidays?officeId=1
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostHolidaysRequest'
                required: true
            tags:
                - Holidays
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostHolidaysResponse'
                    description: ''
            operationId: createNewHoliday
            summary: Create a Holiday
            description: 'Mandatory Fields: name, description, fromDate, toDate, repaymentsRescheduledTo, offices'
            x-codegen-request-body-name: body
    /currencies:
        get:
            tags:
                - Currency
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetCurrenciesResponse'
                    description: ''
            operationId: retrieveCurrencies
            summary: Retrieve Currency Configuration
            description: >-
                Returns the list of currencies permitted for use AND the list of currencies not selected (but
                available for selection).


                Example Requests:


                currencies



                currencies?fields=selectedCurrencyOptions
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutCurrenciesRequest'
                required: true
            tags:
                - Currency
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutCurrenciesResponse'
                    description: ''
            operationId: updateCurrencies
            summary: Update Currency Configuration
            description: Updates the list of currencies permitted for use.
            x-codegen-request-body-name: body
    /officetransactions:
        get:
            tags:
                - officetransactions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveOfficeTransactions
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - officetransactions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: transferMoneyFrom
            x-codegen-request-body-name: body
    /officetransactions/template:
        get:
            tags:
                - officetransactions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: newOfficeTransactionDetails
    '/officetransactions/{transactionId}':
        delete:
            tags:
                - officetransactions
            parameters:
                -
                    name: transactionId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: deleteOfficeTransactions
    /offices/template:
        get:
            tags:
                - Offices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOfficesTemplateResponse'
                    description: ''
            operationId: retrieveOfficeTemplateGet
            summary: Retrieve Office Details Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists

                Example Request:


                offices/template
    /offices:
        get:
            tags:
                - Offices
            parameters:
                -
                    name: includeAllOffices
                    description: includeAllOffices
                    schema:
                        default: false
                        type: boolean
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetOfficesResponse'
                    description: ''
            operationId: retrieveOffices
            summary: List Offices
            description: |-
                Example Requests:

                offices


                offices?fields=id,name,openingDate
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostOfficesRequest'
                required: true
            tags:
                - Offices
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostOfficesResponse'
                    description: ''
            operationId: createOffice
            summary: Create an Office
            description: |-
                Mandatory Fields
                name, openingDate, parentId
            x-codegen-request-body-name: body
    '/offices/{officeId}':
        get:
            tags:
                - Offices
            parameters:
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOfficesResponse'
                    description: ''
            operationId: retreiveOffice
            summary: Retrieve an Office
            description: |-
                Example Requests:

                offices/1


                offices/1?template=true


                offices/1?fields=id,name,parentName
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutOfficesOfficeIdRequest'
                required: true
            tags:
                - Offices
            parameters:
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutOfficesOfficeIdResponse'
                    description: ''
            operationId: updateOffice
            summary: Update Office
            x-codegen-request-body-name: body
    /provisioningcategory:
        get:
            tags:
                - Provisioning Category
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveAllProvisionCategory
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - Provisioning Category
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: createProvisioningCategory
            x-codegen-request-body-name: body
    '/provisioningcategory/{categoryId}':
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - Provisioning Category
            parameters:
                -
                    name: categoryId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: updateProvisioningCategory
            x-codegen-request-body-name: body
        delete:
            tags:
                - Provisioning Category
            parameters:
                -
                    name: categoryId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: deleteProvisioningCategory
    '/provisioningcriteria/{criteriaId}':
        get:
            tags:
                - Provisioning Criteria
            parameters:
                -
                    name: criteriaId
                    description: criteriaId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetProvisioningCriteriaCriteriaIdResponse'
                    description: ''
            operationId: retrieveProvisioningCriteria
            summary: Retrieves a Provisioning Criteria
            description: Retrieves a Provisioning Criteria
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutProvisioningCriteriaRequest'
                required: true
            tags:
                - Provisioning Criteria
            parameters:
                -
                    name: criteriaId
                    description: criteriaId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutProvisioningCriteriaResponse'
                    description: ''
            operationId: updateProvisioningCriteria
            summary: Updates a new Provisioning Criteria
            description: |-
                Updates a new Provisioning Criteria

                Optional Fields
                criteriaName, loanProducts, provisioningcriteria
            x-codegen-request-body-name: body
        delete:
            tags:
                - Provisioning Criteria
            parameters:
                -
                    name: criteriaId
                    description: criteriaId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteProvisioningCriteriaResponse'
                    description: ''
            operationId: deleteProvisioningCriteria
            summary: Deletes Provisioning Criteria
            description: Deletes Provisioning Criteria
    /provisioningcriteria:
        get:
            tags:
                - Provisioning Criteria
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetProvisioningCriteriaResponse'
                    description: ''
            operationId: retrieveAllProvisioningCriterias
            summary: Retrieves all created Provisioning Criterias
            description: Retrieves all created Provisioning Criterias
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostProvisioningCriteriaRequest'
                required: true
            tags:
                - Provisioning Criteria
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostProvisioningCriteriaResponse'
                    description: ''
            operationId: createProvisioningCriteria
            summary: Create a new Provisioning Criteria
            description: |-
                Creates a new Provisioning Criteria

                Mandatory Fields: 
                criteriaName
                provisioningcriteria

                Optional Fields: 
                loanProducts
            x-codegen-request-body-name: body
    /provisioningcriteria/template:
        get:
            tags:
                - Provisioning Criteria
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: retrieveTemplateProvision
    /staff:
        get:
            tags:
                - Staff
            parameters:
                -
                    name: sqlSearch
                    description: sqlSearch
                    schema:
                        type: string
                    in: query
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: staffInOfficeHierarchy
                    description: staffInOfficeHierarchy
                    schema:
                        default: false
                        type: boolean
                    in: query
                -
                    name: loanOfficersOnly
                    description: loanOfficersOnly
                    schema:
                        default: false
                        type: boolean
                    in: query
                -
                    name: status
                    description: status
                    schema:
                        default: active
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStaffResponse'
                    description: 'GET https://DomainName/api/v1/staff?status={ACTIVE|INACTIVE|ALL}'
            operationId: retrieveStaff
            summary: Retrieve Staff
            description: |-
                Returns the list of staff members.

                Example Requests:

                staff




                Retrieve a Staff by status

                Returns the details of a Staff based on status.

                By default it Returns all the ACTIVE Staff.

                If status=INACTIVE, then it returns all INACTIVE Staff.

                and for status=ALL, it Returns both ACTIVE and INACTIVE Staff.

                Example Requests:

                staff?status=active
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostStaffRequest'
                required: true
            tags:
                - Staff
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostStaffResponse'
                    description: ''
            operationId: createStaff
            summary: Create a staff member
            description: |-
                Creates a staff member.

                Mandatory Fields: 
                officeId, firstname, lastname

                Optional Fields: 
                isLoanOfficer, isActive
            x-codegen-request-body-name: body
    '/staff/{staffId}':
        get:
            tags:
                - Staff
            parameters:
                -
                    name: staffId
                    description: staffId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetStaffResponse'
                    description: ''
            operationId: retreiveStaff
            summary: Retrieve a Staff Member
            description: |-
                Returns the details of a Staff Member.

                Example Requests:

                staff/1
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutStaffRequest'
                required: true
            tags:
                - Staff
            parameters:
                -
                    name: staffId
                    description: staffId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutStaffResponse'
                    description: ''
            operationId: updateStaff
            summary: Update a Staff Member
            description: Updates the details of a staff member.
            x-codegen-request-body-name: body
    /cashiers:
        get:
            tags:
                - cashiers
            parameters:
                -
                    name: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: staffId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: date
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getCashierData
    /tellers:
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: officeId
                    description: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetTellersResponse'
                    description: ''
            operationId: getTellerData
            summary: List all tellers
            description: Retrieves list tellers
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostTellersRequest'
                required: true
            tags:
                - Teller Cash Management
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostTellersResponse'
                    description: ''
            operationId: createTeller
            summary: Create teller
            description: |-
                Mandatory Fields
                Teller name, OfficeId, Description, Start Date, Status
                Optional Fields
                End Date
            x-codegen-request-body-name: body
    '/tellers/{tellerId}':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTellersResponse'
                    description: ''
            operationId: findTeller
            summary: Retrieve tellers
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutTellersRequest'
                required: true
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutTellersResponse'
                    description: ''
            operationId: updateTeller
            summary: Update teller
            x-codegen-request-body-name: body
        delete:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: deleteTeller
    '/tellers/{tellerId}/cashiers':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: fromdate
                    description: fromdate
                    schema:
                        type: string
                    in: query
                -
                    name: todate
                    description: todate
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTellersTellerIdCashiersResponse'
                    description: ''
            operationId: getCashierDataTellers
            summary: List Cashiers
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostTellersTellerIdCashiersRequest'
                required: true
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostTellersTellerIdCashiersResponse'
                    description: ''
            operationId: createCashier
            summary: Create Cashiers
            description: |-
                Mandatory Fields: 
                Cashier/staff, Fromm Date, To Date, Full Day or From time and To time



                Optional Fields: 
                Description/Notes
            x-codegen-request-body-name: body
    '/tellers/{tellerId}/cashiers/{cashierId}':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTellersTellerIdCashiersCashierIdResponse'
                    description: ''
            operationId: findCashierData
            summary: Retrieve a cashier
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdRequest'
                required: true
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponse'
                    description: ''
            operationId: updateCashier
            summary: Update Cashier
            x-codegen-request-body-name: body
        delete:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTellersTellerIdCashiersCashierIdResponse'
                    description: ''
            operationId: deleteCashier
            summary: Delete Cashier
    '/tellers/{tellerId}/cashiers/template':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTellersTellerIdCashiersTemplateResponse'
                    description: ''
            operationId: getCashierTemplate
            summary: Find Cashiers
    '/tellers/{tellerId}/cashiers/{cashierId}/allocate':
        post:
            requestBody:
                description: body
                content:
                    text/html:
                        schema:
                            $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateRequest'
                required: true
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdAllocateResponse'
                    description: ''
            operationId: allocateCashToCashier
            summary: Allocate Cash To Cashier
            description: |-
                Mandatory Fields: 
                Date, Amount, Currency, Notes/Comments
            x-codegen-request-body-name: body
    '/tellers/{tellerId}/cashiers/{cashierId}/settle':
        post:
            requestBody:
                description: body
                content:
                    text/html:
                        schema:
                            $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleRequest'
                required: true
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostTellersTellerIdCashiersCashierIdSettleResponse'
                    description: ''
            operationId: settleCashFromCashier
            summary: Settle Cash From Cashier
            description: |-
                Mandatory Fields
                Date, Amount, Currency, Notes/Comments
            x-codegen-request-body-name: body
    '/tellers/{tellerId}/cashiers/{cashierId}/transactions':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: currencyCode
                    description: currencyCode
                    schema:
                        type: string
                    in: query
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: >-
                                        #/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsResponse
                    description: ''
            operationId: getTransactionsForCashier
            summary: Retrieve Cashier Transaction
    '/tellers/{tellerId}/cashiers/{cashierId}/summaryandtransactions':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: currencyCode
                    description: currencyCode
                    schema:
                        type: string
                    in: query
                -
                    name: offset
                    description: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    description: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    description: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    description: sortOrder
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: >-
                                    #/components/schemas/GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse
                    description: ''
            operationId: getTransactionsWtihSummaryForCashier
            summary: Transactions Wtih Summary For Cashier
    '/tellers/{tellerId}/cashiers/{cashierId}/transactions/template':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: >-
                                    #/components/schemas/GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse
                    description: ''
            operationId: getCashierTxnTemplate
            summary: Retrieve Cashier Transaction Template
    '/tellers/{tellerId}/transactions':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: dateRange
                    description: dateRange
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getTransactionData
    '/tellers/{tellerId}/transactions/{transactionId}':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: transactionId
                    description: transactionId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: findTransactionData
    '/tellers/{tellerId}/journals':
        get:
            tags:
                - Teller Cash Management
            parameters:
                -
                    name: tellerId
                    description: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: cashierId
                    description: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: dateRange
                    description: dateRange
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getJournalData
    /cashiersjournal:
        get:
            tags:
                - cashiersjournal
            parameters:
                -
                    name: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: tellerId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: cashierId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: dateRange
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getJournalDataCashier
    /workingdays/template:
        get:
            tags:
                - Working days
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetWorkingDaysTemplateResponse'
                    description: ''
            operationId: templateWorkingDays
            summary: Working Days Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for working days.


                Example Request:


                workingdays/template
    /workingdays:
        get:
            tags:
                - Working days
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetWorkingDaysResponse'
                    description: ''
            operationId: retrieveAllWorkingDays
            summary: List Working days
            description: |-
                Example Requests:

                workingdays
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutWorkingDaysRequest'
                required: true
            tags:
                - Working days
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutWorkingDaysResponse'
                    description: ''
            operationId: updateWorkingDays
            summary: Update a Working Day
            description: |-
                Mandatory Fields
                recurrence,repaymentRescheduleType,extendTermForDailyRepayments,locale
            x-codegen-request-body-name: body
    '/client/{clientid}/addresses':
        get:
            tags:
                - Clients Address
            parameters:
                -
                    name: status
                    schema:
                        type: string
                    in: query
                -
                    name: type
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: clientid
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddressData'
                    description: ''
            operationId: getAddresses
            summary: List all addresses for a Client
            description: |-
                Example Requests:

                client/1/addresses


                clients/1/addresses?status=false,true&&type=1,2,3
        put:
            tags:
                - Clients Address
            parameters:
                -
                    name: clientid
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: UpdateClientAddress
            summary: update an address for a Client
            description: |-
                All the address fields can be updated by using update client address API

                Mandatory Fields
                type and addressId
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - Clients Address
            parameters:
                -
                    name: type
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: clientid
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: AddClientAddress
            summary: Create an address for a Client
            description: |-
                Mandatory Fields : 
                type and clientId
            x-codegen-request-body-name: body
    /client/addresses/template:
        get:
            tags:
                - Clients Address
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getAddressesTemplate
    '/clients/{clientId}/charges/{chargeId}':
        get:
            tags:
                - Client Charges
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: chargeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientChargeData'
                    description: ''
            operationId: retrieveClientCharge
            summary: Retrieve a Client Charge
            description: |-
                Example Requests:
                clients/1/charges/1


                clients/1/charges/1?fields=name,id
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - Client Charges
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: chargeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: payOrWaiveClientCharge
            summary: Pay a Client Charge
            description: >
                Mandatory Fields

                transactionDate and amount "Pay either a part of or the entire due amount for a
                charge.(command=paycharge)


                Waive a Client Charge



                This API provides the facility of waiving off the remaining amount on a client charge
                (command=waive)
            x-codegen-request-body-name: body
        delete:
            tags:
                - Client Charges
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: chargeId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: deleteClientCharge
            summary: Delete a Client Charge
            description: >-
                Deletes a Client Charge on which no transactions have taken place (either payments or
                waivers). 
    '/clients/{clientId}/charges':
        get:
            tags:
                - Client Charges
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: chargeStatus
                    schema:
                        default: all
                        type: string
                    in: query
                -
                    name: pendingPayment
                    schema:
                        type: boolean
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientCharge'
                    description: ''
            operationId: retrieveAllClientCharges
            summary: List Client Charges
            description: |-
                The list capability of client charges supports pagination.Example Requests:
                clients/1/charges

                clients/1/charges?offset=0&limit=5
        post:
            tags:
                - Client Charges
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: applyClientCharge
            summary: Add Client Charge
            description: |4-
                 This API associates a Client charge with an implicit Client account
                Mandatory Fields : 
                chargeId and dueDate  
                Optional Fields : 
                amount
    '/clients/{clientId}/identifiers':
        get:
            tags:
                - Client Identifier Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientIdentifierData'
                    description: ''
            operationId: retrieveAllClientIdentifiers
            summary: List all Identifiers for a Client
            description: |-
                Example Requests:
                clients/1/identifiers


                clients/1/identifiers?fields=documentKey,documentType,description
        post:
            tags:
                - Client Identifier Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: createClientIdentifier
            summary: Create an Identifier for a Client
            description: |-
                Mandatory Fields
                documentKey, documentTypeId 
    '/clients/{clientId}/identifiers/{identifierId}':
        get:
            tags:
                - Client Identifier Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: identifierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientIdentifierData'
                    description: ''
            operationId: retrieveClientIdentifiers
            summary: Retrieve a Client Identifier
            description: |-
                Example Requests:
                clients/1/identifier/2


                clients/1/identifier/2?template=true

                clients/1/identifiers/2?fields=documentKey,documentType,description
        put:
            tags:
                - Client Identifier Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: identifierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: updateClientIdentifer
            summary: Update a Client Identifier
        delete:
            tags:
                - Client Identifier Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: identifierId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: deleteClientIdentifier
            summary: Delete a Client Identifier
    '/clients/{clientId}/transactions':
        get:
            tags:
                - Client Transaction
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientTransactionData'
                    description: ''
            operationId: retrieveAllClientTransactions
            summary: List Client Transactions
            description: |-
                The list capability of client transaction can support pagination.

                Mandatory Arguments : offset
                    Integer Mandatory, defaults to 0 
                    Indicates the result from which pagination starts
                limit
                    Integer Mandatory, defaults to 200 
                    Restricts the size of results returned. To override the default and return all entries you must explicitly pass a non-positive integer value for limit e.g. limit=0, or limit=-1



                Example Requests:
                clients/189/transactions
                clients/189/transactions?offset=10&limit=50
    '/clients/{clientId}/transactions/{transactionId}':
        get:
            tags:
                - Client Transaction
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: transactionId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientTransactionData'
                    description: ''
            operationId: retrieveClientTransaction
            summary: Retrieve a Client Transaction
            description: |-
                Example Requests:
                clients/1/transactions/1


                clients/1/transactions/1?fields=id,officeName
        post:
            tags:
                - Client Transaction
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: transactionId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: undoClientTransaction
            summary: Undo a Client Transaction
    '/clients/{clientId}/accounts':
        get:
            tags:
                - Client Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AccountSummaryCollectionData'
                    description: ''
                '400':
                    description: Bad Request
            operationId: retrieveAssociatedAccounts
            summary: Retrieve client accounts overview
            description: >-
                An example of how a loan portfolio summary can be provided. This is requested in a specific
                use case of the community application.

                It is quite reasonable to add resources like this to simplify User Interface development.


                Example Requests:
                 
                clients/1/accounts


                clients/1/accounts?fields=loanAccounts,savingsAccounts
    /clients:
        get:
            tags:
                - Client Api
            parameters:
                -
                    name: sqlSearch
                    schema:
                        type: string
                    in: query
                -
                    name: officeId
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: externalId
                    schema:
                        type: string
                    in: query
                -
                    name: displayName
                    schema:
                        type: string
                    in: query
                -
                    name: firstName
                    schema:
                        type: string
                    in: query
                -
                    name: lastName
                    schema:
                        type: string
                    in: query
                -
                    name: underHierarchy
                    schema:
                        type: string
                    in: query
                -
                    name: offset
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: limit
                    schema:
                        format: int32
                        type: integer
                    in: query
                -
                    name: orderBy
                    schema:
                        type: string
                    in: query
                -
                    name: sortOrder
                    schema:
                        type: string
                    in: query
                -
                    name: orphansOnly
                    schema:
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientData'
                    description: ''
            operationId: retrieveAllClients
            summary: List Clients
            description: |-
                Example Requests:

                clients

                clients?fields=displayName,officeName,timeline

                clients?offset=10&limit=50

                clients?orderBy=displayName&sortOrder=DESC
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClientData'
                required: true
            tags:
                - Client Api
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: Successfully Client Created
            operationId: createClient
            summary: Create a Client
            description: >-
                Note:

                1. You can enter either:firstname/middlename/lastname - for a person (middlename is optional)
                OR fullname - for a business or organisation (or person known by one name).


                2.If address is enable(enable-address=true), then additional field called address has to be
                passed.
            x-codegen-request-body-name: body
    /clients/template:
        get:
            tags:
                - Client Api
            parameters:
                -
                    name: officeId
                    description: optional
                    schema:
                        format: int64
                        type: integer
                    in: query
                -
                    name: commandParam
                    description: >-
                        optional If commandParam=close retrieves all closureReasons which are associated with
                        "ClientClosureReason" value.
                    schema:
                        default: 'false'
                        type: string
                    in: query
                -
                    name: staffInSelectedOfficeOnly
                    description: >-
                        optional Defaults to false if not provided. If staffInSelectedOfficeOnly=true only
                        staff who are associated with the selected branch are returned.
                    schema:
                        default: false
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientData'
                    description: ''
            operationId: retrieveTemplateClient
            summary: Retrieve Client Details Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value ListsExample Request:


                clients/template
    '/surveys/{surveyId}/lookuptables':
        get:
            tags:
                - SPM API - LookUp Table
            parameters:
                -
                    name: surveyId
                    description: Enter surveyId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/LookupTableData'
                    description: ''
            operationId: fetchLookupTables
            summary: List all Lookup Table entries
            description: List all Lookup Table entries for a survey.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LookupTableData'
                required: false
            tags:
                - SPM API - LookUp Table
            parameters:
                -
                    name: surveyId
                    description: Enter surveyId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    description: OK
            operationId: createLookupTable
            summary: Create a Lookup Table entry
            description: |-
                Add a new netry to a survey.

                Mandatory Fields
                key, score, validFrom, validTo
            x-codegen-request-body-name: body
    '/surveys/{surveyId}/lookuptables/{key}':
        get:
            tags:
                - SPM API - LookUp Table
            parameters:
                -
                    name: surveyId
                    description: Enter surveyId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: key
                    description: Enter key
                    schema:
                        type: string
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LookupTableData'
                    description: ''
            operationId: findLookupTable
            summary: Retrieve a Lookup Table entry
            description: Retrieve a Lookup Table entry for a survey.
    '/surveys/{surveyId}/scorecards':
        get:
            tags:
                - SPM - Scorecards
            parameters:
                -
                    name: surveyId
                    description: Enter surveyId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Scorecard'
                    description: ''
            operationId: findBySurvey
            summary: List all Scorecard entries
            description: List all Scorecard entries for a survey.
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ScorecardData'
                required: false
            tags:
                - SPM - Scorecards
            parameters:
                -
                    name: surveyId
                    description: Enter surveyId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    description: OK
            operationId: createScorecard
            summary: Create a Scorecard entry
            description: |-
                Add a new netry to a survey.

                Mandatory Fields
                clientId, createdOn, questionId, responseId, staffId
            x-codegen-request-body-name: body
    '/surveys/{surveyId}/scorecards/clients/{clientId}':
        get:
            tags:
                - SPM - Scorecards
            parameters:
                -
                    name: surveyId
                    description: Enter surveyId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: clientId
                    description: Enter clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/ScorecardData'
                    description: successful operation
            operationId: findBySurveyClient
    '/surveys/{id}':
        get:
            tags:
                - SPM - Serveys
            parameters:
                -
                    name: id
                    description: Enter id
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SurveyData'
                    description: ''
            operationId: findSurvey
            summary: Retrieve a Survey
        delete:
            tags:
                - SPM - Serveys
            parameters:
                -
                    name: id
                    description: Enter id
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    description: OK
            operationId: deactivateSurvey
            summary: Deactivate Survey
    /surveys:
        get:
            tags:
                - SPM - Serveys
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/SurveyData'
                    description: ''
            operationId: fetchActiveSurveys
            summary: List all Surveys
        post:
            requestBody:
                description: Create survey
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/SurveyData'
                required: false
            tags:
                - SPM - Serveys
            responses:
                '200':
                    description: OK
            operationId: createSurvey
            summary: Create a Survey
            description: |-
                Adds a new survey to collect client related data.

                Mandatory Fields

                countryCode, key, name, questions, responses, sequenceNo, text, value
            x-codegen-request-body-name: body
    '/templates/{templateId}':
        get:
            tags:
                - User Generated Documents
            parameters:
                -
                    name: templateId
                    description: templateId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTemplatesTemplateIdResponse'
                    description: ''
            operationId: retrieveOneTemplateGet
            summary: Retrieve a UGD
            description: |-
                Example Requests:

                templates/1
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutTemplatesTemplateIdRequest'
                required: true
            tags:
                - User Generated Documents
            parameters:
                -
                    name: templateId
                    description: templateId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutTemplatesTemplateIdResponse'
                    description: ''
            operationId: saveTemplate
            summary: Update a UGD
            x-codegen-request-body-name: body
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: false
            tags:
                - User Generated Documents
            parameters:
                -
                    name: templateId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        text/html:
                            schema:
                                type: string
                    description: successful operation
            operationId: mergeTemplate
            x-codegen-request-body-name: body
        delete:
            tags:
                - User Generated Documents
            parameters:
                -
                    name: templateId
                    description: templateId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteTemplatesTemplateIdResponse'
                    description: ''
            operationId: deleteTemplate
            summary: Delete a UGD
    '/templates/{templateId}/template':
        get:
            tags:
                - User Generated Documents
            parameters:
                -
                    name: templateId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: getTemplateByTemplate
    /templates/template:
        get:
            tags:
                - User Generated Documents
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTemplatesTemplateResponse'
                    description: ''
            operationId: templatesGetAllReq
            summary: Retrieve UGD Details Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for UGDs. The UGD data returned consists of any or all of:


                ARGUMENTS

                name String entity String type String text String optional mappers Mapper optional

                Example Request:


                templates/template
    /templates:
        get:
            tags:
                - User Generated Documents
            parameters:
                -
                    name: typeId
                    description: typeId
                    schema:
                        format: int32
                        default: -1
                        type: integer
                    in: query
                -
                    name: entityId
                    description: entityId
                    schema:
                        format: int32
                        default: -1
                        type: integer
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTemplatesResponse'
                    description: ''
            operationId: retrieveAllTemplatesGetStar
            summary: Retrieve all UGDs
            description: |-
                Example Requests:

                templates

                It is also possible to get specific UGDs by entity and type:

                templates?type=0&entity=0
                [Entity: Id]





                client: 0, loan: 1

                [Type: Id]



                Document: 0, E-Mail (not yet): 1,  SMS: 2
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostTemplatesRequest'
                required: true
            tags:
                - User Generated Documents
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostTemplatesResponse'
                    description: ''
            operationId: createTemplate
            summary: Add a UGD
            description: |-
                Adds a new UGD.

                Mandatory Fields
                name



                Example Requests:

                templates/1
            x-codegen-request-body-name: body
    /passwordpreferences:
        get:
            tags:
                - Password preferences
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
                    description: ''
            operationId: retrieve
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutPasswordPreferencesTemplateRequest'
                required: true
            tags:
                - Password preferences
            responses:
                '200':
                    description: ''
            operationId: updatePassPref
            summary: Update password preferences
            x-codegen-request-body-name: body
    /passwordpreferences/template:
        get:
            tags:
                - Password preferences
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetPasswordPreferencesTemplateResponse'
                    description: ''
            operationId: templatePassword
            summary: List Application Password validation policies
            description: |-
                ARGUMENTS
                Example Requests:

                passwordpreferences
    /permissions:
        get:
            tags:
                - Permissions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetPermissionsResponse'
                    description: ''
            operationId: retrieveAllPermissions
            summary: List Application Permissions
            description: >-
                ARGUMENTS

                makerCheckerableoptional, Values are true, false. Default is false.

                If makerCheckerable=false or not supplied then a list of application permissions is returned.
                The "selected" attribute is always true in this case.


                If makerCheckerable=true then the "selected" attribute shows whether the permission is enabled
                for Maker Check functionality.


                Note: Each Apache Fineract transaction is associated with a permission.


                Example Requests:


                permissions



                permissions?makerCheckerable=true



                permissions?fields=grouping,code
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutPermissionsRequest'
                required: true
            tags:
                - Permissions
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: updatePermissionsDetails
            summary: Enable/Disable Permissions for Maker Checker
            x-codegen-request-body-name: body
    /roles:
        get:
            tags:
                - Roles
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetRolesResponse'
                    description: ''
            operationId: retrieveAllRoles
            summary: List Roles
            description: |-
                Example Requests:

                roles


                roles?fields=name
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostRolesRequest'
                required: true
            tags:
                - Roles
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostRolesResponse'
                    description: ''
            operationId: createRole
            summary: Create a New Role
            description: |-
                Mandatory Fields
                name, description
            x-codegen-request-body-name: body
    '/roles/{roleId}':
        get:
            tags:
                - Roles
            parameters:
                -
                    name: roleId
                    description: roleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRolesRoleIdResponse'
                    description: ''
            operationId: retrieveRole
            summary: Retrieve a Role
            description: |-
                Example Requests:

                roles/1


                roles/1?fields=name
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutRolesRoleIdRequest'
                required: true
            tags:
                - Roles
            parameters:
                -
                    name: roleId
                    description: roleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutRolesRoleIdResponse'
                    description: ''
            operationId: updateRole
            summary: Update a Role
            x-codegen-request-body-name: body
        post:
            tags:
                - Roles
            parameters:
                -
                    name: roleId
                    description: roleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    description: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostRolesRoleIdResponse'
                    description: ''
            operationId: actionsOnRoles
            summary: Enable Role | Disable Role
            description: >-
                Description : Enable role in case role is disabled. | Disable the role in case role is not
                associated with any users.






                Example Request:   https://DomainName/api/v1/roles/{roleId}?command=enable






                https://DomainName/api/v1/roles/{roleId}?command=disable
        delete:
            tags:
                - Roles
            parameters:
                -
                    name: roleId
                    description: roleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRolesRoleIdResponse'
                    description: ''
            operationId: deleteRole
            summary: Delete a Role
            description: 'Description : Delete the role in case role is not associated with any users.'
    '/roles/{roleId}/permissions':
        get:
            tags:
                - Roles
            parameters:
                -
                    name: roleId
                    description: roleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponse'
                    description: ''
            operationId: retrieveRolePermissions
            summary: Retrieve a Role's Permissions
            description: |-
                Example Requests:

                roles/1/permissions
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutRolesRoleIdPermissionsRequest'
                required: true
            tags:
                - Roles
            parameters:
                -
                    name: roleId
                    description: roleId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutRolesRoleIdPermissionsResponse'
                    description: ''
            operationId: updateRolePermissions
            summary: Update a Role's Permissions
            x-codegen-request-body-name: body
    /users/template:
        get:
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUsersTemplateResponse'
                    description: ''
            operationId: templateUsersGet
            summary: Retrieve User Details Template
            description: >-
                This is a convenience resource. It can be useful when building maintenance user interface
                screens for client applications. The template data returned consists of any or all of:


                Field Defaults

                Allowed Value Lists

                Example Request:


                users/template
    /users:
        get:
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/GetUsersResponse'
                    description: ''
            operationId: retrieveAllUsers
            summary: Retrieve list of users
            description: |-
                Example Requests:

                users


                users?fields=id,username,email,officeName
        post:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PostUsersRequest'
                required: true
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PostUsersResponse'
                    description: ''
            operationId: createUser
            summary: Create a User
            description: >-
                Adds new application user.


                Note: Password information is not required (or processed). Password details at present are
                auto-generated and then sent to the email account given (which is why it can take a few
                seconds to complete).


                Mandatory Fields: 

                username, firstname, lastname, email, officeId, roles, sendPasswordToEmail


                Optional Fields: 

                staffId,passwordNeverExpires,isSelfServiceUser,clients
            x-codegen-request-body-name: body
    '/users/{userId}':
        get:
            tags:
                - Users
            parameters:
                -
                    name: userId
                    description: userId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUsersUserIdResponse'
                    description: ''
            operationId: retrieveOneUser
            summary: Retrieve a User
            description: |-
                Example Requests:

                users/1


                users/1?template=true


                users/1?fields=username,officeName
        put:
            requestBody:
                description: body
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PutUsersUserIdRequest'
                required: true
            tags:
                - Users
            parameters:
                -
                    name: userId
                    description: userId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PutUsersUserIdResponse'
                    description: ''
            operationId: updateUser
            summary: Update a User
            description: When updating a password you must provide the repeatPassword parameter also.
            x-codegen-request-body-name: body
        delete:
            tags:
                - Users
            parameters:
                -
                    name: userId
                    description: userId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUsersUserIdResponse'
                    description: ''
            operationId: deleteUser
            summary: Delete a User
            description: Removes the user and the associated roles and permissions.
    '/clients/{clientId}':
        get:
            tags:
                - Client Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: staffInSelectedOfficeOnly
                    schema:
                        default: false
                        type: boolean
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ClientData'
                    description: ''
            operationId: retrieveOneClient
            summary: Retrieve a Client
            description: |-
                Example Requests:

                clients/1


                clients/1?template=true


                clients/1?fields=id,displayName,officeName
        put:
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ClientData'
                required: true
            tags:
                - Client Api
            parameters:
                -
                    name: clientId
                    description: ClientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: updateClient
            summary: Update a Client
            description: >-
                You can update any of the basic attributes of a client (but not its associations) using this
                API. The relationship between a client and a group must be removed through the Groups API.
            x-codegen-request-body-name: body
        post:
            requestBody:
                content:
                    application/json:
                        schema:
                            type: string
                required: true
            tags:
                - Client Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
                -
                    name: command
                    schema:
                        type: string
                    in: query
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: string
                    description: successful operation
            operationId: activate
            summary: 'Activate a Client | '
            description: Details about clients
            x-codegen-request-body-name: body
        delete:
            tags:
                - Client Api
            parameters:
                -
                    name: clientId
                    schema:
                        format: int64
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CommandProcessingResult'
                    description: ''
            operationId: deleteClient
            summary: Delete a Client
            description: 'If a client is in Pending state, you are allowed to Delete it.'
components:
    schemas:
        runaccrualsRequest:
            required:
                - tillDate
            type: object
            properties:
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
                tillDate:
                    type: string
                    example: 04 June 2014
        GetGLClosureResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 7
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                closingDate:
                    format: date
                    type: string
                deleted:
                    type: boolean
                    example: false
                createdDate:
                    format: date
                    type: string
                lastUpdatedDate:
                    format: date
                    type: string
                createdByUserId:
                    format: int64
                    type: integer
                    example: 1
                createdByUsername:
                    type: string
                    example: mifos
                lastUpdatedByUserId:
                    format: int64
                    type: integer
                    example: 1
                lastUpdatedByUsername:
                    type: string
                    example: mifos
                comments:
                    type: string
                    example: closed
        PostGlClosuresResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 9
        PostGLCLosuresRequest:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                closingDate:
                    format: date
                    type: string
                comments:
                    type: string
                    example: The accountants are heading for a carribean vacation
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
        PutGlClosuresResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 9
                comments:
                    type: string
                    example: All transactions verified by Johnny Cash
        PutGlClosuresRequest:
            type: object
            properties:
                comments:
                    type: string
                    example: All transactions verified by Johnny Cash
        DeleteGlClosuresResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 9
        PostFinancialActivityAccountsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostFinancialActivityAccountsRequest:
            type: object
            properties:
                financialActivityId:
                    format: int64
                    type: integer
                    example: 200
                glAccountId:
                    format: int64
                    type: integer
                    example: 2
        PutFinancialActivityAccountsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                comments:
                    $ref: '#/components/schemas/PutFinancialActivityAccountscommentsSwagger'
        PutFinancialActivityAccountscommentsSwagger:
            type: object
            properties:
                glAccountId:
                    format: int64
                    type: integer
                    example: 1
        DeleteFinancialActivityAccountsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        EnumOptionData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                code:
                    type: string
                value:
                    type: string
        FinancialActivityData:
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                name:
                    type: string
                mappedGLAccountType:
                    enum:
                        - ASSET
                        - LIABILITY
                        - EQUITY
                        - INCOME
                        - EXPENSE
                    type: string
        GLAccountData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                glCode:
                    type: string
                type:
                    $ref: '#/components/schemas/EnumOptionData'
                typeId:
                    format: int32
                    type: integer
        GetFinancialActivityAccountsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                financialActivityData:
                    $ref: '#/components/schemas/FinancialActivityData'
                glAccountData:
                    $ref: '#/components/schemas/GLAccountData'
        CodeValueData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                active:
                    type: boolean
                mandatory:
                    type: boolean
        GetGLAccountsTemplateResponse:
            type: object
            properties:
                disabled:
                    type: boolean
                    example: false
                manualEntriesAllowed:
                    type: boolean
                    example: true
                type:
                    $ref: '#/components/schemas/EnumOptionData'
                usage:
                    $ref: '#/components/schemas/EnumOptionData'
                accountTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                usageOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                assetHeaderAccountOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GLAccountData'
                liabilityHeaderAccountOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GLAccountData'
                equityHeaderAccountOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GLAccountData'
                expenseHeaderAccountOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/GLAccountData'
                allowedAssetsTagOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CodeValueData'
                allowedLiabilitiesTagOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CodeValueData'
                allowedEquityTagOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CodeValueData'
                allowedIncomeTagOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CodeValueData'
                allowedExpensesTagOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CodeValueData'
        GetGLAccountsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 16
                name:
                    type: string
                    example: Cash
                parentId:
                    format: int64
                    type: integer
                    example: 1
                glCode:
                    type: string
                    example: '100001'
                disabled:
                    type: boolean
                    example: false
                manualEntriesAllowed:
                    type: boolean
                    example: true
                type:
                    $ref: '#/components/schemas/EnumOptionData'
                usage:
                    $ref: '#/components/schemas/EnumOptionData'
                description:
                    type: string
                    example: Desc
                nameDecorated:
                    type: string
                    example: ....Cash
                tagId:
                    $ref: '#/components/schemas/CodeValueData'
                organizationRunningBalance:
                    format: int64
                    type: integer
                    example: 118437
        PostGLAccountsResponse:
            type: object
            properties:
                resourceId:
                    format: int32
                    type: integer
                    example: 22
        PostGLAccountsRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Cash at Bangalore
                glCode:
                    type: string
                    example: '100001'
                manualEntriesAllowed:
                    type: boolean
                    example: true
                type:
                    type: string
                    example: '1'
                tagId:
                    type: string
                    example: '10'
                parentId:
                    format: int64
                    type: integer
                    example: 1
                usage:
                    $ref: '#/components/schemas/EnumOptionData'
                description:
                    type: string
                    example: Desc
        PutGLAccountsResponse:
            type: object
            properties:
                resourceId:
                    format: int32
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutGLAccountsResponsechangesSwagger'
        PutGLAccountsResponsechangesSwagger:
            type: object
            properties:
                name:
                    type: string
                    example: Cash at Bangalore
        PutGLAccountsRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Cash at Bangalore
        DeleteGLAccountsRequest:
            type: object
            properties:
                resourceId:
                    format: int32
                    type: integer
                    example: 1
        JournalEntryData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                officeId:
                    format: int64
                    type: integer
                glAccountId:
                    format: int64
                    type: integer
                glAccountType:
                    $ref: '#/components/schemas/EnumOptionData'
                entryType:
                    $ref: '#/components/schemas/EnumOptionData'
                amount:
                    type: number
                transactionId:
                    type: string
        PostJournalEntriesResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    description: '1'
                    type: integer
                transactionId:
                    description: RS9MCISID4WK1ZM
                    type: string
        JournalEntryCommand:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                transactionDate:
                    format: date
                    type: string
                comments:
                    type: string
                referenceNumber:
                    type: string
                accountingRuleId:
                    format: int64
                    type: integer
                credits:
                    type: array
                    items:
                        $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
                debits:
                    type: array
                    items:
                        $ref: '#/components/schemas/SingleDebitOrCreditEntryCommand'
        SingleDebitOrCreditEntryCommand:
            type: object
            properties:
                glAccountId:
                    format: int64
                    type: integer
                amount:
                    type: number
                comments:
                    type: string
                parametersPassedInRequest:
                    uniqueItems: true
                    type: array
                    items:
                        type: string
                commentsChanged:
                    type: boolean
                glAmountChanged:
                    type: boolean
                glAccountIdChanged:
                    type: boolean
        PostJournalEntriesTransactionIdResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    description: '1'
                    type: integer
        PostJournalEntriesTransactionIdRequest:
            type: object
            properties:
                officeId:
                    format: int64
                    description: '1'
                    type: integer
        PostProvisioningEntriesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostProvisioningEntriesRequest:
            type: object
            properties:
                date:
                    type: string
                    example: 16 October 2015
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
                createjournalentries:
                    type: string
                    example: 'true'
                provisioningentry:
                    type: string
                entries:
                    type: string
        PutProvisioningEntriesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PutProvisioningEntriesRequest:
            type: object
            properties:
                command:
                    type: string
                    example: recreateprovisioningentry
        ProvisioningEntryData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                createdDate:
                    format: date-time
                    type: string
        LoanProductProvisioningEntryData:
            type: object
            properties:
                historyId:
                    format: int64
                    type: integer
                officeId:
                    format: int64
                    type: integer
                currencyCode:
                    type: string
                productId:
                    format: int64
                    type: integer
                categoryId:
                    format: int64
                    type: integer
                overdueInDays:
                    format: int64
                    type: integer
                percentage:
                    type: number
                liablityAccount:
                    format: int64
                    type: integer
                expenseAccount:
                    format: int64
                    type: integer
                criteriaId:
                    format: int64
                    type: integer
                outstandingBalance:
                    type: number
        AccountingTagRuleData:
            type: object
            properties:
                tag:
                    $ref: '#/components/schemas/CodeValueData'
        GetAccountRulesResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                officeId:
                    format: int64
                    type: integer
                officeName:
                    type: string
                name:
                    type: string
                description:
                    type: string
                systemDefined:
                    type: boolean
                allowMultipleDebitEntries:
                    type: boolean
                allowMultipleCreditEntries:
                    type: boolean
                creditTags:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountingTagRuleData'
                debitTags:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountingTagRuleData'
        AccountingRuleData:
            type: object
            properties:
                creditTags:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountingTagRuleData'
                debitTags:
                    type: array
                    items:
                        $ref: '#/components/schemas/AccountingTagRuleData'
        PostAccountingRulesResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostAccountingRulesRequest:
            type: object
            properties:
                name:
                    type: string
                    example: test
                officeId:
                    format: int64
                    type: integer
                    example: 1
                accountToDebit:
                    format: int64
                    type: integer
                    example: 21
                accountToCredit:
                    format: int64
                    type: integer
                    example: 9
                description:
                    type: string
                    example: Employee salary
        PutAccountingRulesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutAccountingRulesResponsechangesSwagger'
        PutAccountingRulesResponsechangesSwagger:
            type: object
            properties:
                name:
                    type: string
                    example: Employee Salary posting rule
        PutAccountingRulesRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Employee Salary posting rule
        DeleteAccountingRulesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        GetAccountRulesTemplateResponse:
            type: object
            properties:
                systemDefined:
                    type: boolean
                    example: false
                allowedOffices:
                    type: array
                    items:
                        $ref: '#/components/schemas/OfficeData'
                allowedAccounts:
                    type: array
                    items:
                        $ref: '#/components/schemas/GLAccountData'
        OfficeData:
            type: object
            properties:
                hierarchy:
                    type: string
        BatchResponse:
            type: object
            properties:
                requestId:
                    format: int64
                    type: integer
                statusCode:
                    format: int32
                    type: integer
                headers:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/Header'
                body:
                    type: string
        Header:
            type: object
            properties:
                name:
                    type: string
                value:
                    type: string
        PostBatchesRequest:
            type: object
            properties:
                requestId:
                    format: int64
                    type: integer
                    example: 1
                relativeUrl:
                    type: string
                    example: clients
                method:
                    type: string
                    example: POST
                headers:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/Header'
                reference:
                    format: int64
                    type: integer
                    example: 1
                body:
                    $ref: '#/components/schemas/PostBodyRequestSwagger'
        PostBodyRequestSwagger:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                firstname:
                    type: string
                    example: '"Petra"'
                lastname:
                    type: string
                    example: '"Yton"'
                externalId:
                    type: string
                    example: '"ex_externalId1"'
                dateFormat:
                    type: string
                    example: '"dd MMMM yyyy"'
                locale:
                    type: string
                    example: '"en"'
                active:
                    type: boolean
                    example: true
                activationDate:
                    type: string
                    example: '"04 March 2009"'
                submittedOnDate:
                    type: string
                    example: '"04 March 2009"'
        GetMakerCheckerResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                actionName:
                    type: string
                entityName:
                    type: string
                resourceId:
                    format: int64
                    type: integer
                subresourceId:
                    format: int64
                    type: integer
                maker:
                    type: string
                madeOnDate:
                    format: date-time
                    type: string
                checker:
                    type: string
                checkedOnDate:
                    format: date-time
                    type: string
                processingResult:
                    type: string
                commandAsJson:
                    type: string
                officeName:
                    type: string
                groupLevelName:
                    type: string
                groupName:
                    type: string
                clientName:
                    type: string
                loanAccountNo:
                    type: string
                savingsAccountNo:
                    type: string
                clientId:
                    format: int64
                    type: integer
                loanId:
                    format: int64
                    type: integer
                url:
                    type: string
        AppUserData:
            type: object
            properties:
                selfServiceUser:
                    type: boolean
        GetMakerCheckersSearchTemplateResponse:
            type: object
            properties:
                appUsers:
                    type: array
                    items:
                        $ref: '#/components/schemas/AppUserData'
                actionNames:
                    type: array
                    items:
                        type: string
                entityNames:
                    type: array
                    items:
                        type: string
                processingResults:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProcessingResultLookup'
        ProcessingResultLookup:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                processingResult:
                    type: string
        PostMakerCheckersResponse:
            type: object
            properties:
                auditId:
                    format: int64
                    type: integer
                    example: 1
        GetAccountNumberFormatsIdResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 2
                accountType:
                    $ref: '#/components/schemas/EnumOptionData'
                prefixType:
                    $ref: '#/components/schemas/EnumOptionData'
        GetAccountNumberFormatsResponseTemplate:
            type: object
            properties:
                accountTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                prefixTypeOptions:
                    type: object
                    additionalProperties:
                        type: array
                        items:
                            $ref: '#/components/schemas/EnumOptionData'
        PutAccountNumberFormatsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 2
                changes:
                    $ref: '#/components/schemas/PutAccountNumberFormatschangesSwagger'
        PutAccountNumberFormatschangesSwagger:
            type: object
            properties:
                prefixType:
                    format: int64
                    type: integer
        PutAccountNumberFormatsRequest:
            type: object
            properties:
                prefixType:
                    format: int64
                    type: integer
                    example: 1
        DeleteAccountNumberFormatsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 2
        PostAccountNumberFormatsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        PostAccountNumberFormatsRequest:
            type: object
            properties:
                accountType:
                    format: int64
                    type: integer
                    example: 1
                prefixType:
                    format: int64
                    type: integer
                    example: 101
        PutCachechangesSwagger:
            type: object
            properties:
                cacheType:
                    format: int64
                    type: integer
                    example: 2
        PutCachesResponse:
            type: object
            properties:
                cacheType:
                    $ref: '#/components/schemas/PutCachechangesSwagger'
        PutCachesRequest:
            type: object
            properties:
                cacheType:
                    format: int64
                    type: integer
                    example: 2
        GetCachesResponse:
            type: object
            properties:
                cacheType:
                    $ref: '#/components/schemas/EnumOptionData'
                enabled:
                    type: boolean
        CommandWrapper:
            type: object
            properties:
                groupId:
                    format: int64
                    type: integer
                clientId:
                    format: int64
                    type: integer
                loanId:
                    format: int64
                    type: integer
                savingsId:
                    format: int64
                    type: integer
                entityName:
                    type: string
                taskPermissionName:
                    type: string
                entityId:
                    format: int64
                    type: integer
                subentityId:
                    format: int64
                    type: integer
                href:
                    type: string
                json:
                    type: string
                transactionId:
                    type: string
                productId:
                    format: int64
                    type: integer
                creditBureauId:
                    format: int64
                    type: integer
                organisationCreditBureauId:
                    format: int64
                    type: integer
                create:
                    type: boolean
                createDatatable:
                    type: boolean
                deleteDatatable:
                    type: boolean
                updateDatatable:
                    type: boolean
                datatableResource:
                    type: boolean
                deleteOneToOne:
                    type: boolean
                deleteMultiple:
                    type: boolean
                updateOneToOne:
                    type: boolean
                updateMultiple:
                    type: boolean
                registerDatatable:
                    type: boolean
                noteResource:
                    type: boolean
                cacheResource:
                    type: boolean
                updateOperation:
                    type: boolean
                delete:
                    type: boolean
                deleteOperation:
                    type: boolean
                surveyResource:
                    type: boolean
                registerSurvey:
                    type: boolean
                fullFilSurvey:
                    type: boolean
                workingDaysResource:
                    type: boolean
                passwordPreferencesResource:
                    type: boolean
                permissionResource:
                    type: boolean
                userResource:
                    type: boolean
                currencyResource:
                    type: boolean
                loanDisburseDetailResource:
                    type: boolean
                updateDisbursementDate:
                    type: boolean
                update:
                    type: boolean
        GetCodeValuesDataResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Passport
                description:
                    type: string
                    example: Passport information
                position:
                    format: int32
                    type: integer
                    example: 0
        PostCodeValueDataResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        PostCodeValuesDataRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Passport
                description:
                    type: string
                    example: Passport information
                position:
                    format: int32
                    type: integer
                    example: 0
        PutCodeValueDataResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
                changes:
                    $ref: '#/components/schemas/PutCodeValuechangesSwagger'
        PutCodeValuechangesSwagger:
            type: object
            properties:
                name:
                    type: string
                    example: Passport
                description:
                    type: string
                    example: Passport information
                position:
                    format: int32
                    type: integer
                    example: 0
        PutCodeValuesDataRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Passport
                description:
                    type: string
                    example: Passport information
                position:
                    format: int32
                    type: integer
                    example: 0
        DeleteCodeValueDataResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        GetCodesResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Education
                systemDefined:
                    type: boolean
                    example: true
        PostCodesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        PostCodesRequest:
            type: object
            properties:
                name:
                    type: string
                    example: MyNewCode
        PutCodesApichangesSwagger:
            type: object
            properties:
                name:
                    type: string
                    example: MyNewCode(changed)
        PutCodesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
                changes:
                    $ref: '#/components/schemas/PutCodesApichangesSwagger'
        PutCodesRequest:
            type: object
            properties:
                name:
                    type: string
                    example: MyNewCode(changed)
        DeleteCodesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        PutExternalServiceRequest:
            type: object
            properties:
                username:
                    type: string
                    example: test@mifos.org
                password:
                    type: string
                    example: XXXX
        ExternalServicesPropertiesData:
            type: object
            properties:
                name:
                    type: string
                value:
                    type: string
        GetGlobalConfigurationsResponse:
            type: object
            properties:
                globalConfiguration:
                    type: array
                    items:
                        $ref: '#/components/schemas/GlobalConfigurationPropertyData'
        GlobalConfigurationPropertyData:
            type: object
            properties:
                name:
                    type: string
                enabled:
                    type: boolean
                value:
                    format: int64
                    type: integer
                dateValue:
                    format: date-time
                    type: string
                id:
                    format: int64
                    type: integer
                description:
                    type: string
                trapDoor:
                    type: boolean
        PutGlobalConfigurationsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
                changes:
                    $ref: '#/components/schemas/PutGlobalConfigurationsResponsechangesSwagger'
        PutGlobalConfigurationsResponsechangesSwagger:
            type: object
            properties:
                enabled:
                    type: boolean
                    example: true
        PutGlobalConfigurationsRequest:
            type: object
            properties:
                enabled:
                    type: boolean
                    example: true
                value:
                    format: int64
                    type: integer
                    example: 2
        PutDataTablesResponse:
            type: object
            properties:
                resourceIdentifier:
                    type: string
                    example: extra_client_details
        PutDataTablesRequest:
            type: object
            properties:
                appTableName:
                    type: string
                    example: m_client
                dropColumns:
                    type: array
                    items:
                        $ref: '#/components/schemas/PutDataTablesRequestDropColumns'
                addColumns:
                    type: array
                    items:
                        $ref: '#/components/schemas/PutDataTablesRequestAddColumns'
                ChangeColumns:
                    type: array
                    items:
                        $ref: '#/components/schemas/PutDataTablesRequestChangeColumns'
        PutDataTablesRequestAddColumns:
            type: object
            properties:
                name:
                    type: string
                    example: Question
                type:
                    type: string
                    example: Dropdown
                code:
                    type: string
                    example: Gender
                mandatory:
                    type: boolean
                    example: true
        PutDataTablesRequestChangeColumns:
            type: object
            properties:
                name:
                    type: string
                    example: Question
                newName:
                    type: string
                    example: Question 2
                code:
                    type: string
                    example: Gender
                newCode:
                    type: string
                    example: Gender2
                mandatory:
                    type: boolean
                    example: true
        PutDataTablesRequestDropColumns:
            type: object
            properties:
                name:
                    type: string
                    example: Gender_cd_Question
        GetDataTablesResponse:
            type: object
            properties:
                appTableName:
                    type: string
                    example: m_client
                datatableName:
                    type: string
                    example: extra_client_details
                column:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResultsetColumnHeaderData'
        ResultsetColumnHeaderData:
            type: object
            properties:
                columnName:
                    type: string
                columnType:
                    type: string
                columnLength:
                    format: int64
                    type: integer
                columnDisplayType:
                    type: string
                columnCode:
                    type: string
                dateDisplayType:
                    type: boolean
                dateTimeDisplayType:
                    type: boolean
                integerDisplayType:
                    type: boolean
                decimalDisplayType:
                    type: boolean
                booleanDisplayType:
                    type: boolean
                codeValueDisplayType:
                    type: boolean
                codeLookupDisplayType:
                    type: boolean
                string:
                    type: boolean
                mandatory:
                    type: boolean
                optional:
                    type: boolean
        PostDataTablesResponse:
            type: object
            properties:
                resourceIdentifier:
                    type: string
                    example: extra_client_details
        PostDataTablesRequest:
            type: object
            properties:
                applicationTableName:
                    type: string
                    example: m_client
                registeredTableName:
                    type: string
                    example: extra_client_details
                multiRow:
                    type: boolean
                    example: true
                columnHeaderData:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResultsetColumnHeaderData'
        DeleteDataTablesResponse:
            type: object
            properties:
                resourceIdentifier:
                    type: string
                    example: extra_client_details
        PostDataTablesRegisterDatatableAppTable:
            type: object
        GetDataTablesAppTableIdResponse:
            type: object
            properties:
                columnHeaders:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResultsetColumnHeaderData'
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResultsetRowData'
        ResultsetRowData:
            type: object
            properties:
                row:
                    type: array
                    items:
                        type: string
        PostDataTablesAppTableIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostDataTablesAppTableIdRequest:
            type: object
            properties:
                BusinessDescription:
                    type: string
                    example: Livestock sales
                Comment:
                    type: string
                    example: First comment made
                Education_cv:
                    type: string
                    example: Primary
                Gender_cd:
                    format: int64
                    type: integer
                    example: 6
                HighestRatePaid:
                    format: double
                    type: number
                    example: 8.5
                NextVisit:
                    type: string
                    example: 01 October 2012
                YearsinBusiness:
                    format: int64
                    type: integer
                    example: 5
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
                locale:
                    type: string
                    example: en
        PutDataTablesAppTableIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutDataTablesAppTableIdResponseChanges'
        PutDataTablesAppTableIdResponseChanges:
            type: object
            properties:
                BusinessDescription:
                    type: string
                    example: Livestock sales updated
        PutDataTablesAppTableIdRequest:
            type: object
            properties:
                BusinessDescription:
                    type: string
                    example: Livestock sales updated
        PutDataTablesAppTableIdDatatableIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PutDataTablesAppTableIdDatatableIdRequest:
            type: object
            properties:
                DateOfBirth:
                    type: string
                    example: 01 June 1982
                Education_cdHighest:
                    format: int64
                    type: integer
                    example: 5
                Name:
                    type: string
                    example: June
                OtherNotes:
                    type: string
                    example: More notes
                PointsScore:
                    format: int64
                    type: integer
                    example: 20
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
                locale:
                    type: string
                    example: en
        DeleteDataTablesDatatableAppTableIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        DeleteDataTablesDatatableAppTableIdDatatableIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        DeleteEntityDatatableChecksTemplateResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostEntityDatatableChecksTemplateResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostEntityDatatableChecksTemplateRequest:
            type: object
            properties:
                entity:
                    type: string
                    example: m_loan
                status:
                    format: int64
                    type: integer
                    example: 100
                datatableName:
                    type: string
                    example: Additional Details
                productId:
                    format: int64
                    type: integer
                    example: 1
        GetEntityDatatableChecksResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                entity:
                    type: string
                status:
                    $ref: '#/components/schemas/EnumOptionData'
                datatableName:
                    type: string
                systemDefined:
                    type: boolean
                order:
                    format: int64
                    type: integer
                productId:
                    format: int64
                    type: integer
                productName:
                    type: string
        AppUser:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                email:
                    type: string
                username:
                    type: string
                firstname:
                    type: string
                lastname:
                    type: string
                password:
                    type: string
                accountNonExpired:
                    type: boolean
                accountNonLocked:
                    type: boolean
                credentialsNonExpired:
                    type: boolean
                enabled:
                    type: boolean
                deleted:
                    type: boolean
                office:
                    $ref: '#/components/schemas/Office'
                staff:
                    $ref: '#/components/schemas/Staff'
                roles:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
                lastTimePasswordUpdated:
                    format: date-time
                    type: string
                passwordNeverExpires:
                    type: boolean
                appUserClientMappings:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/AppUserClientMapping'
                authorities:
                    type: array
                    items:
                        $ref: '#/components/schemas/GrantedAuthority'
                selfServiceUser:
                    type: boolean
                staffId:
                    format: int64
                    type: integer
                staffDisplayName:
                    type: string
                notEnabled:
                    type: boolean
                new:
                    type: boolean
        AppUserClientMapping:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                client:
                    $ref: '#/components/schemas/Client'
                new:
                    type: boolean
        Charge:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                amount:
                    type: number
                currencyCode:
                    type: string
                chargeTimeType:
                    format: int32
                    type: integer
                chargeCalculation:
                    format: int32
                    type: integer
                chargePaymentMode:
                    format: int32
                    type: integer
                feeInterval:
                    format: int32
                    type: integer
                penalty:
                    type: boolean
                active:
                    type: boolean
                deleted:
                    type: boolean
                minCap:
                    type: number
                maxCap:
                    type: number
                account:
                    $ref: '#/components/schemas/GLAccount'
                taxGroup:
                    $ref: '#/components/schemas/TaxGroup'
                feeOnMonthDay:
                    $ref: '#/components/schemas/MonthDay'
                savingsCharge:
                    type: boolean
                annualFee:
                    type: boolean
                monthlyFee:
                    type: boolean
                overdueInstallment:
                    type: boolean
                allowedLoanChargeTime:
                    type: boolean
                allowedClientChargeTime:
                    type: boolean
                allowedSavingsChargeTime:
                    type: boolean
                loanCharge:
                    type: boolean
                clientCharge:
                    type: boolean
                allowedSavingsChargeCalculationType:
                    type: boolean
                allowedClientChargeCalculationType:
                    type: boolean
                percentageOfApprovedAmount:
                    type: boolean
                percentageOfDisbursementAmount:
                    type: boolean
                disbursementCharge:
                    type: boolean
                new:
                    type: boolean
        ChargeData:
            type: object
            properties:
                penalty:
                    type: boolean
                overdueInstallmentCharge:
                    type: boolean
        Chronology:
            type: object
            properties:
                zone:
                    $ref: '#/components/schemas/DateTimeZone'
        Client:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                office:
                    $ref: '#/components/schemas/Office'
                transferToOffice:
                    $ref: '#/components/schemas/Office'
                image:
                    $ref: '#/components/schemas/Image'
                status:
                    format: int32
                    type: integer
                firstname:
                    type: string
                middlename:
                    type: string
                lastname:
                    type: string
                displayName:
                    type: string
                externalId:
                    type: string
                staff:
                    $ref: '#/components/schemas/Staff'
                groups:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/Group'
                accountNumberRequiresAutoGeneration:
                    type: boolean
                closureDate:
                    format: date
                    type: string
                withdrawalDate:
                    format: date
                    type: string
                submittedOnDate:
                    format: date
                    type: string
                legalForm:
                    format: int32
                    type: integer
                reopenedDate:
                    format: date
                    type: string
                active:
                    type: boolean
                closed:
                    type: boolean
                rejected:
                    type: boolean
                rejectedDate:
                    format: date
                    type: string
                notActive:
                    type: boolean
                pending:
                    type: boolean
                withdrawn:
                    type: boolean
                transferInProgress:
                    type: boolean
                transferOnHold:
                    type: boolean
                transferInProgressOrOnHold:
                    type: boolean
                notPending:
                    type: boolean
                activationLocalDate:
                    format: date
                    type: string
                officeJoiningLocalDate:
                    format: date
                    type: string
                notStaff:
                    type: boolean
                new:
                    type: boolean
        CurrencyData:
            type: object
        DatatableCheckStatusData:
            type: object
        DatatableChecksData:
            type: object
        DateTimeField:
            type: object
            properties:
                durationField:
                    $ref: '#/components/schemas/DurationField'
                minimumValue:
                    format: int32
                    type: integer
                maximumValue:
                    format: int32
                    type: integer
                leapDurationField:
                    $ref: '#/components/schemas/DurationField'
                rangeDurationField:
                    $ref: '#/components/schemas/DurationField'
                lenient:
                    type: boolean
                name:
                    type: string
                type:
                    $ref: '#/components/schemas/DateTimeFieldType'
                supported:
                    type: boolean
        DateTimeFieldType:
            type: object
            properties:
                rangeDurationType:
                    $ref: '#/components/schemas/DurationFieldType'
                durationType:
                    $ref: '#/components/schemas/DurationFieldType'
                name:
                    type: string
        DateTimeZone:
            type: object
            properties:
                fixed:
                    type: boolean
                id:
                    type: string
        DurationField:
            type: object
            properties:
                precise:
                    type: boolean
                unitMillis:
                    format: int64
                    type: integer
                name:
                    type: string
                type:
                    $ref: '#/components/schemas/DurationFieldType'
                supported:
                    type: boolean
        DurationFieldType:
            type: object
            properties:
                name:
                    type: string
        FloatingRate:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                floatingRatePeriods:
                    type: array
                    items:
                        $ref: '#/components/schemas/FloatingRatePeriod'
                createdBy:
                    $ref: '#/components/schemas/AppUser'
                modifiedBy:
                    $ref: '#/components/schemas/AppUser'
                createdOn:
                    format: date-time
                    type: string
                modifiedOn:
                    format: date-time
                    type: string
                active:
                    type: boolean
                baseLendingRate:
                    type: boolean
                new:
                    type: boolean
        FloatingRatePeriod:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                fromDate:
                    format: date-time
                    type: string
                interestRate:
                    type: number
                createdBy:
                    $ref: '#/components/schemas/AppUser'
                modifiedBy:
                    $ref: '#/components/schemas/AppUser'
                createdOn:
                    format: date-time
                    type: string
                modifiedOn:
                    format: date-time
                    type: string
                active:
                    type: boolean
                floatingRatesId:
                    $ref: '#/components/schemas/FloatingRate'
                differentialToBaseLendingRate:
                    type: boolean
                new:
                    type: boolean
        FundData:
            type: object
        GLAccount:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/GLAccount'
                name:
                    type: string
                glCode:
                    type: string
                disabled:
                    type: boolean
                manualEntriesAllowed:
                    type: boolean
                type:
                    format: int32
                    type: integer
                usage:
                    format: int32
                    type: integer
                headerAccount:
                    type: boolean
                detailAccount:
                    type: boolean
                new:
                    type: boolean
        GetEntityDatatableChecksTemplateResponse:
            type: object
            properties:
                entities:
                    type: array
                    items:
                        type: string
                statusClient:
                    type: array
                    items:
                        $ref: '#/components/schemas/DatatableCheckStatusData'
                statusGroup:
                    type: array
                    items:
                        $ref: '#/components/schemas/DatatableCheckStatusData'
                statusSavings:
                    type: array
                    items:
                        $ref: '#/components/schemas/DatatableCheckStatusData'
                statusLoans:
                    type: array
                    items:
                        $ref: '#/components/schemas/DatatableCheckStatusData'
                datatables:
                    type: array
                    items:
                        $ref: '#/components/schemas/DatatableChecksData'
                loanProductDatas:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductData'
                savingsProductDatas:
                    type: array
                    items:
                        $ref: '#/components/schemas/SavingsProductData'
        GrantedAuthority:
            type: object
            properties:
                authority:
                    type: string
        Group:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                office:
                    $ref: '#/components/schemas/Office'
                staff:
                    $ref: '#/components/schemas/Staff'
                parent:
                    $ref: '#/components/schemas/Group'
                groupLevel:
                    $ref: '#/components/schemas/GroupLevel'
                clientMembers:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/Client'
                submittedOnDate:
                    format: date
                    type: string
                accountNumberRequiresAutoGeneration:
                    type: boolean
                active:
                    type: boolean
                closed:
                    type: boolean
                activeClientMembers:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/Client'
                childGroup:
                    type: boolean
                notActive:
                    type: boolean
                pending:
                    type: boolean
                transferInProgress:
                    type: boolean
                transferOnHold:
                    type: boolean
                group:
                    type: boolean
                center:
                    type: boolean
                transferInProgressOrOnHold:
                    type: boolean
                notPending:
                    type: boolean
                activationLocalDate:
                    format: date
                    type: string
                new:
                    type: boolean
        GroupLevel:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                parentId:
                    format: int64
                    type: integer
                superParent:
                    type: boolean
                levelName:
                    type: string
                recursable:
                    type: boolean
                group:
                    type: boolean
                center:
                    type: boolean
                new:
                    type: boolean
        Image:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                location:
                    type: string
                storageType:
                    format: int32
                    type: integer
                new:
                    type: boolean
        LoanProduct:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                shortName:
                    type: string
                loanProductRelatedDetail:
                    $ref: '#/components/schemas/LoanProductRelatedDetail'
                includeInBorrowerCycle:
                    type: boolean
                startDate:
                    format: date
                    type: string
                closeDate:
                    format: date
                    type: string
                externalId:
                    type: string
                minimumDaysBetweenDisbursalAndFirstRepayment:
                    format: int32
                    type: integer
                productInterestRecalculationDetails:
                    $ref: '#/components/schemas/LoanProductInterestRecalculationDetails'
                loanProductGuaranteeDetails:
                    $ref: '#/components/schemas/LoanProductGuaranteeDetails'
                principalThresholdForLastInstallment:
                    type: number
                installmentAmountInMultiplesOf:
                    format: int32
                    type: integer
                floatingRates:
                    $ref: '#/components/schemas/LoanProductFloatingRates'
                currency:
                    $ref: '#/components/schemas/MonetaryCurrency'
                accountingType:
                    format: int32
                    type: integer
                accrualBasedAccountingEnabled:
                    type: boolean
                minNominalInterestRatePerPeriod:
                    type: number
                maxNominalInterestRatePerPeriod:
                    type: number
                minNumberOfRepayments:
                    format: int32
                    type: integer
                maxNumberOfRepayments:
                    format: int32
                    type: integer
                repaymentStrategy:
                    $ref: '#/components/schemas/LoanTransactionProcessingStrategy'
                loanProductCharges:
                    type: array
                    items:
                        $ref: '#/components/schemas/Charge'
                loanProductConfigurableAttributes:
                    $ref: '#/components/schemas/LoanProductConfigurableAttributes'
                principalAmount:
                    $ref: '#/components/schemas/Money'
                minPrincipalAmount:
                    $ref: '#/components/schemas/Money'
                maxPrincipalAmount:
                    $ref: '#/components/schemas/Money'
                arrearsBasedOnOriginalSchedule:
                    type: boolean
                multiDisburseLoan:
                    type: boolean
                interestRecalculationEnabled:
                    type: boolean
                numberOfRepayments:
                    format: int32
                    type: integer
                nominalInterestRatePerPeriod:
                    type: number
                interestPeriodFrequencyType:
                    enum:
                        - DAYS
                        - WEEKS
                        - MONTHS
                        - YEARS
                        - INVALID
                    type: string
                linkedToFloatingInterestRate:
                    type: boolean
                cashBasedAccountingEnabled:
                    type: boolean
                upfrontAccrualAccountingEnabled:
                    type: boolean
                accountingDisabled:
                    type: boolean
                periodicAccrualAccountingEnabled:
                    type: boolean
                holdGuaranteeFundsEnabled:
                    type: boolean
                new:
                    type: boolean
        LoanProductBorrowerCycleVariationData:
            type: object
            properties:
                borrowerCycleNumber:
                    format: int32
                    type: integer
                paramType:
                    enum:
                        - INVALID
                        - PRINCIPAL
                        - INTERESTRATE
                        - REPAYMENT
                    type: string
                valueConditionType:
                    enum:
                        - INVALID
                        - EQUAL
                        - GREATERTHAN
                    type: string
                defaultValue:
                    type: number
        LoanProductConfigurableAttributes:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                loanProduct:
                    $ref: '#/components/schemas/LoanProduct'
                amortizationBoolean:
                    type: boolean
                interestMethodBoolean:
                    type: boolean
                transactionProcessingStrategyBoolean:
                    type: boolean
                interestCalcPeriodBoolean:
                    type: boolean
                arrearsToleranceBoolean:
                    type: boolean
                repaymentEveryBoolean:
                    type: boolean
                graceOnPrincipalAndInterestPaymentBoolean:
                    type: boolean
                graceOnArrearsAgingBoolean:
                    type: boolean
                new:
                    type: boolean
        LoanProductData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                description:
                    type: string
                fundId:
                    format: int64
                    type: integer
                fundName:
                    type: string
                currency:
                    $ref: '#/components/schemas/CurrencyData'
                principal:
                    type: number
                minPrincipal:
                    type: number
                maxPrincipal:
                    type: number
                numberOfRepayments:
                    format: int32
                    type: integer
                repaymentEvery:
                    format: int32
                    type: integer
                repaymentFrequencyType:
                    $ref: '#/components/schemas/EnumOptionData'
                interestRatePerPeriod:
                    type: number
                interestRateFrequencyType:
                    $ref: '#/components/schemas/EnumOptionData'
                annualInterestRate:
                    type: number
                interestRateDifferential:
                    type: number
                minDifferentialLendingRate:
                    type: number
                defaultDifferentialLendingRate:
                    type: number
                maxDifferentialLendingRate:
                    type: number
                amortizationType:
                    $ref: '#/components/schemas/EnumOptionData'
                interestType:
                    $ref: '#/components/schemas/EnumOptionData'
                interestCalculationPeriodType:
                    $ref: '#/components/schemas/EnumOptionData'
                allowPartialPeriodInterestCalcualtion:
                    type: boolean
                inArrearsTolerance:
                    type: number
                transactionProcessingStrategyId:
                    format: int64
                    type: integer
                transactionProcessingStrategyName:
                    type: string
                graceOnPrincipalPayment:
                    format: int32
                    type: integer
                recurringMoratoriumOnPrincipalPeriods:
                    format: int32
                    type: integer
                graceOnInterestPayment:
                    format: int32
                    type: integer
                graceOnInterestCharged:
                    format: int32
                    type: integer
                graceOnArrearsAgeing:
                    format: int32
                    type: integer
                daysInMonthType:
                    $ref: '#/components/schemas/EnumOptionData'
                daysInYearType:
                    $ref: '#/components/schemas/EnumOptionData'
                interestRecalculationData:
                    $ref: '#/components/schemas/LoanProductInterestRecalculationData'
                principalVariationsForBorrowerCycle:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
                interestRateVariationsForBorrowerCycle:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
                numberOfRepaymentVariationsForBorrowerCycle:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductBorrowerCycleVariationData'
                fundOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/FundData'
                repaymentFrequencyTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                interestRateFrequencyTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                amortizationTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                interestTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                interestCalculationPeriodTypeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                chargeOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/ChargeData'
                multiDisburseLoan:
                    type: boolean
                outstandingLoanBalance:
                    type: number
                getloanProductConfigurableAttributes:
                    $ref: '#/components/schemas/LoanProductConfigurableAttributes'
                minimumGapBetweenInstallments:
                    format: int32
                    type: integer
                maximumGapBetweenInstallments:
                    format: int32
                    type: integer
                floatingInterestRateCalculationAllowed:
                    type: boolean
                linkedToFloatingInterestRates:
                    type: boolean
                variableInstallmentsAllowed:
                    type: boolean
                compoundingToBePostedAsTransaction:
                    type: boolean
                interestRecalculationEnabled:
                    type: boolean
        LoanProductFloatingRates:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                loanProduct:
                    $ref: '#/components/schemas/LoanProduct'
                floatingRate:
                    $ref: '#/components/schemas/FloatingRate'
                interestRateDifferential:
                    type: number
                minDifferentialLendingRate:
                    type: number
                defaultDifferentialLendingRate:
                    type: number
                maxDifferentialLendingRate:
                    type: number
                floatingInterestRateCalculationAllowed:
                    type: boolean
                new:
                    type: boolean
        LoanProductGuaranteeDetails:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                mandatoryGuarantee:
                    type: number
                minimumGuaranteeFromOwnFunds:
                    type: number
                minimumGuaranteeFromGuarantor:
                    type: number
                new:
                    type: boolean
        LoanProductInterestRecalculationData:
            type: object
            properties:
                interestRecalculationCompoundingType:
                    $ref: '#/components/schemas/EnumOptionData'
                rescheduleStrategyType:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationRestFrequencyType:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationRestFrequencyInterval:
                    format: int32
                    type: integer
                recalculationRestFrequencyNthDay:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationRestFrequencyWeekday:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationRestFrequencyOnDay:
                    format: int32
                    type: integer
                recalculationCompoundingFrequencyType:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationCompoundingFrequencyInterval:
                    format: int32
                    type: integer
                recalculationCompoundingFrequencyNthDay:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationCompoundingFrequencyWeekday:
                    $ref: '#/components/schemas/EnumOptionData'
                recalculationCompoundingFrequencyOnDay:
                    format: int32
                    type: integer
                compoundingToBePostedAsTransaction:
                    type: boolean
        LoanProductInterestRecalculationDetails:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                interestRecalculationCompoundingMethod:
                    format: int32
                    type: integer
                rescheduleStrategyMethod:
                    format: int32
                    type: integer
                restFrequencyType:
                    enum:
                        - INVALID
                        - SAME_AS_REPAYMENT_PERIOD
                        - DAILY
                        - WEEKLY
                        - MONTHLY
                    type: string
                restInterval:
                    format: int32
                    type: integer
                restFrequencyNthDay:
                    format: int32
                    type: integer
                restFrequencyWeekday:
                    format: int32
                    type: integer
                restFrequencyOnDay:
                    format: int32
                    type: integer
                compoundingFrequencyType:
                    enum:
                        - INVALID
                        - SAME_AS_REPAYMENT_PERIOD
                        - DAILY
                        - WEEKLY
                        - MONTHLY
                    type: string
                compoundingInterval:
                    format: int32
                    type: integer
                compoundingFrequencyNthDay:
                    format: int32
                    type: integer
                compoundingFrequencyWeekday:
                    format: int32
                    type: integer
                compoundingFrequencyOnDay:
                    format: int32
                    type: integer
                isCompoundingToBePostedAsTransaction:
                    type: boolean
                arrearsBasedOnOriginalSchedule:
                    type: boolean
                new:
                    type: boolean
        LoanProductRelatedDetail:
            type: object
            properties:
                currency:
                    $ref: '#/components/schemas/MonetaryCurrency'
                principal:
                    $ref: '#/components/schemas/Money'
                nominalInterestRatePerPeriod:
                    type: number
                interestPeriodFrequencyType:
                    enum:
                        - DAYS
                        - WEEKS
                        - MONTHS
                        - YEARS
                        - INVALID
                    type: string
                annualNominalInterestRate:
                    type: number
                interestMethod:
                    enum:
                        - DECLINING_BALANCE
                        - FLAT
                        - INVALID
                    type: string
                interestCalculationPeriodMethod:
                    enum:
                        - DAILY
                        - SAME_AS_REPAYMENT_PERIOD
                        - INVALID
                    type: string
                allowPartialPeriodInterestCalcualtion:
                    type: boolean
                repayEvery:
                    format: int32
                    type: integer
                repaymentPeriodFrequencyType:
                    enum:
                        - DAYS
                        - WEEKS
                        - MONTHS
                        - YEARS
                        - INVALID
                    type: string
                numberOfRepayments:
                    format: int32
                    type: integer
                graceOnPrincipalPayment:
                    format: int32
                    type: integer
                graceOnInterestPayment:
                    format: int32
                    type: integer
                amortizationMethod:
                    enum:
                        - EQUAL_PRINCIPAL
                        - EQUAL_INSTALLMENTS
                        - INVALID
                    type: string
                inArrearsTolerance:
                    $ref: '#/components/schemas/Money'
                graceOnArrearsAgeing:
                    format: int32
                    type: integer
                arrearsTolerance:
                    type: number
                interestRecalculationEnabled:
                    type: boolean
                graceOnDueDate:
                    format: int32
                    type: integer
        LoanTransactionProcessingStrategy:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                standardStrategy:
                    type: boolean
                heavensfamilyStrategy:
                    type: boolean
                earlyPaymentStrategy:
                    type: boolean
                creocoreStrategy:
                    type: boolean
                indianRBIStrategy:
                    type: boolean
                principalInterestPenaltiesFeesOrderStrategy:
                    type: boolean
                interestPrincipalPenaltiesFeesOrderStrategy:
                    type: boolean
                new:
                    type: boolean
        MonetaryCurrency:
            type: object
            properties:
                code:
                    type: string
                digitsAfterDecimal:
                    format: int32
                    type: integer
                currencyInMultiplesOf:
                    format: int32
                    type: integer
        Money:
            type: object
            properties:
                currencyCode:
                    type: string
                currencyDigitsAfterDecimal:
                    format: int32
                    type: integer
                amount:
                    type: number
                currency:
                    $ref: '#/components/schemas/MonetaryCurrency'
                zero:
                    type: boolean
                currencyInMultiplesOf:
                    format: int32
                    type: integer
                amountDefaultedToNullIfZero:
                    type: number
                lessThanZero:
                    type: boolean
                greaterThanZero:
                    type: boolean
        MonthDay:
            type: object
            properties:
                dayOfMonth:
                    format: int32
                    type: integer
                fieldTypes:
                    type: array
                    items:
                        $ref: '#/components/schemas/DateTimeFieldType'
                monthOfYear:
                    format: int32
                    type: integer
                chronology:
                    $ref: '#/components/schemas/Chronology'
                values:
                    type: array
                    items:
                        format: int32
                        type: integer
                fields:
                    type: array
                    items:
                        $ref: '#/components/schemas/DateTimeField'
        Office:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                name:
                    type: string
                hierarchy:
                    type: string
                openingLocalDate:
                    format: date
                    type: string
                new:
                    type: boolean
        Permission:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                grouping:
                    type: string
                code:
                    type: string
                new:
                    type: boolean
        Role:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                disabled:
                    type: boolean
                permissions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Permission'
                enabled:
                    type: boolean
                new:
                    type: boolean
        SavingsProductData:
            type: object
            properties:
                name:
                    type: string
                depositAccountType:
                    type: string
        Staff:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                loanOfficer:
                    type: boolean
                active:
                    type: boolean
                image:
                    $ref: '#/components/schemas/Image'
                notActive:
                    type: boolean
                notLoanOfficer:
                    type: boolean
                new:
                    type: boolean
        TaxComponent:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                createdBy:
                    $ref: '#/components/schemas/AppUser'
                createdDate:
                    format: date-time
                    type: string
                lastModifiedBy:
                    $ref: '#/components/schemas/AppUser'
                lastModifiedDate:
                    format: date-time
                    type: string
                percentage:
                    type: number
                debitAccountType:
                    format: int32
                    type: integer
                debitAcount:
                    $ref: '#/components/schemas/GLAccount'
                creditAccountType:
                    format: int32
                    type: integer
                creditAcount:
                    $ref: '#/components/schemas/GLAccount'
                taxComponentHistories:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxComponentHistory'
                taxGroupMappings:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxGroupMappings'
                new:
                    type: boolean
        TaxComponentHistory:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                createdBy:
                    $ref: '#/components/schemas/AppUser'
                createdDate:
                    format: date-time
                    type: string
                lastModifiedBy:
                    $ref: '#/components/schemas/AppUser'
                lastModifiedDate:
                    format: date-time
                    type: string
                percentage:
                    type: number
                new:
                    type: boolean
        TaxGroup:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                createdBy:
                    $ref: '#/components/schemas/AppUser'
                createdDate:
                    format: date-time
                    type: string
                lastModifiedBy:
                    $ref: '#/components/schemas/AppUser'
                lastModifiedDate:
                    format: date-time
                    type: string
                name:
                    type: string
                taxGroupMappings:
                    uniqueItems: true
                    type: array
                    items:
                        $ref: '#/components/schemas/TaxGroupMappings'
                new:
                    type: boolean
        TaxGroupMappings:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                createdBy:
                    $ref: '#/components/schemas/AppUser'
                createdDate:
                    format: date-time
                    type: string
                lastModifiedBy:
                    $ref: '#/components/schemas/AppUser'
                lastModifiedDate:
                    format: date-time
                    type: string
                taxComponent:
                    $ref: '#/components/schemas/TaxComponent'
                endDate:
                    format: date-time
                    type: string
                new:
                    type: boolean
        PutReportResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 132
                changes:
                    $ref: '#/components/schemas/PutReportResponseChanges'
        PutReportResponseChanges:
            type: object
            properties:
                reportName:
                    type: string
                    example: Changed New Report
                reportParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportParameterData'
        ReportParameterData:
            type: object
        PutReportRequest:
            type: object
            properties:
                reportName:
                    type: string
                    example: Completely New Report
                reportParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportParameterData'
        DeleteReportsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 132
        GetReportsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                reportName:
                    type: string
                    example: Client Listing
                reportType:
                    type: string
                    example: Table
                reportSubType:
                    type: string
                reportCategory:
                    type: string
                    example: Client
                description:
                    type: string
                    example: >-
                        Individual Client Report Lists the small number of defined fields on the client
                        table.  Would expect to copy this report and add any one to one additional data for
                        specific tenant needs. Can be run for any size MFI but you expect it only to be run
                        within a branch for larger ones.  Depending on how many columns are displayed, there
                        is probably is a limit of about 20/50k clients returned for html display (export to
                        excel doesnt have that client browser/memory impact).
                reportSql:
                    type: string
                coreReport:
                    type: boolean
                    example: true
                useReport:
                    type: boolean
                    example: true
                reportParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportParameterData'
        GetReportsTemplateResponse:
            type: object
            properties:
                allowedReportTypes:
                    type: array
                    items:
                        type: string
                allowedReportSubTypes:
                    type: array
                    items:
                        type: string
                allowedParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportParameterData'
        PostReportsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 132
        PostRepostRequest:
            type: object
            properties:
                reportName:
                    type: string
                    example: Completely New Report
                reportType:
                    type: string
                    example: Table
                reportSubType:
                    type: string
                reportCategory:
                    type: string
                    example: Loan
                description:
                    type: string
                    example: Just An Example
                reportSql:
                    type: string
                    example: select 'very good sql' as AComment
                reportParameters:
                    type: array
                    items:
                        $ref: '#/components/schemas/ReportParameterData'
        GetReportNameResponse:
            type: object
            properties:
                columnHeaders:
                    $ref: '#/components/schemas/ResultsetColumnHeaderData'
                row:
                    $ref: '#/components/schemas/ResultsetRowData'
        GetEntityTypeEntityIdDocumentsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                parentEntityType:
                    type: string
                    example: clients
                parentEntityId:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Client Details Form
                fileName:
                    type: string
                    example: CGAP.pdf
                size:
                    format: int64
                    type: integer
                    example: 5246719
                type:
                    type: string
                    example: application/pdf
                description:
                    type: string
                    example: A signed form signed by new member
                location:
                    type: string
                storageType:
                    format: int32
                    type: integer
        PutEntityTypeEntityIdDocumentsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 3
                changes:
                    $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
                resourceIdentifier:
                    type: string
                    example: '3'
        PutEntityTypeEntityIdDocumentsResponseChangesSwagger:
            type: object
        DeleteEntityTypeEntityIdDocumentsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 3
                changes:
                    $ref: '#/components/schemas/PutEntityTypeEntityIdDocumentsResponseChangesSwagger'
                resourceIdentifier:
                    type: string
                    example: '3'
        PostEntityTypeEntityIdDocumentsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 3
                resourceIdentifier:
                    type: string
                    example: '3'
        Event:
            type: object
            properties:
                actionName:
                    type: string
                entityName:
                    type: string
        Field:
            type: object
            properties:
                fieldName:
                    type: string
                fieldValue:
                    type: string
                fieldType:
                    type: string
        GetHookResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Web
                displayName:
                    type: string
                    example: Kremlin
                isActive:
                    type: boolean
                    example: true
                createdAt:
                    format: date
                    type: string
                updatedAt:
                    format: date
                    type: string
                templateId:
                    format: int64
                    type: integer
                    example: 1
                templateName:
                    type: string
                    example: My UGD
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/Event'
                config:
                    type: array
                    items:
                        $ref: '#/components/schemas/Field'
        PostHookResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        PostHookRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Web
                isActive:
                    type: boolean
                    example: true
                displayName:
                    type: string
                    example: Kremlin
                templateId:
                    format: int64
                    type: integer
                    example: 1
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/Event'
                config:
                    type: array
                    items:
                        $ref: '#/components/schemas/Field'
        PutHookResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
                changes:
                    $ref: '#/components/schemas/PutHookResponseChangesSwagger'
        PutHookResponseChangesSwagger:
            type: object
            properties:
                displayName:
                    type: string
                    example: Kremlin
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/Event'
                    example: '1'
                config:
                    type: array
                    items:
                        $ref: '#/components/schemas/Field'
        PutHookRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Web
                isActive:
                    type: boolean
                    example: true
                displayName:
                    type: string
                    example: Kremlin
                templateId:
                    format: int64
                    type: integer
                    example: 1
                events:
                    type: array
                    items:
                        $ref: '#/components/schemas/Event'
                config:
                    type: array
                    items:
                        $ref: '#/components/schemas/Field'
        DeleteHookResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 4
        GetHookTemplateResponse:
            type: object
            properties:
                templates:
                    type: array
                    items:
                        $ref: '#/components/schemas/HookTemplateData'
                groupings:
                    type: array
                    items:
                        $ref: '#/components/schemas/Grouping'
        Grouping:
            type: object
            properties:
                name:
                    type: string
        HookTemplateData:
            type: object
            properties:
                serviceId:
                    format: int64
                    type: integer
        GetSchedulerResponse:
            type: object
            properties:
                active:
                    type: boolean
                    example: true
        GetJobsJobIDJobRunHistoryResponse:
            type: object
            properties:
                totalFilteredRecords:
                    format: int32
                    type: integer
                    example: 8
                pageItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/JobDetailHistoryDataSwagger'
        JobDetailHistoryDataSwagger:
            type: object
            properties:
                version:
                    format: int64
                    type: integer
                    example: 1
                jobRunStartTime:
                    format: date-time
                    type: string
                jobRunEndTime:
                    format: date-time
                    type: string
                status:
                    type: string
                    example: success
                triggerType:
                    type: string
                    example: cron
        PutJobsJobsIDRequest:
            type: object
            properties:
                displayName:
                    type: string
                    example: Update loan Summary
                cronExpression:
                    type: string
                    example: 0 0 22 1/1 * ? *
                active:
                    type: boolean
                    example: false
        GetJobsResponse:
            type: object
            properties:
                jobId:
                    format: int64
                    type: integer
                    example: 1
                displayName:
                    type: string
                    example: Update loan Summary
                nextRunTime:
                    format: date-time
                    type: string
                initializingError:
                    type: string
                cronExpression:
                    type: string
                    example: 0 0 22 1/1 * ? *
                active:
                    type: boolean
                    example: false
                currentlyRunning:
                    type: boolean
                    example: false
                lastRunHistory:
                    $ref: '#/components/schemas/JobDetailHistoryData'
        JobDetailHistoryData:
            type: object
        PostReportMailingJobsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostReportMailingJobsRequest:
            type: object
            properties:
                locale:
                    type: string
                    example: en_GB
                dateFormat:
                    type: string
                    example: 'dd-MM-yyyy HH:mm:ss'
                name:
                    type: string
                    example: Client Numbers Report
                description:
                    type: string
                    example: Client Numbers Report
                startDateTime:
                    format: date-time
                    type: string
                stretchyReportId:
                    format: int64
                    type: integer
                    example: 120
                emailRecipients:
                    type: string
                    example: info@musonisystem.com
                emailSubject:
                    type: string
                    example: Client Numbers Report
                emailMessage:
                    type: string
                    example: Client Numbers Report
                recurrence:
                    type: string
                    example: 'FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR'
                isActive:
                    type: boolean
                    example: true
                stretchyReportParamMap:
                    type: string
                    example: >-
                        {"startDate":"2016-07-01","endDate":"2016-08-02","selectOffice":"1","environementUrl":"environementUrl"}
        PutReportMailingJobsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutReportMailingJobsResponseChanges'
        PutReportMailingJobsResponseChanges:
            type: object
            properties:
                startDateTime:
                    format: date-time
                    type: string
        PutReportMailingJobsRequest:
            type: object
            properties:
                locale:
                    type: string
                    example: en_GB
                dateFormat:
                    type: string
                    example: 'dd-MM-yyyy HH:mm:ss'
                startDateTime:
                    format: date-time
                    type: string
        DeleteReportMailingJobsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        DeleteReportMailingJobsRequest:
            type: object
        GetReportMailingJobsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Client Numbers Report
                description:
                    type: string
                    example: Client Numbers Report
                startDateTime:
                    format: date-time
                    type: string
                recurrence:
                    type: string
                timeline:
                    $ref: '#/components/schemas/ReportMailingJobTimelineData'
                emailRecipients:
                    type: string
                    example: info@musonisystem.com
                emailSubject:
                    type: string
                    example: Client Numbers Report
                emailMessage:
                    type: string
                    example: Client Numbers Report
                emailAttachmentFileFormat:
                    $ref: '#/components/schemas/EnumOptionData'
                stretchyReport:
                    $ref: '#/components/schemas/ReportData'
                stretchyReportParamMap:
                    type: string
                    example: >-
                        {"startDate":"2016-07-01","endDate":"2016-08-02","selectOffice":"1","environementUrl":"environementUrl"}
                nextRunDateTime:
                    format: date-time
                    type: string
                numberOfRuns:
                    format: int32
                    type: integer
                    example: 0
                isActive:
                    type: boolean
                    example: true
                runAsUserId:
                    format: int64
                    type: integer
                    example: 1
        ReportData:
            type: object
        ReportMailingJobTimelineData:
            type: object
        GetReportMailingJobsTemplate:
            type: object
            properties:
                isActive:
                    type: boolean
                    example: true
                emailAttachmentFileFormatOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
                stretchyReportParamDateOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
        ReportMailingJobRunHistoryData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                reportMailingJobId:
                    format: int64
                    type: integer
                startDateTime:
                    format: date-time
                    type: string
                endDateTime:
                    format: date-time
                    type: string
                status:
                    type: string
                errorMessage:
                    type: string
                errorLog:
                    type: string
        PostAuthenticationResponse:
            type: object
            properties:
                username:
                    type: string
                    example: mifos
                userId:
                    format: int64
                    type: integer
                    example: 1
                base64EncodedAuthenticationKey:
                    type: string
                    example: bWlmb3M6cGFzc3dvcmQ=
                authenticated:
                    type: boolean
                    example: true
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                staffId:
                    format: int64
                    type: integer
                    example: 1
                staffDisplayName:
                    type: string
                    example: 'Director, Program'
                organisationalRole:
                    $ref: '#/components/schemas/EnumOptionData'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleData'
                permissions:
                    type: array
                    items:
                        type: string
                    example: ALL_FUNCTIONS
        RoleData:
            type: object
        GetUserDetailsResponse:
            type: object
            properties:
                username:
                    type: string
                    example: mifos
                userId:
                    format: int64
                    type: integer
                    example: 1
                accessToken:
                    type: string
                    example: bWlmb3M6cGFzc3dvcmQ=
                authenticated:
                    type: boolean
                    example: true
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                staffId:
                    format: int64
                    type: integer
                    example: 1
                staffDisplayName:
                    type: string
                    example: mifosStaffDisplayName
                organisationalRole:
                    $ref: '#/components/schemas/EnumOptionData'
                roles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleData'
                permissions:
                    type: array
                    items:
                        type: string
                    example: ALL_FUNCTIONS
        PostSurveySurveyNameApptableIdResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 2
                clientId:
                    format: int64
                    type: integer
                    example: 87
                resourceId:
                    format: int64
                    type: integer
                    example: 87
        PostSurveySurveyNameApptableIdRequest:
            type: object
            properties:
                ppi_household_members_cd_q1_householdmembers:
                    format: int64
                    type: integer
                    example: 167
                ppi_highestschool_cd_q2_highestschool:
                    format: int64
                    type: integer
                    example: 174
                ppi_businessoccupation_cd_q3_businessoccupation:
                    format: int64
                    type: integer
                    example: 180
                ppi_habitablerooms_cd_q4_habitablerooms:
                    format: int64
                    type: integer
                    example: 184
                ppi_floortype_cd_q5_floortype:
                    format: int64
                    type: integer
                    example: 188
                ppi_lightingsource_cd_q6_lightingsource:
                    format: int64
                    type: integer
                    example: 190
                ppi_irons_cd_q7_irons:
                    format: int64
                    type: integer
                    example: 193
                ppi_mosquitonets_cd_q8_mosquitonets:
                    format: int64
                    type: integer
                    example: 195
                ppi_towels_cd_q9_towels:
                    format: int64
                    type: integer
                    example: 198
                ppi_fryingpans_cd_q10_fryingpans:
                    format: int64
                    type: integer
                    example: 201
                Date:
                    format: date-time
                    type: string
                dateFormat:
                    format: date-time
                    type: string
                locale:
                    type: string
                    example: en_GB
        GetSurveyResponse:
            type: object
            properties:
                datatableData:
                    $ref: '#/components/schemas/GetSurveyResponseDatatableData'
                enabled:
                    type: boolean
                    example: false
        GetSurveyResponseDatatableData:
            type: object
            properties:
                applicationTableName:
                    type: string
                    example: m_client
                registeredTableName:
                    type: string
                    example: ppi_kenya_2005
                columnHeaderData:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResultsetColumnHeaderData'
        PostHolidaysHolidayIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostHolidaysHolidayIdRequest:
            type: object
        PostHolidaysResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostHolidaysRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Good Friday
                description:
                    type: string
                    example: Good Friday
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
                locale:
                    type: string
                    example: en
                fromDate:
                    format: date
                    type: string
                toDate:
                    format: date
                    type: string
                repaymentsRescheduledTo:
                    format: date
                    type: string
                offices:
                    type: array
                    items:
                        $ref: '#/components/schemas/PostHolidaysRequestOffices'
        PostHolidaysRequestOffices:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
        GetHolidaysResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Good Friday
                fromDate:
                    format: date
                    type: string
                toDate:
                    format: date
                    type: string
                repaymentsRescheduledTo:
                    format: date
                    type: string
                officeId:
                    format: int64
                    type: integer
                    example: 1
                status:
                    $ref: '#/components/schemas/EnumOptionData'
        PutHolidaysHolidayIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutHolidaysHolidayIdResponseChanges'
        PutHolidaysHolidayIdResponseChanges:
            type: object
            properties:
                name:
                    type: string
                    example: Independence day
                description:
                    type: string
                    example: Holiday for Independence day celebration
        PutHolidaysHolidayIdRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Independence day
                description:
                    type: string
                    example: Holiday for Independence day celebration
        DeleteHolidaysHolidayIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        GetCurrenciesResponse:
            type: object
            properties:
                selectedCurrencyOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CurrencyData'
                currencyOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CurrencyData'
        PutCurrenciesResponse:
            type: object
            properties:
                currencies:
                    type: string
                    example: |-
                        ["KES",
                                "BND",
                                "LBP",
                                "GHC",
                                "USD",
                                "XOF",
                                "AED",
                                "AMD"]
        PutCurrenciesRequest:
            type: object
            properties:
                currencies:
                    type: string
                    example: |-
                        ["KES",
                                "BND",
                                "LBP",
                                "GHC",
                                "USD",
                                "XOF",
                                "AED",
                                "AMD"]
        GetOfficesResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Head Office
                nameDecorated:
                    type: string
                    example: Head Office
                externalId:
                    type: string
                    example: '1'
                openingDate:
                    format: date
                    type: string
                hierarchy:
                    type: string
                    example: .
        GetOfficesTemplateResponse:
            type: object
            properties:
                openingDate:
                    format: date
                    type: string
                allowedParents:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetOfficesResponse'
        PostOfficesResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 3
                resourceId:
                    format: int64
                    type: integer
                    example: 3
        PostOfficesRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Good Friday
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
                locale:
                    type: string
                    example: en
                openingDate:
                    format: date
                    type: string
                parentId:
                    format: int64
                    type: integer
                    example: 2
                externalId:
                    type: string
                    example: SYS54-88
        PutOfficesOfficeIdResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 3
                resourceId:
                    format: int64
                    type: integer
                    example: 3
                changes:
                    $ref: '#/components/schemas/PutOfficesOfficeIdResponseChanges'
        PutOfficesOfficeIdResponseChanges:
            type: object
            properties:
                name:
                    type: string
                    example: Name is updated
        PutOfficesOfficeIdRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Name is updated
        GetProvisioningCriteriaCriteriaIdResponse:
            type: object
            properties:
                criteriaId:
                    format: int64
                    type: integer
                    example: 1
                criteriaName:
                    type: string
                    example: High Risk Products Criteria
                createdBy:
                    type: string
                    example: mifos
                loanProducts:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductData'
                provisioningcriteria:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
        ProvisioningCriteriaDefinitionData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                categoryId:
                    format: int64
                    type: integer
                categoryName:
                    type: string
                minAge:
                    format: int64
                    type: integer
                maxAge:
                    format: int64
                    type: integer
                provisioningPercentage:
                    type: number
                liabilityAccount:
                    format: int64
                    type: integer
                liabilityCode:
                    type: string
                expenseAccount:
                    format: int64
                    type: integer
                expenseCode:
                    type: string
        GetProvisioningCriteriaResponse:
            type: object
            properties:
                criteriaId:
                    format: int64
                    type: integer
                    example: 1
                criteriaName:
                    type: string
                    example: High Risk Products Criteria
                createdBy:
                    type: string
                    example: mifos
        PostProvisioningCriteriaResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostProvisioningCriteriaRequest:
            type: object
            properties:
                criteriaName:
                    type: string
                    example: High Risk Products Criteria
                loanProducts:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductData'
                provisioningcriteria:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
        PutProvisioningCriteriaResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutProvisioningCriteriaResponseChanges'
        PutProvisioningCriteriaResponseChanges:
            type: object
            properties:
                criteriaName:
                    type: string
                    example: High Risk Products Criteria
        PutProvisioningCriteriaRequest:
            type: object
            properties:
                criteriaName:
                    type: string
                    example: High Risk Products Criteria
                loanProducts:
                    type: array
                    items:
                        $ref: '#/components/schemas/LoanProductData'
                provisioningcriteria:
                    type: array
                    items:
                        $ref: '#/components/schemas/ProvisioningCriteriaDefinitionData'
        DeleteProvisioningCriteriaResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        GetStaffResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                firstname:
                    type: string
                    example: John
                lastname:
                    type: string
                    example: Doe
                displayName:
                    type: string
                    example: 'Doe, John'
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                isLoanOfficer:
                    type: boolean
                    example: true
                externalId:
                    type: string
                    example: 17H
                isActive:
                    type: boolean
                    example: false
                joiningDate:
                    format: date
                    type: string
        PostStaffResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostStaffRequest:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                firstname:
                    type: string
                    example: John
                lastname:
                    type: string
                    example: Doe
                isLoanOfficer:
                    type: boolean
                    example: true
                externalId:
                    type: string
                    example: 17H
                mobileNo:
                    type: string
                    example: 353851239876
                isActive:
                    type: boolean
                    example: true
                joiningDate:
                    format: date
                    type: string
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd MMMM yyyy
        PutStaffResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PutStaffRequest:
            type: object
            properties:
                isLoanOfficer:
                    type: boolean
                    example: false
                externalId:
                    type: string
                    example: 17Hbb
        GetTellersResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 3
                officeId:
                    format: int64
                    type: integer
                    example: 1
                debitAccountId:
                    format: int64
                    type: integer
                    example: 0
                creditAccountId:
                    format: int64
                    type: integer
                    example: 0
                name:
                    type: string
                    example: Teller3
                startDate:
                    format: date
                    type: string
                status:
                    enum:
                        - INVALID
                        - PENDING
                        - ACTIVE
                        - INACTIVE
                        - CLOSED
                    type: string
                    example: ACTIVE
                officeName:
                    type: string
                    example: Head Office
        PostTellersResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 5
        PostTellersRequest:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Teller3
                description:
                    type: string
                    example: cash handling
                status:
                    enum:
                        - INVALID
                        - PENDING
                        - ACTIVE
                        - INACTIVE
                        - CLOSED
                    type: string
                    example: ACTIVE
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
                startDate:
                    format: date
                    type: string
        PutTellersResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 5
                changes:
                    $ref: '#/components/schemas/PutTellersResponseChanges'
        PutTellersResponseChanges:
            type: object
            properties:
                description:
                    type: string
                    example: teller cash handling
                endDate:
                    format: date
                    type: string
                startDate:
                    format: date
                    type: string
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
        PutTellersRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Teller3
                officeId:
                    format: int64
                    type: integer
                    example: 1
                description:
                    type: string
                    example: teller cash handling
                status:
                    enum:
                        - INVALID
                        - PENDING
                        - ACTIVE
                        - INACTIVE
                        - CLOSED
                    type: string
                    example: ACTIVE
                endDate:
                    format: date
                    type: string
                startDate:
                    format: date
                    type: string
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
        CashierData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                tellerId:
                    format: int64
                    type: integer
                officeId:
                    format: int64
                    type: integer
                staffId:
                    format: int64
                    type: integer
                description:
                    type: string
                startDate:
                    format: date-time
                    type: string
                endDate:
                    format: date-time
                    type: string
                startTime:
                    type: string
                endTime:
                    type: string
                officeName:
                    type: string
                tellerName:
                    type: string
                staffName:
                    type: string
                fullDay:
                    type: boolean
        GetTellersTellerIdCashiersResponse:
            type: object
            properties:
                tellerId:
                    format: int64
                    type: integer
                    example: 1
                tellerName:
                    type: string
                    example: Teller1
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                cashiers:
                    type: array
                    items:
                        $ref: '#/components/schemas/CashierData'
        GetTellersTellerIdCashiersCashierIdResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                tellerId:
                    format: int64
                    type: integer
                    example: 1
                staffId:
                    format: int64
                    type: integer
                    example: 1
                description:
                    type: string
                startDate:
                    format: date
                    type: string
                endDate:
                    format: date
                    type: string
                isFullDay:
                    type: boolean
                    example: true
                startTime:
                    type: string
                endTime:
                    type: string
                tellerName:
                    type: string
                    example: Teller1
                staffName:
                    type: string
                    example: 'Staff1, Test'
        GetTellersTellerIdCashiersTemplateResponse:
            type: object
            properties:
                tellerId:
                    format: int64
                    type: integer
                    example: 1
                tellerName:
                    type: string
                    example: Teller1
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                staffOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/StaffData'
        StaffData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                firstname:
                    type: string
                lastname:
                    type: string
                displayName:
                    type: string
                officeId:
                    format: int64
                    type: integer
                officeName:
                    type: string
                joiningDate:
                    format: date
                    type: string
        PostTellersTellerIdCashiersResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                subResourceId:
                    format: int64
                    type: integer
                    example: 2
        PostTellersTellerIdCashiersRequest:
            type: object
            properties:
                endDate:
                    format: date
                    type: string
                description:
                    type: string
                    example: teller cash handling
                isFullDay:
                    type: boolean
                    example: true
                staffId:
                    format: int64
                    type: integer
                    example: 3
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
                startDate:
                    format: date
                    type: string
        PutTellersTellerIdCashiersCashierIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                subResourceId:
                    format: int64
                    type: integer
                    example: 2
                changes:
                    $ref: '#/components/schemas/PutTellersTellerIdCashiersCashierIdResponseChanges'
        PutTellersTellerIdCashiersCashierIdResponseChanges:
            type: object
            properties:
                endDate:
                    format: date
                    type: string
                description:
                    type: string
                    example: Cashier updated.
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
        PutTellersTellerIdCashiersCashierIdRequest:
            type: object
            properties:
                endDate:
                    format: date
                    type: string
                description:
                    type: string
                    example: Cashier updated.
                isFullDay:
                    type: boolean
                    example: true
                staffId:
                    format: int64
                    type: integer
                    example: 1
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
                startDate:
                    format: date
                    type: string
        DeleteTellersTellerIdCashiersCashierIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostTellersTellerIdCashiersCashierIdAllocateResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                subResourceId:
                    format: int64
                    type: integer
                    example: 4
        PostTellersTellerIdCashiersCashierIdAllocateRequest:
            type: object
            properties:
                currencyCode:
                    type: string
                    example: USD
                txnAmount:
                    type: number
                    example: 5000
                txnNote:
                    type: string
                    example: allocating cash
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
                txnDate:
                    format: date-time
                    type: string
        PostTellersTellerIdCashiersCashierIdSettleResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                subResourceId:
                    format: int64
                    type: integer
                    example: 5
        PostTellersTellerIdCashiersCashierIdSettleRequest:
            type: object
            properties:
                currencyCode:
                    type: string
                    example: USD
                txnAmount:
                    type: number
                    example: 2000
                txnNote:
                    type: string
                    example: cash settlement
                locale:
                    type: string
                    example: en
                dateFormat:
                    type: string
                    example: dd-MM-yyyy
                txnDate:
                    format: date-time
                    type: string
        CashierTxnType:
            type: object
            properties:
                id:
                    format: int32
                    type: integer
                value:
                    type: string
        GetTellersTellerIdCashiersCashiersIdTransactionsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 8
                cashierId:
                    format: int64
                    type: integer
                    example: 15
                txnType:
                    $ref: '#/components/schemas/CashierTxnType'
                txnAmount:
                    type: number
                    example: 1000
                txnDate:
                    format: date-time
                    type: string
                entityId:
                    format: int64
                    type: integer
                    example: 2
                entityType:
                    type: string
                    example: loans
                txnNote:
                    type: string
                    example: 'Disbursement, Loan:2-000000002,Client:1-Test 1'
                createdDate:
                    format: date-time
                    type: string
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                tellerId:
                    format: int64
                    type: integer
                    example: 0
                cashierName:
                    type: string
                    example: 'B, Ramesh'
        CashierTransactionData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                cashierId:
                    format: int64
                    type: integer
                txnType:
                    $ref: '#/components/schemas/CashierTxnType'
                txnAmount:
                    type: number
                txnDate:
                    format: date-time
                    type: string
                entityId:
                    format: int64
                    type: integer
                entityType:
                    type: string
                txnNote:
                    type: string
                createdDate:
                    format: date-time
                    type: string
                officeId:
                    format: int64
                    type: integer
                officeName:
                    type: string
                tellerId:
                    format: int64
                    type: integer
                tellerName:
                    type: string
                cashierName:
                    type: string
                cashierData:
                    $ref: '#/components/schemas/CashierData'
                startDate:
                    format: date-time
                    type: string
                endDate:
                    format: date-time
                    type: string
        GetTellersTellerIdCashiersCashiersIdSummaryAndTransactionsResponse:
            type: object
            properties:
                sumCashAllocation:
                    type: number
                    example: 7000
                sumInwardCash:
                    type: number
                    example: 0
                sumOutwardCash:
                    type: number
                    example: 0
                sumCashSettlement:
                    type: number
                    example: 50
                netCash:
                    type: number
                    example: 6950
                officeName:
                    type: string
                    example: Head Office
                tellerId:
                    format: int64
                    type: integer
                    example: 1
                tellerName:
                    type: string
                    example: Teller1
                cashierId:
                    format: int64
                    type: integer
                    example: 1
                cashierName:
                    type: string
                    example: 'Staff1, Test'
                cashierTransactions:
                    $ref: '#/components/schemas/PageCashierTransactionData'
        Page:
            type: object
            properties:
                totalFilteredRecords:
                    format: int32
                    type: integer
                pageItems:
                    type: array
                    items:
                        type: object
        PageCashierTransactionData:
            type: object
            properties:
                totalFilteredRecords:
                    format: int32
                    type: integer
                pageItems:
                    type: array
                    items:
                        $ref: '#/components/schemas/CashierTransactionData'
        GetTellersTellerIdCashiersCashiersIdTransactionsTemplateResponse:
            type: object
            properties:
                cashierId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                tellerId:
                    format: int64
                    type: integer
                    example: 0
                tellerName:
                    type: string
                    example: Teller1
                cashierName:
                    type: string
                    example: 'Staff1, Test'
                cashierData:
                    $ref: '#/components/schemas/CashierData'
                startDate:
                    format: date
                    type: string
                endDate:
                    format: date
                    type: string
                currencyOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/CurrencyData'
        GetWorkingDaysTemplateResponse:
            type: object
            properties:
                repaymentRescheduleOptions:
                    type: array
                    items:
                        $ref: '#/components/schemas/EnumOptionData'
        GetWorkingDaysResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                recurrence:
                    type: string
                    example: 'FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR'
                repaymentRescheduleType:
                    $ref: '#/components/schemas/EnumOptionData'
                extendTermForDailyRepayments:
                    type: boolean
                    example: true
        PutWorkingDaysResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PutWorkingDaysRequest:
            type: object
            properties:
                recurrence:
                    type: string
                    example: 'FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR'
                locale:
                    type: string
                    example: en
                repaymentRescheduleType:
                    $ref: '#/components/schemas/EnumOptionData'
                extendTermForDailyRepayments:
                    type: boolean
                    example: true
        AddressData:
            type: object
        CommandProcessingResult:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                groupId:
                    format: int64
                    type: integer
                clientId:
                    format: int64
                    type: integer
                loanId:
                    format: int64
                    type: integer
                savingsId:
                    format: int64
                    type: integer
                subResourceId:
                    format: int64
                    type: integer
                transactionId:
                    type: string
                changes:
                    type: object
                    additionalProperties:
                        type: object
                productId:
                    format: int64
                    type: integer
                rollbackTransaction:
                    type: boolean
        ClientChargeData:
            type: object
        ClientCharge:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                client:
                    $ref: '#/components/schemas/Client'
                charge:
                    $ref: '#/components/schemas/Charge'
                chargeTime:
                    format: int32
                    type: integer
                dueDate:
                    format: date-time
                    type: string
                chargeCalculation:
                    format: int32
                    type: integer
                amount:
                    $ref: '#/components/schemas/Money'
                amountPaid:
                    $ref: '#/components/schemas/Money'
                amountWaived:
                    $ref: '#/components/schemas/Money'
                amountWrittenOff:
                    $ref: '#/components/schemas/Money'
                amountOutstanding:
                    $ref: '#/components/schemas/Money'
                penaltyCharge:
                    type: boolean
                paid:
                    type: boolean
                waived:
                    type: boolean
                inactivationDate:
                    format: date-time
                    type: string
                currency:
                    $ref: '#/components/schemas/MonetaryCurrency'
                active:
                    type: boolean
                notActive:
                    type: boolean
                clientId:
                    format: int64
                    type: integer
                officeId:
                    format: int64
                    type: integer
                onSpecifiedDueDate:
                    type: boolean
                dueLocalDate:
                    format: date
                    type: string
                new:
                    type: boolean
        ClientIdentifierData:
            type: object
        ClientTransactionData:
            type: object
        AccountSummaryCollectionData:
            type: object
        ClientData:
            required:
                - active
                - address
                - addressEnabled
                - middlename
                - officeId
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                accountNo:
                    type: string
                externalId:
                    type: string
                active:
                    type: boolean
                activationDate:
                    format: date
                    type: string
                firstname:
                    type: string
                middlename:
                    type: string
                lastname:
                    type: string
                fullname:
                    type: string
                gender:
                    $ref: '#/components/schemas/CodeValueData'
                officeId:
                    format: int64
                    type: integer
                address:
                    $ref: '#/components/schemas/AddressData'
                isAddressEnabled:
                    type: boolean
                addressEnabled:
                    type: boolean
                staff:
                    type: boolean
        LookupTableData:
            type: object
            properties:
                key:
                    type: string
                description:
                    type: string
                entries:
                    type: array
                    items:
                        $ref: '#/components/schemas/LookupTableEntry'
        LookupTableEntry:
            type: object
            properties:
                valueFrom:
                    format: int32
                    type: integer
                valueTo:
                    format: int32
                    type: integer
                score:
                    format: double
                    type: number
        ScorecardData:
            type: object
            properties:
                userId:
                    format: int64
                    type: integer
                clientId:
                    format: int64
                    type: integer
                createdOn:
                    format: date-time
                    type: string
                scorecardValues:
                    type: array
                    items:
                        $ref: '#/components/schemas/ScorecardValue'
        ScorecardValue:
            type: object
            properties:
                questionId:
                    format: int64
                    type: integer
                responseId:
                    format: int64
                    type: integer
                value:
                    format: int32
                    type: integer
        Component:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                survey:
                    $ref: '#/components/schemas/Survey'
                key:
                    type: string
                text:
                    type: string
                description:
                    type: string
                sequenceNo:
                    format: int32
                    type: integer
                new:
                    type: boolean
        Question:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                survey:
                    $ref: '#/components/schemas/Survey'
                responses:
                    type: array
                    items:
                        $ref: '#/components/schemas/Response'
                componentKey:
                    type: string
                key:
                    type: string
                text:
                    type: string
                description:
                    type: string
                sequenceNo:
                    format: int32
                    type: integer
                new:
                    type: boolean
        Response:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                question:
                    $ref: '#/components/schemas/Question'
                text:
                    type: string
                value:
                    format: int32
                    type: integer
                sequenceNo:
                    format: int32
                    type: integer
                new:
                    type: boolean
        Scorecard:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                survey:
                    $ref: '#/components/schemas/Survey'
                question:
                    $ref: '#/components/schemas/Question'
                response:
                    $ref: '#/components/schemas/Response'
                appUser:
                    $ref: '#/components/schemas/AppUser'
                client:
                    $ref: '#/components/schemas/Client'
                createdOn:
                    format: date-time
                    type: string
                value:
                    format: int32
                    type: integer
                new:
                    type: boolean
        Survey:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                components:
                    type: array
                    items:
                        $ref: '#/components/schemas/Component'
                questions:
                    type: array
                    items:
                        $ref: '#/components/schemas/Question'
                key:
                    type: string
                name:
                    type: string
                description:
                    type: string
                countryCode:
                    type: string
                validFrom:
                    format: date-time
                    type: string
                validTo:
                    format: date-time
                    type: string
                new:
                    type: boolean
        ComponentData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                key:
                    type: string
                text:
                    type: string
                description:
                    type: string
                sequenceNo:
                    format: int32
                    type: integer
        QuestionData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                responseDatas:
                    type: array
                    items:
                        $ref: '#/components/schemas/ResponseData'
                componentKey:
                    type: string
                key:
                    type: string
                text:
                    type: string
                description:
                    type: string
                sequenceNo:
                    format: int32
                    type: integer
        ResponseData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                text:
                    type: string
                value:
                    format: int32
                    type: integer
                sequenceNo:
                    format: int32
                    type: integer
        SurveyData:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                componentDatas:
                    type: array
                    items:
                        $ref: '#/components/schemas/ComponentData'
                questionDatas:
                    type: array
                    items:
                        $ref: '#/components/schemas/QuestionData'
                key:
                    type: string
                name:
                    type: string
                description:
                    type: string
                countryCode:
                    type: string
                validFrom:
                    format: date-time
                    type: string
                validTo:
                    format: date-time
                    type: string
        PutTemplatesTemplateIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PutTemplatesTemplateIdRequest:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Text
                entity:
                    format: int64
                    type: integer
                    example: 1
                type:
                    format: int64
                    type: integer
                    example: 0
                text:
                    type: string
                    example: 'This is a loan for {{loan.clientName}}'
                mappers:
                    type: array
                    items:
                        $ref: '#/components/schemas/TemplateMapper'
        TemplateMapper:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                mapperorder:
                    format: int32
                    type: integer
                mapperkey:
                    type: string
                mappervalue:
                    type: string
                new:
                    type: boolean
        DeleteTemplatesTemplateIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        GetTemplatesTemplateResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Text
                entity:
                    format: int64
                    type: integer
                    example: 1
                type:
                    format: int64
                    type: integer
                    example: 0
                text:
                    type: string
                    example: 'This is a loan for {{loan.clientName}}'
                mappers:
                    type: array
                    items:
                        $ref: '#/components/schemas/TemplateMapper'
        GetTemplatesResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Text
                entity:
                    format: int64
                    type: integer
                    example: 1
                type:
                    format: int64
                    type: integer
                    example: 0
                text:
                    type: string
                    example: 'This is a loan for {{loan.clientName}}'
                mappers:
                    type: array
                    items:
                        $ref: '#/components/schemas/TemplateMapper'
        GetTemplatesTemplateIdResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Text
                entity:
                    format: int64
                    type: integer
                    example: 1
                type:
                    format: int64
                    type: integer
                    example: 0
                text:
                    type: string
                    example: 'This is a loan for {{loan.clientName}}'
                mappers:
                    type: array
                    items:
                        $ref: '#/components/schemas/TemplateMapper'
        PostTemplatesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostTemplatesRequest:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Text
                entity:
                    format: int64
                    type: integer
                    example: 1
                type:
                    format: int64
                    type: integer
                    example: 0
                text:
                    type: string
                    example: 'This is a loan for {{loan.clientName}}'
                mappers:
                    type: array
                    items:
                        $ref: '#/components/schemas/TemplateMapper'
        GetPasswordPreferencesTemplateResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                description:
                    type: string
                    example: Password must be at least 1 character and not more that 50 characters long
                active:
                    type: boolean
                    example: true
                key:
                    type: string
                    example: simple
        PutPasswordPreferencesTemplateRequest:
            type: object
            properties:
                validationPolicyId:
                    format: int64
                    type: integer
                    example: 1
        GetPermissionsResponse:
            type: object
            properties:
                grouping:
                    type: string
                    example: authorisation
                code:
                    type: string
                    example: READ_PERMISSION
                entityName:
                    type: string
                    example: PERMISSION
                actionName:
                    type: string
                    example: READ
                selected:
                    type: boolean
                    example: true
        PutPermissionsRequest:
            type: object
            properties:
                permissions:
                    type: string
                    example: |-
                        "CREATE_GUARANTOR":true,
                            "CREATE_CLIENT":true
        GetRolesResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Super Users
                description:
                    type: string
                    example: This role provides all application permissions.
        PostRolesResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PostRolesRequest:
            type: object
            properties:
                name:
                    type: string
                    example: Another Role Name
                description:
                    type: string
                    example: A description outlining the purpose of this role in relation to the application.
        GetRolesRoleIdResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Super Users
                description:
                    type: string
                    example: This role provides all application permissions.
        PostRolesRoleIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        GetRolesRoleIdPermissionsResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                name:
                    type: string
                    example: Super Users
                description:
                    type: string
                    example: This role provides all application permissions.
                permissionUsageData:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetRolesRoleIdPermissionsResponsePermissionData'
        GetRolesRoleIdPermissionsResponsePermissionData:
            type: object
            properties:
                grouping:
                    type: string
                    example: authorisation
                code:
                    type: string
                    example: READ_PERMISSION
                entityName:
                    type: string
                    example: PERMISSION
                actionName:
                    type: string
                    example: READ
                selected:
                    type: boolean
                    example: false
        PostRolesRoleIdPermissionsResponsePermissions:
            type: object
            properties:
                ALL_FUNCTIONS_READ:
                    type: string
                    example: 'true'
        PutRolesRoleIdPermissionsResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 8
                permissions:
                    $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'
        PutRolesRoleIdPermissionsRequest:
            type: object
            properties:
                permissions:
                    $ref: '#/components/schemas/PostRolesRoleIdPermissionsResponsePermissions'
        DeleteRolesRoleIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
        PutRolesRoleIdResponse:
            type: object
            properties:
                resourceId:
                    format: int64
                    type: integer
                    example: 1
                changes:
                    $ref: '#/components/schemas/PutRolesRoleIdResponseChanges'
        PutRolesRoleIdResponseChanges:
            type: object
            properties:
                description:
                    type: string
                    example: some description(changed)
        PutRolesRoleIdRequest:
            type: object
            properties:
                description:
                    type: string
                    example: some description(changed)
        GetUsersTemplateResponse:
            type: object
            properties:
                allowedOffices:
                    type: array
                    items:
                        $ref: '#/components/schemas/OfficeData'
                availableRoles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleData'
        GetUsersResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                username:
                    type: string
                    example: mifos
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                firstname:
                    type: string
                    example: App
                lastname:
                    type: string
                    example: Administrator
                email:
                    type: string
                    example: demomfi@mifos.org
                passwordNeverExpires:
                    type: boolean
                    example: false
                staff:
                    $ref: '#/components/schemas/StaffData'
                selectedRoles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleData'
        GetUsersUserIdResponse:
            type: object
            properties:
                id:
                    format: int64
                    type: integer
                    example: 1
                username:
                    type: string
                    example: mifos
                officeId:
                    format: int64
                    type: integer
                    example: 1
                officeName:
                    type: string
                    example: Head Office
                firstname:
                    type: string
                    example: App
                lastname:
                    type: string
                    example: Administrator
                email:
                    type: string
                    example: demomfi@mifos.org
                passwordNeverExpires:
                    type: boolean
                    example: false
                staff:
                    $ref: '#/components/schemas/StaffData'
                availableRoles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleData'
                selectedRoles:
                    type: array
                    items:
                        $ref: '#/components/schemas/RoleData'
        PutUsersUserIdResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 11
                changes:
                    $ref: '#/components/schemas/PutUsersUserIdResponseChanges'
        PutUsersUserIdResponseChanges:
            type: object
            properties:
                firstname:
                    type: string
                    example: Test
                passwordEncoded:
                    type: string
                    example: abc3326b1bb376351c7baeb4175f5e0504e33aadf6a158474a6d71de1befae51
        PutUsersUserIdRequest:
            type: object
            properties:
                firstname:
                    type: string
                    example: Test
                password:
                    type: string
                    example: window75
                repeatPassword:
                    type: string
                    example: window75
        DeleteUsersUserIdResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 11
                changes:
                    $ref: '#/components/schemas/DeleteUsersUserIdResponseChanges'
        DeleteUsersUserIdResponseChanges:
            type: object
        PostUsersResponse:
            type: object
            properties:
                officeId:
                    format: int64
                    type: integer
                    example: 1
                resourceId:
                    format: int64
                    type: integer
                    example: 11
        PostUsersRequest:
            type: object
            properties:
                username:
                    type: string
                    example: newuser
                firstname:
                    type: string
                    example: Test
                lastname:
                    type: string
                    example: User
                email:
                    type: string
                    example: whatever@mifos.org
                officeId:
                    format: int64
                    type: integer
                    example: 1
                staffId:
                    format: int64
                    type: integer
                    example: 1
                Roles:
                    type: string
                    example: '[2,3]'
                sendPasswordToEmail:
                    type: boolean
                    example: true
                isSelfServiceUser:
                    type: boolean
                    example: true
tags:
    -
        name: Periodic Accrual Accounting
    -
        name: Accounting Closure
    -
        name: Mapping Financial Activities to Accounts
    -
        name: General Ledger Account
    -
        name: Journal Entries
    -
        name: Provisioning Entries
    -
        name: Accounting Rules
    -
        name: Batch API
    -
        name: Audits
    -
        name: Maker Checker (or 4-eye) functionality
    -
        name: Account number format
    -
        name: Cache
    -
        name: SMS Campaigns
    -
        name: Code Values
    -
        name: Codes
    -
        name: External Services
    -
        name: Global Configuration
    -
        name: CreditBureau Configuration
    -
        name: Data Tables
    -
        name: Entity-Datatable Checks
    -
        name: Reports
    -
        name: Run Reports
    -
        name: Documents
    -
        name: 'DomainNameapiv1{entity}{entityId}images'
    -
        name: DomainNameapiv1entitytoentitymapping
    -
        name: Hooks
    -
        name: Scheduler
    -
        name: MIFOSX-BATCH JOBS
    -
        name: Report Mailing Jobs
    -
        name: List Report Mailing Job History
    -
        name: Authentication HTTP Basic
    -
        name: Fetch authenticated user details
    -
        name: SMS
    -
        name: Likelihood
    -
        name: Poverty Line
    -
        name: Survey
    -
        name: Mix Report
    -
        name: Mix Taxonomy
    -
        name: Mix Mapping
    -
        name: Holidays
    -
        name: Currency
    -
        name: officetransactions
    -
        name: Offices
    -
        name: Provisioning Category
    -
        name: Provisioning Criteria
    -
        name: Staff
    -
        name: cashiers
    -
        name: Teller Cash Management
    -
        name: cashiersjournal
    -
        name: Working days
    -
        name: Clients Address
    -
        name: Client Charges
    -
        name: Client Identifier Api
    -
        name: Client Transaction
    -
        name: Client Api
    -
        name: SPM API - LookUp Table
    -
        name: SPM - Scorecards
    -
        name: SPM - Serveys
    -
        name: User Generated Documents
    -
        name: Password preferences
    -
        name: Permissions
    -
        name: Roles
    -
        name: Users
